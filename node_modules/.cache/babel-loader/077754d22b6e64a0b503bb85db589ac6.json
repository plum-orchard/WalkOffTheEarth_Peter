{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components'; // import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\n\nimport ReactCompareImage from 'react-compare-image';\nconst CompareWrapper = styled.div`\n\n    width: 400px;\n\n`;\n\nclass CompareImgInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'init',\n      answers: [\"test\"]\n    };\n\n    this.inputData = event => {\n      this.setState({\n        arr: event.target.value\n      });\n    };\n\n    this.newArr = this.props.data;\n\n    this.componentDidUpdate = () => {\n      if (this.props.data.includes(this.state.entry)) {\n        const str = this.state.entry;\n        var index = this.props.data.indexOf(this.state.entry);\n        this.props.data.splice(index, 1);\n      }\n\n      console.log(this.props.rightImage);\n    };\n\n    this.handleEntryChange = event => {\n      this.setState({\n        entry: event.target.value\n      });\n    };\n\n    this.renderAnswers = () => {\n      this.state.answers && this.state.answers.map((answers, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, answers));\n    };\n\n    this.submitData = this.submitData.bind(this);\n  }\n\n  submitData(event) {\n    event.preventDefault();\n    const arr = this.state.arr; // this.setState({answers: [\"test2\"]})\n\n    let tempArr = this.state.answers;\n    tempArr.push(\"test2\");\n    this.setState({\n      answers: tempArr\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.data);\n    this.setState({\n      arr: this.props.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CompareWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ReactCompareImage, {\n      leftImage: \"/img/Waldo_OG.jpg\",\n      rightImage: \"img/\" + this.props.rightImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      value: this.state.entry,\n      onChange: this.handleEntryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.answers.map((x, i) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, x))));\n  }\n\n}\n\nCompareImgInput.propTypes = {\n  data: React.propTypes,\n  rightImage: React.propTypes\n};\nexport default CompareImgInput;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx"],"names":["React","Component","styled","ReactCompareImage","CompareWrapper","div","CompareImgInput","constructor","props","state","value","answers","inputData","event","setState","arr","target","newArr","data","componentDidUpdate","includes","entry","str","index","indexOf","splice","console","log","rightImage","handleEntryChange","renderAnswers","map","i","submitData","bind","preventDefault","tempArr","push","componentDidMount","render","x","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n// import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\nimport ReactCompareImage from 'react-compare-image';\n\nconst CompareWrapper = styled.div`\n\n    width: 400px;\n\n`\n\nclass CompareImgInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.submitData = this.submitData.bind(this);\n\n      };\n\n\n    state = {\n        value: 'init',\n        answers: [\"test\"],\n    };\n\n    inputData = event =>{\n        this.setState({ arr: event.target.value});\n    };\n\n    submitData(event){\n        event.preventDefault();\n        const {arr} = this.state;\n        // this.setState({answers: [\"test2\"]})\n        let tempArr = this.state.answers;\n        tempArr.push(\"test2\");\n        this.setState({answers: tempArr})\n    };\n\n    newArr = this.props.data\n    \n    componentDidMount() {\n\n        console.log(this.props.data)\n        this.setState({\n            arr: this.props.data\n        })\n\n    };\n\n    componentDidUpdate = () => {\n\n            if(this.props.data.includes(this.state.entry)){\n                const str = this.state.entry\n                var index = this.props.data.indexOf(this.state.entry)\n                this.props.data.splice(index,1)\n            } \n\n            console.log(this.props.rightImage)\n\n    };\n\n\n    handleEntryChange = (event) => {\n\n        this.setState({\n            entry: event.target.value\n        })\n\n    };\n\n    renderAnswers = () => {\n        \n        this.state.answers && this.state.answers.map((answers, i) => (\n            <div>\n                {answers}\n            </div>\n        ))\n    };\n\n    render(){ \n        return(\n            <div>\n                <CompareWrapper>\n                 <ReactCompareImage leftImage=\"/img/Waldo_OG.jpg\" rightImage={\"img/\" + this.props.rightImage} />\n                </CompareWrapper>\n\n                {/* <ReactCompareImage leftImage=\"/img/Waldo_OG.jpg\" rightImage={\"/img/Waldo_OG.jpg\"} /> */}\n                <form >\n                    {/* {this.state.entry} */}\n                    <br/>\n                    <input name=\"title\" type=\"text\" value={this.state.entry} onChange={this.handleEntryChange} />\n                    <input type=\"submit\" value=\"Submit\" onClick={this.submitData}  />\n                </form>\n                <div className=\"answers\">\n                    {this.state.answers.map((x, i) => (\n                        <div>{x}</div>\n                    ))}\n                </div>\n            </div>\n\n        )\n      }\n\n}\n\nCompareImgInput.propTypes = {\n    data: React.propTypes,\n    rightImage: React.propTypes\n}\n\nexport default CompareImgInput"]},"metadata":{},"sourceType":"module"}