{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/memoryGame.jsx\";\nimport React, { Component } from 'react';\nimport \"./memoryGame.css\";\n\nclass memoryGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frameworks: ['angular2', 'vue', 'react', 'grunt', 'phantomjs', 'ember', 'babel', 'ionic', 'gulp', 'meteor', 'yeoman', 'yarn', 'nodejs', 'bower', 'browserify'],\n      duplicatedFrameworks: [],\n      randomizedFrameworks: [],\n      finalizedFrameworks: [],\n      openedFrameworks: []\n    };\n    this.start();\n  }\n\n  handleClick(name, index) {\n    if (this.state.openedFrameworks.length == 2) {\n      setTimeout(() => {\n        this.check();\n      }, 750);\n    } else {\n      let framework = {\n        name,\n        index\n      };\n      let finalizedFrameworks = this.state.finalizedFrameworks;\n      let frameworks = this.state.openedFrameworks;\n      finalizedFrameworks[index].close = false;\n      frameworks.push(framework);\n      this.setState({\n        openedFrameworks: frameworks,\n        finalizedFrameworks: finalizedFrameworks\n      });\n\n      if (this.state.openedFrameworks.length == 2) {\n        setTimeout(() => {\n          this.check();\n        }, 750);\n      }\n    }\n  }\n\n  check() {\n    let finalizedFrameworks = this.state.finalizedFrameworks;\n\n    if (this.state.openedFrameworks[0].name == this.state.openedFrameworks[1].name && this.state.openedFrameworks[0].index != this.state.openedFrameworks[1].index) {\n      finalizedFrameworks[this.state.openedFrameworks[0].index].complete = true;\n      finalizedFrameworks[this.state.openedFrameworks[1].index].complete = true;\n    } else {\n      finalizedFrameworks[this.state.openedFrameworks[0].index].close = true;\n      finalizedFrameworks[this.state.openedFrameworks[1].index].close = true;\n    }\n\n    this.setState({\n      finalizedFrameworks,\n      openedFrameworks: []\n    });\n  }\n\n  start() {\n    let finalizedFrameworks = [];\n    this.state.duplicatedFrameworks = this.state.frameworks.concat(this.state.frameworks);\n    this.state.randomizedFrameworks = this.shuffle(this.state.duplicatedFrameworks);\n    this.state.randomizedFrameworks.map((name, index) => {\n      finalizedFrameworks.push({\n        name,\n        close: true,\n        complete: false,\n        fail: false\n      });\n    });\n    this.state.finalizedFrameworks = finalizedFrameworks;\n  }\n\n  shuffle(array) {\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"playground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.finalizedFrameworks.map((framework, index) => {\n      return React.createElement(Card, {\n        framework: framework.name,\n        click: () => {\n          this.handleClick(framework.name, index);\n        },\n        close: framework.close,\n        complete: framework.complete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  clicked(framework) {\n    this.props.click(framework);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\" + (!this.props.close ? ' opened' : '') + (this.props.complete ? ' matched' : ''),\n      onClick: () => this.clicked(this.props.framework),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"front\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"?\"), React.createElement(\"div\", {\n      className: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://raw.githubusercontent.com/samiheikki/javascript-guessing-game/master/static/logos/\" + this.props.framework + \".png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default memoryGame;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/memoryGame.jsx"],"names":["React","Component","memoryGame","constructor","props","state","frameworks","duplicatedFrameworks","randomizedFrameworks","finalizedFrameworks","openedFrameworks","start","handleClick","name","index","length","setTimeout","check","framework","close","push","setState","complete","concat","shuffle","map","fail","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","render","Card","clicked","click"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./memoryGame.css\"\n\nclass memoryGame extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          frameworks: ['angular2','vue','react','grunt','phantomjs','ember','babel','ionic','gulp','meteor','yeoman','yarn','nodejs','bower','browserify'],\n          duplicatedFrameworks: [],\n          randomizedFrameworks: [],\n          finalizedFrameworks: [],\n          openedFrameworks: []\n        }\n        this.start()\n      }\n      handleClick(name,index){\n        if(this.state.openedFrameworks.length == 2){\n          setTimeout(() => {\n            this.check()\n          },750)\n        }else {\n          let framework = {\n            name,\n            index\n          }\n          let finalizedFrameworks = this.state.finalizedFrameworks\n          let frameworks = this.state.openedFrameworks\n          finalizedFrameworks[index].close = false\n          frameworks.push(framework)\n          this.setState({\n            openedFrameworks: frameworks,\n            finalizedFrameworks: finalizedFrameworks\n          })\n          if(this.state.openedFrameworks.length == 2){\n            setTimeout(() => {\n              this.check()\n            },750)\n          }\n        }\n      } \n      check(){\n        let finalizedFrameworks = this.state.finalizedFrameworks\n        if((this.state.openedFrameworks[0].name == this.state.openedFrameworks[1].name) && (this.state.openedFrameworks[0].index != this.state.openedFrameworks[1].index)){\n          finalizedFrameworks[this.state.openedFrameworks[0].index].complete = true\n          finalizedFrameworks[this.state.openedFrameworks[1].index].complete = true\n        }else {\n          finalizedFrameworks[this.state.openedFrameworks[0].index].close = true\n          finalizedFrameworks[this.state.openedFrameworks[1].index].close = true\n        }\n        this.setState({\n          finalizedFrameworks,\n          openedFrameworks: []\n        })\n      }\n      start(){\n        let finalizedFrameworks = [];\n        this.state.duplicatedFrameworks = this.state.frameworks.concat(this.state.frameworks)\n        this.state.randomizedFrameworks = this.shuffle(this.state.duplicatedFrameworks)\n        this.state.randomizedFrameworks.map((name,index) => {\n          finalizedFrameworks.push({\n            name,\n            close: true,\n            complete: false,\n            fail: false\n          })\n        })\n        this.state.finalizedFrameworks = finalizedFrameworks\n      }\n      shuffle(array){\n        let currentIndex = array.length, temporaryValue, randomIndex;\n        while (0 !== currentIndex) {\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n        return array\n      }\n      render(){\n        \n        return (\n          <div className=\"playground\">\n              {\n                this.state.finalizedFrameworks.map((framework, index) => {\n                  return <Card framework={framework.name} click={() => {this.handleClick(framework.name,index)}} close={framework.close} complete={framework.complete}/>\n                })\n              }\n          </div>\n        )\n      }\n  }\n  \n  class Card extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        \n        }\n      }\n    clicked(framework){\n      this.props.click(framework)\n    }\n    render(){\n      return (\n        <div className={\"card\" + (!this.props.close ? ' opened' : '') + (this.props.complete ? ' matched' : '')} onClick={() => this.clicked(this.props.framework)}>\n          <div className=\"front\">\n            ?\n          </div>\n          <div className=\"back\">\n            <img src={\"https://raw.githubusercontent.com/samiheikki/javascript-guessing-game/master/static/logos/\" + this.props.framework + \".png\"}/>\n          </div>\n        </div>\n      )\n    }\n  }\n  \nexport default memoryGame"]},"metadata":{},"sourceType":"module"}