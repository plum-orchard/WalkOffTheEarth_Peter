{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Main from \"./components/Main.jsx\";\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`;\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`;\nconst MapListItem = styled.div`\n\n  background-color: gray;\n  min-height: 40px;\n  min-width: 300px;\n  margin: 10px;\n  display: block;\n\n`;\n\nconst RenderBadges = props => {\n  // const gameStatus = props.gameStatus\n  const badgeArray = props.badges; // console.log(badgeArray)\n\n  const mapBadges = badgeArray.map(x => React.createElement(Badge, {\n    color: \"hi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, x));\n  return mapBadges;\n};\n\nconst tourStops = [{\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}];\nconst RenderMapList = styled.div`\n\n\n\n`; // const RenderMapList = (props) => {\n//   const locations = tourStops\n//   const changeGame = (arg) => {\n//     console.log(\"game type \" + arg)\n//   }\n//   const mapList = locations.map((x) => <MapListItem onClick={changeGame(\"crossword\")}>{x.city}</MapListItem>)\n//   return mapList\n// }\n\nconst TourStopList = styled.div`\n\n`;\nconst MapRender = styled.div`\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n`;\nconst CompleteGameButton = styled.div`\n\n\n\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      currentGame: \"no game yet\",\n      badges: [0, 0, 2, 0],\n      gameStart: true,\n      gameCompleted: false\n    };\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = () => {\n      // console.log(this.state.currentGame)\n      if (this.state.currentGame === \"crossword\") {} // check badges\n      // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n\n    };\n\n    this.changeTheme = (arg, action) => {\n      const newTheme = arg;\n      this.setState({\n        currentGame: newTheme\n      });\n      console.log(\"arg\" + arg);\n      console.log(this.state.currentGame);\n    };\n\n    this.gameColor = arg => {\n      console.log(\"hey \" + arg);\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return \"blue\";\n          break;\n\n        case \"coloring\":\n          return \"orange\";\n          break;\n\n        case \"waldo\":\n          return \"pink\";\n          break;\n\n        case \"puzzle\":\n          return \"gray\";\n          break;\n      }\n    };\n\n    this.completeCurrentGame = arg => {};\n  }\n\n  render() {\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(RenderBadges, {\n      gameStatus: gameStatus,\n      badges: this.state.badges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      soma: true,\n      onClick: this.changeTheme.bind(this, x.game),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, x.city, \" + \", x.game)))), React.createElement(MapRender, {\n      currentGame: this.state.currentGame,\n      gameColor: this.gameColor(this.state.currentGame),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, this.state.currentGame, React.createElement(CompleteGameButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"complete game\"))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js"],"names":["React","Component","styled","BrowserRouter","Router","Switch","Route","Link","Main","Scoreboard","div","Badge","props","color","MapContainer","Map","MapListItem","RenderBadges","badgeArray","badges","mapBadges","map","x","tourStops","date","city","venue","game","RenderMapList","TourStopList","MapRender","gameColor","CompleteGameButton","App","state","score","currentGame","gameStart","gameCompleted","componentDidMount","componentDidUpdate","changeTheme","arg","action","newTheme","setState","console","log","expr","completeCurrentGame","render","gameStatus","locations","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Main from \"./components/Main.jsx\"\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`\n\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`\n\nconst MapListItem = styled.div`\n\n  background-color: gray;\n  min-height: 40px;\n  min-width: 300px;\n  margin: 10px;\n  display: block;\n\n`\n\nconst RenderBadges = (props) => {\n\n  // const gameStatus = props.gameStatus\n  const badgeArray = props.badges\n\n  // console.log(badgeArray)\n\n  const mapBadges = badgeArray.map((x) => <Badge color=\"hi\">{x}</Badge>)\n\n  return mapBadges\n\n}\n\nconst tourStops = [\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n];\n\nconst RenderMapList = styled.div`\n\n\n\n`\n\n// const RenderMapList = (props) => {\n\n//   const locations = tourStops\n\n//   const changeGame = (arg) => {\n\n//     console.log(\"game type \" + arg)\n\n//   }\n\n//   const mapList = locations.map((x) => <MapListItem onClick={changeGame(\"crossword\")}>{x.city}</MapListItem>)\n\n//   return mapList\n\n// }\n\nconst TourStopList = styled.div`\n\n`\n\nconst MapRender = styled.div`\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n`\n\nconst CompleteGameButton = styled.div`\n\n\n\n`\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    currentGame: \"no game yet\",\n    badges: [0, 0, 2, 0],\n    gameStart: true,\n    gameCompleted: false,\n  }\n\n  componentDidMount = () => {\n\n\n\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.state.currentGame)\n\n    if (this.state.currentGame === \"crossword\") {\n\n\n\n    }\n\n    // check badges\n    // if badges are complete\n    // Change gameCompleted\n    // GivePrize\n\n  }\n\n\n\n  changeTheme = (arg, action) => {\n    const newTheme = arg\n    this.setState({ currentGame: newTheme });\n    console.log(\"arg\" +\n      arg)\n    console.log(this.state.currentGame);\n  }\n\n  gameColor = (arg) => {\n    console.log(\"hey \" + arg)\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return \"blue\";\n        break;\n      case \"coloring\":\n        return \"orange\";\n        break;\n      case \"waldo\":\n        return \"pink\";\n        break;\n      case \"puzzle\":\n        return \"gray\";\n        break;\n    }\n  }\n\n  completeCurrentGame = (arg) => {\n\n  }\n\n  render() {\n\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n\n\n    return (\n      <Router>\n        <div>\n\n          <Scoreboard>\n            <RenderBadges gameStatus={gameStatus} badges={this.state.badges} />\n          </Scoreboard>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <MapContainer>\n\n                <Map>\n\n                  <TourStopList>\n                    <RenderMapList>\n\n\n                      {tourStops && tourStops.map((x, i) => (\n                        <MapListItem soma onClick={this.changeTheme.bind(this, x.game)} >\n                          {x.city} + {x.game}\n                        </MapListItem>\n                      ))\n                      }\n\n\n\n\n                    </RenderMapList>\n                  </TourStopList>\n\n                  <MapRender currentGame={this.state.currentGame} gameColor={this.gameColor(this.state.currentGame)}>{this.state.currentGame}\n                  <CompleteGameButton>complete game</CompleteGameButton>\n                  \n                  </MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n              {/* <Main /> */}\n            </Route>\n\n            <Route path=\"/map\">\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}