{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`;\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`;\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n`;\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`;\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n\n`;\nconst MapRender = styled.div`\n\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`;\nconst CompleteGameButton = styled.div`\n\n  display: ${props => props.currentGame == \"home\" ? \"none\" : \"block\"};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`;\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-color: red;\n\n`;\nconst MapListBadgeCrossword = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  blue;\n\n`;\nconst MapListBadgeColoring = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  gray;\n\n`;\nconst MapListBadgeWaldo = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  pink;\n\n`;\nconst MapListBadgePuzzle = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  orange;\n\n`;\nconst sfdata = {\n  id: 'simple/1',\n  number: 1,\n  name: 'Simple Crossword 1',\n  date: 1542326400000,\n  entries: [{\n    id: '1-across',\n    number: 1,\n    humanNumber: '1',\n    clue: 'Toy on a string (2-2)',\n    direction: 'across',\n    length: 4,\n    group: ['1-across'],\n    position: {\n      x: 0,\n      y: 0\n    },\n    separatorLocations: {\n      '-': [2]\n    },\n    solution: 'YOYO'\n  }, {\n    id: '2-across',\n    number: 2,\n    humanNumber: '2',\n    clue: 'Have a rest (3,4)',\n    direction: 'across',\n    length: 7,\n    group: ['2-across'],\n    position: {\n      x: 0,\n      y: 2\n    },\n    separatorLocations: {\n      ',': [3]\n    },\n    solution: 'LIEDOWN'\n  }, {\n    id: '1-down',\n    number: 1,\n    humanNumber: '1',\n    clue: 'Colour (6)',\n    direction: 'down',\n    length: 6,\n    group: ['1-down'],\n    position: {\n      x: 0,\n      y: 0\n    },\n    separatorLocations: {},\n    solution: 'YELLOW'\n  }, {\n    id: '3-down',\n    number: 3,\n    humanNumber: '3',\n    clue: 'Bits and bobs (4,3,4)',\n    direction: 'down',\n    length: 7,\n    group: ['3-down', '4-down'],\n    position: {\n      x: 3,\n      y: 0\n    },\n    separatorLocations: {\n      ',': [4]\n    },\n    solution: 'ODDSAND'\n  }, {\n    id: '4-down',\n    number: 4,\n    humanNumber: '4',\n    clue: 'See 3 down',\n    direction: 'down',\n    length: 4,\n    group: ['3-down', '4-down'],\n    position: {\n      x: 6,\n      y: 1\n    },\n    separatorLocations: {},\n    solution: 'ENDS'\n  }],\n  solutionAvailable: true,\n  dateSolutionAvailable: 1542326400000,\n  dimensions: {\n    cols: 13,\n    rows: 13\n  },\n  crosswordType: 'quick'\n};\nconst tourStops = [{\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\",\n  data: sfdata\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      completedCrosswords: 0,\n      completedWaldo: 0,\n      completedPuzzle: 0,\n      completedColoring: 0,\n      gameStart: true,\n      gameCompleted: false,\n      currentGame: \"home\",\n      currentCity: \"no city\",\n      currentState: \"no state\",\n      currentDate: \"no date\",\n      currentDate: \"no data\"\n    };\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = () => {\n      // console.log(this.state.currentGame)\n      // check badges\n      // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n      if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n        alert(\"congratulations!\");\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        gameCompleted: true\n      });\n    };\n\n    this.changeGame = (game, city, state, date, data) => {\n      const newGame = game;\n      const newCity = city;\n      const newState = state;\n      const newDate = date;\n      const newData = data;\n      this.setState({\n        currentGame: newGame\n      });\n      this.setState({\n        currentCity: newCity\n      });\n      this.setState({\n        currentAction: newState\n      });\n      this.setState({\n        currentDate: newDate\n      });\n      this.setState({\n        currentData: newData\n      });\n      console.log(this.state.currentGame);\n    };\n\n    this.gameColor = arg => {\n      console.log(\"hey \" + arg);\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return \"blue\";\n          break;\n\n        case \"coloring\":\n          return \"orange\";\n          break;\n\n        case \"waldo\":\n          return \"pink\";\n          break;\n\n        case \"puzzle\":\n          return \"gray\";\n          break;\n\n        case \"home\":\n          return \"lightblue\";\n          break;\n      }\n    };\n\n    this.completeCurrentGame = arg => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedCrosswords: this.state.completedCrosswords + 1\n          });\n          return;\n          break;\n\n        case \"coloring\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedColoring: this.state.completedColoring + 1\n          });\n          return;\n          break;\n\n        case \"waldo\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedWaldo: this.state.completedWaldo + 1\n          });\n          return;\n          break;\n\n        case \"puzzle\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedPuzzle: this.state.completedPuzzle + 1\n          });\n          return;\n          break;\n      }\n    };\n\n    this.renderGame = (arg, data) => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          return React.createElement(Crossword, {\n            data: this.state.currentData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 434\n            },\n            __self: this\n          });\n          break;\n\n        case \"coloring\":\n          return;\n          break;\n\n        case \"waldo\":\n          return;\n          break;\n\n        case \"puzzle\":\n          return;\n          break;\n      }\n    };\n\n    this.renderMapListBadge = arg => {\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return React.createElement(MapListBadgeCrossword, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 455\n            },\n            __self: this\n          });\n\n        case \"coloring\":\n          return React.createElement(MapListBadgeColoring, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 457\n            },\n            __self: this\n          });\n\n        case \"waldo\":\n          return React.createElement(MapListBadgeWaldo, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 459\n            },\n            __self: this\n          });\n\n        case \"puzzle\":\n          return React.createElement(MapListBadgePuzzle, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461\n            },\n            __self: this\n          });\n      }\n    };\n  }\n\n  render() {\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, this.state.completedCrosswords), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, this.state.completedWaldo), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, this.state.completedColoring), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, this.state.completedPuzzle)), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      soma: true,\n      onClick: this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, x.city, \" \", this.renderMapListBadge(x.game))))), React.createElement(MapRender, {\n      currentGame: this.state.currentGame,\n      gameColor: this.gameColor(this.state.currentGame),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, this.state.currentCity, this.renderGame(this.state.currentGame)), React.createElement(CompleteGameButton, {\n      currentGame: this.state.currentGame,\n      onClick: () => {\n        this.completeCurrentGame(this.state.currentGame);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"complete game\"))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js"],"names":["React","Component","styled","Crossword","BrowserRouter","Router","Switch","Route","Link","Scoreboard","div","Badge","props","color","MapContainer","Map","MapListItem","RenderMapList","TourStopList","MapRender","gameColor","CompleteGameButton","currentGame","GameContainer","MapListBadgeCrossword","MapListBadgeColoring","MapListBadgeWaldo","MapListBadgePuzzle","sfdata","id","number","name","date","entries","humanNumber","clue","direction","length","group","position","x","y","separatorLocations","solution","solutionAvailable","dateSolutionAvailable","dimensions","cols","rows","crosswordType","tourStops","city","venue","game","data","App","state","score","completedCrosswords","completedWaldo","completedPuzzle","completedColoring","gameStart","gameCompleted","currentCity","currentState","currentDate","componentDidMount","componentDidUpdate","alert","finishGame","setState","changeGame","newGame","newCity","newState","newDate","newData","currentAction","currentData","console","log","arg","expr","completeCurrentGame","renderGame","renderMapListBadge","render","gameStatus","locations","map","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`\n\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`\n\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n`\n\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`\n\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n\n`\n\nconst MapRender = styled.div`\n\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`\n\nconst CompleteGameButton = styled.div`\n\n  display: ${props => (props.currentGame == \"home\" ? \"none\" : \"block\")};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`\n\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-color: red;\n\n`\n\nconst MapListBadgeCrossword = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  blue;\n\n`\n\nconst MapListBadgeColoring = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  gray;\n\n`\nconst MapListBadgeWaldo = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  pink;\n\n`\nconst MapListBadgePuzzle = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  orange;\n\n`\n\n\nconst sfdata = \n{\n  id: 'simple/1',\n  number: 1,\n  name: 'Simple Crossword 1',\n  date: 1542326400000,\n  entries: [\n    {\n      id: '1-across',\n      number: 1,\n      humanNumber: '1',\n      clue: 'Toy on a string (2-2)',\n      direction: 'across',\n      length: 4,\n      group: ['1-across'],\n      position: { x: 0, y: 0 },\n      separatorLocations: {\n        '-': [2],\n      },\n      solution: 'YOYO',\n    },\n    {\n      id: '2-across',\n      number: 2,\n      humanNumber: '2',\n      clue: 'Have a rest (3,4)',\n      direction: 'across',\n      length: 7,\n      group: ['2-across'],\n      position: { x: 0, y: 2 },\n      separatorLocations: {\n        ',': [3],\n      },\n      solution: 'LIEDOWN',\n    },\n    {\n      id: '1-down',\n      number: 1,\n      humanNumber: '1',\n      clue: 'Colour (6)',\n      direction: 'down',\n      length: 6,\n      group: ['1-down'],\n      position: { x: 0, y: 0 },\n      separatorLocations: {},\n      solution: 'YELLOW',\n    },\n    {\n      id: '3-down',\n      number: 3,\n      humanNumber: '3',\n      clue: 'Bits and bobs (4,3,4)',\n      direction: 'down',\n      length: 7,\n      group: ['3-down', '4-down'],\n      position: { x: 3, y: 0 },\n      separatorLocations: {\n        ',': [4],\n      },\n      solution: 'ODDSAND',\n    },\n    {\n      id: '4-down',\n      number: 4,\n      humanNumber: '4',\n      clue: 'See 3 down',\n      direction: 'down',\n      length: 4,\n      group: ['3-down', '4-down'],\n      position: {\n        x: 6,\n        y: 1,\n      },\n      separatorLocations: {},\n      solution: 'ENDS',\n    },\n  ],\n  solutionAvailable: true,\n  dateSolutionAvailable: 1542326400000,\n  dimensions: {\n    cols: 13,\n    rows: 13,\n  },\n  crosswordType: 'quick',\n}\n\nconst tourStops = [\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\",\n    data: sfdata\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n];\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n\n    completedCrosswords: 0,\n    completedWaldo: 0,\n    completedPuzzle: 0,\n    completedColoring: 0,\n    gameStart: true,\n    gameCompleted: false,\n\n    currentGame: \"home\",\n    currentCity: \"no city\",\n    currentState: \"no state\",\n    currentDate: \"no date\",\n    currentDate: \"no data\",\n  }\n\n  componentDidMount = () => {\n\n\n\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.state.currentGame)\n\n    // check badges\n    // if badges are complete\n    // Change gameCompleted\n    // GivePrize\n\n    if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n      alert(\"congratulations!\")\n    }\n\n  }\n\n  finishGame = () => {\n    this.setState({ gameCompleted: true });\n  }\n\n  changeGame = (game, city, state, date, data) => {\n    const newGame = game;\n    const newCity = city;\n    const newState = state; \n    const newDate = date;\n    const newData = data;\n    this.setState({ currentGame: newGame });\n    this.setState({ currentCity: newCity });\n    this.setState({ currentAction: newState });\n    this.setState({ currentDate: newDate });\n    this.setState({ currentData: newData });\n    console.log(this.state.currentGame);\n  }\n\n  gameColor = (arg) => {\n    console.log(\"hey \" + arg)\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return \"blue\";\n        break;\n      case \"coloring\":\n        return \"orange\";\n        break;\n      case \"waldo\":\n        return \"pink\";\n        break;\n      case \"puzzle\":\n        return \"gray\";\n        break;\n      case \"home\":\n        return \"lightblue\";\n        break;\n    }\n  }\n\n  completeCurrentGame = (arg) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedCrosswords: (this.state.completedCrosswords + 1) })\n        return;\n        break;\n      case \"coloring\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedColoring: (this.state.completedColoring + 1) })\n        return;\n        break;\n      case \"waldo\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedWaldo: (this.state.completedWaldo + 1) })\n        return;\n        break;\n      case \"puzzle\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedPuzzle: (this.state.completedPuzzle + 1) })\n        return;\n        break;\n    }\n  }\n\n  renderGame = (arg, data) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        return <Crossword data={this.state.currentData}\n        />;\n        break;\n      case \"coloring\":\n        return;\n        break;\n      case \"waldo\":\n        return;\n        break;\n      case \"puzzle\":\n        return;\n        break;\n    }\n\n\n  }\n\n  renderMapListBadge= (arg) => {\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return <MapListBadgeCrossword type={expr}/>;\n      case \"coloring\":\n        return <MapListBadgeColoring type={expr}/>;\n      case \"waldo\":\n        return <MapListBadgeWaldo type={expr}/>;\n      case \"puzzle\":\n        return <MapListBadgePuzzle type={expr}/>;\n    }\n  }\n\n  render() {\n\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n\n    return (\n      <Router>\n        <div>\n\n          <Scoreboard>\n            {/* <RenderBadges gameStatus={gameStatus} badges={this.state.badges} /> */}\n            <Badge>{this.state.completedCrosswords}</Badge>\n            <Badge>{this.state.completedWaldo}</Badge>\n            <Badge>{this.state.completedColoring}</Badge>\n            <Badge>{this.state.completedPuzzle}</Badge>\n          </Scoreboard>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <MapContainer>\n\n                <Map>\n\n                  <TourStopList>\n                    <RenderMapList>\n\n                      {tourStops && tourStops.map((x, i) => (\n                        <MapListItem soma onClick={this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data)} >\n                          {x.city} {this.renderMapListBadge(x.game)}\n                        </MapListItem>\n                      ))\n                      }\n\n                    </RenderMapList>\n                  </TourStopList>\n\n                  <MapRender currentGame={this.state.currentGame} gameColor={this.gameColor(this.state.currentGame)}>\n                    <GameContainer>{this.state.currentCity}\n                    {this.renderGame(this.state.currentGame)}\n                      \n                    </GameContainer>\n                    <CompleteGameButton currentGame={this.state.currentGame} onClick={() => { this.completeCurrentGame(this.state.currentGame) }}>\n\n                      complete game</CompleteGameButton>\n\n                  </MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n            </Route>\n\n            <Route path=\"/map\">\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}