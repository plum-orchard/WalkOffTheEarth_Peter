{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  // background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  padding: 20px;\n  // background-color: ${props => props.color || \"red\"}\n\n`;\nconst MapContainer = styled.div`\n\n  background-image: url(img/background.jpg);\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  // border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`;\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n\n`;\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`;\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n  background-color: white;\n  padding-left: 10px;\n\n`;\nconst MapRender = styled.div`\n\n  padding: 15px;\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`;\nconst CompleteGameButton = styled.div`\n\n  display: ${props => props.currentGame == \"home\" ? \"none\" : \"block\"};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`;\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  // background-color: red;\n\n`;\nconst MapListBadgeCrossword = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  blue;\n\n`;\nconst MapListBadgeColoring = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  orange;\n\n`;\nconst MapListBadgeWaldo = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  pink;\n\n`;\nconst MapListBadgePuzzle = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  gray;\n\n`;\nconst sfdata = {\n  id: 'simple/1',\n  number: 1,\n  name: 'Simple Crossword 1',\n  date: 1542326400000,\n  entries: [{\n    id: '1-across',\n    number: 1,\n    humanNumber: '1',\n    clue: 'Toy on a string (2-2)',\n    direction: 'across',\n    length: 4,\n    group: ['1-across'],\n    position: {\n      x: 0,\n      y: 0\n    },\n    separatorLocations: {\n      '-': [2]\n    },\n    solution: 'YOYO'\n  }, {\n    id: '2-across',\n    number: 2,\n    humanNumber: '2',\n    clue: 'Have a rest (3,4)',\n    direction: 'across',\n    length: 7,\n    group: ['2-across'],\n    position: {\n      x: 0,\n      y: 2\n    },\n    separatorLocations: {\n      ',': [3]\n    },\n    solution: 'LIEDOWN'\n  }, {\n    id: '1-down',\n    number: 1,\n    humanNumber: '1',\n    clue: 'Colour (6)',\n    direction: 'down',\n    length: 6,\n    group: ['1-down'],\n    position: {\n      x: 0,\n      y: 0\n    },\n    separatorLocations: {},\n    solution: 'YELLOW'\n  }, {\n    id: '3-down',\n    number: 3,\n    humanNumber: '3',\n    clue: 'Bits and bobs (4,3,4)',\n    direction: 'down',\n    length: 7,\n    group: ['3-down', '4-down'],\n    position: {\n      x: 3,\n      y: 0\n    },\n    separatorLocations: {\n      ',': [4]\n    },\n    solution: 'ODDSAND'\n  }, {\n    id: '4-down',\n    number: 4,\n    humanNumber: '4',\n    clue: 'See 3 down',\n    direction: 'down',\n    length: 4,\n    group: ['3-down', '4-down'],\n    position: {\n      x: 6,\n      y: 1\n    },\n    separatorLocations: {},\n    solution: 'ENDS'\n  }],\n  solutionAvailable: true,\n  dateSolutionAvailable: 1542326400000,\n  dimensions: {\n    cols: 13,\n    rows: 13\n  },\n  crosswordType: 'quick'\n};\nconst tourStops = [{\n  \"date1\": 2,\n  \"date2\": 12,\n  \"venue\": \"Palace of the Fine Arts\",\n  \"city\": \"San Francisco\",\n  \"state\": \"California\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 13,\n  \"venue\": \"Palace Theatre\",\n  \"city\": \"Los Angeles\",\n  \"state\": \"California\",\n  \"game\": \"waldo\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 14,\n  \"venue\": \"The Magnolia\",\n  \"city\": \"El Cajon\",\n  \"state\": \"California\",\n  \"game\": \"coloring\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 15,\n  \"venue\": \"Fox Performing Arts Center\",\n  \"city\": \"Riverside\",\n  \"state\": \"California\",\n  \"game\": \"waldo\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 16,\n  \"venue\": \"The Van Buren\",\n  \"city\": \"Phoenix\",\n  \"state\": \"Arizona\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 18,\n  \"venue\": \"Majestic Theater\",\n  \"city\": \"Dallas\",\n  \"state\": \"Texas\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 19,\n  \"venue\": \"The Aztec Theater\",\n  \"city\": \"San Antonio\",\n  \"state\": \"Texas\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 21,\n  \"venue\": \"Mars Music Hall\",\n  \"city\": \"Huntsville\",\n  \"state\": \"Alabama\",\n  \"game\": \"coloring\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 22,\n  \"venue\": \"Seven Seas Concert Series\",\n  \"city\": \"Orlando\",\n  \"state\": \"Florida\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 24,\n  \"venue\": \"Buckhead Theatre\",\n  \"city\": \"Atlanta\",\n  \"state\": \"Georgia\",\n  \"game\": \"waldo\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 2,\n  \"date2\": 24,\n  \"venue\": \"Walker Theatre\",\n  \"city\": \"Chattanooga\",\n  \"state\": \"Tennesee\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 1,\n  \"venue\": \"State Theatre\",\n  \"city\": \"Portland\",\n  \"state\": \"Oregon\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 2,\n  \"venue\": \"The Fillmore\",\n  \"city\": \"Philadelphia\",\n  \"state\": \"Pennsylvania\",\n  \"game\": \"waldo\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 3,\n  \"venue\": \"The National\",\n  \"city\": \"Richmond\",\n  \"state\": \"Virginia\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 5,\n  \"venue\": \"Lincoln Theatre\",\n  \"city\": \"Washington\",\n  \"state\": \"DC\",\n  \"game\": \"coloring\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 7,\n  \"venue\": \"Somerville Theatre\",\n  \"city\": \"Somerville\",\n  \"state\": \"Massachussets\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 8,\n  \"venue\": \"Paramount Theatre\",\n  \"city\": \"Ashbury Park\",\n  \"state\": \"New Jersey\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 9,\n  \"venue\": \"Whitaker Center\",\n  \"city\": \"Harrisburg\",\n  \"state\": \"Pennsylvania\",\n  \"game\": \"waldo\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 10,\n  \"venue\": \"Royal Oak Music Theatre\",\n  \"city\": \"Royal Oak\",\n  \"state\": \"Michigan\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 14,\n  \"venue\": \"20 Monroe Live\",\n  \"city\": \"Grand Rapids\",\n  \"state\": \"Michigan\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 16,\n  \"venue\": \"The Pageant\",\n  \"city\": \"St. Louis\",\n  \"state\": \"Missouri\",\n  \"game\": \"coloring\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 17,\n  \"venue\": \"The Center for the Performin Arts\",\n  \"city\": \"Camel\",\n  \"state\": \"Indiana\",\n  \"game\": \"waldo\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 18,\n  \"venue\": \"Athenaeum Theatre\",\n  \"city\": \"Chicago\",\n  \"state\": \"Illinois\",\n  \"game\": \"puzzle\",\n  \"data\": \"none\"\n}, {\n  \"date1\": 4,\n  \"date2\": 19,\n  \"venue\": \"The Fillmore\",\n  \"city\": \"Minneapolis\",\n  \"state\": \"Minnesota\",\n  \"game\": \"crossword\",\n  \"data\": \"none\"\n}];\n\nlet box = () => {\n  return React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 4025.47 2578.22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    id: \"Layer_2\",\n    \"data-name\": \"Layer 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2718.21 1967.83 2717.61 1974.84 2737.56 1995.29 2735.13 2013.62 2730.58 2026.64 2659.55 2022.77 2645.49 1884.11 2646.78 1738.09 2650.05 1619.7 2643.21 1602.67 2736.64 1594 2832.06 1584.93 2864.49 1694.62 2893.06 1782.17 2907.45 1809.11 2916.1 1824.46 2905.36 1841.86 2904.52 1871.17 2910.76 1887.69 2910.76 1903.93 2910.44 1919.04 2916.74 1930.02 2921.9 1940.25 2762.47 1958.36 2718.21 1967.83\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2525.43 1518.83 2525.19 1526.36 2518.62 1539.63 2506.28 1549.28 2504.43 1564.46 2493.51 1577.12 2496.1 1603.38 2488.14 1612.37 2487.19 1619.63 2474.29 1627.22 2474.81 1640.35 2466.26 1665.18 2457.89 1670.86 2445.3 1683.96 2438.36 1703.07 2423.59 1735.61 2423 1757.22 2433 1780.57 2430.29 1798.63 2365.5 1798.71 2281.98 1804.93 2207.98 1806.72 2211.31 1755.07 2193.69 1755.07 2178.96 1756.54 2174.86 1750.66 2175.7 1671.22 2175.78 1582.98 2159.59 1487.44 2248.48 1486.8 2329.29 1484.25 2406.38 1480.7 2489.86 1481.38 2496.69 1492.16 2489.06 1502.4 2481.49 1512.71 2477.52 1521.97 2525.43 1518.83\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"1644.53 1070.22 1638.49 1157.97 1638.33 1160.88 1629.74 1300.1 1620.85 1432.75 1551.18 1427.43 1464.53 1420.04 1341.68 1407.7 1227.73 1393.97 1115.11 1378.68 1166.37 1019.96 1234.52 1029.37 1302.72 1038.08 1439.38 1053.16 1507.85 1059.6 1644.53 1070.22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3690.43 823.56 3689.91 837.45 3661.97 849.71 3624.66 864.15 3578.11 898.09 3573.05 887.95 3585.34 875.73 3578.25 869.59 3564.93 801.44 3615.49 790.14 3676.86 775.89 3690.43 823.56\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3400.2 1135.17 3392.91 1144.95 3392.15 1139.69 3384.76 1133.3 3389.48 1127.88 3400.2 1135.17\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3537.75 1144.24 3491.51 1154.86 3461.02 1043.48 3464.65 1035.33 3469.87 1029.96 3485.58 1031.16 3477.59 1042.7 3483.24 1059.28 3508.49 1103.52 3537.75 1144.24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3385.15 2323.12 3381.93 2405.25 3349.74 2427.41 3306.81 2423.17 3287.1 2385.16 3252.21 2369.16 3196.34 2297.34 3146.36 2236.69 3132.55 2193.96 3138.17 2136.55 3112.3 2088.4 3052.97 2041.29 3003.27 2012.91 2919.03 2062.21 2897.79 2038.89 2818.61 2006.27 2730.58 2026.64 2735.13 2013.62 2737.56 1995.29 2717.61 1974.84 2718.21 1967.83 2762.47 1958.36 2921.9 1940.25 2936.75 1963.18 3016.01 1957.2 3144.85 1952.54 3153.06 1967.43 3161.93 1957.76 3157.26 1926.38 3166.17 1921.83 3182.65 1926.06 3199.38 1925.1 3220.22 1989.31 3262.47 2058.51 3309.78 2120.27 3315.88 2155.6 3367.32 2242.43 3385.15 2323.12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2453.81 971.63 2451.73 996.2 2440.47 1017.47 2436.33 1024.26 2421.1 1030.4 2397.99 1036.2 2392.72 1052.09 2401.59 1058.68 2405.26 1072.53 2397.15 1088.69 2393.32 1102.68 2376.36 1117.05 2375.8 1133.62 2365.98 1126.56 2352.09 1112.49 2276.74 1117.53 2197.32 1120.48 2135.44 1121.68 2073.44 1122.08 2068.86 1105.67 2070.77 1089.45 2069.25 1073.85 2062.18 1047.7 2057.68 1036.88 2052.75 1033.93 2052.28 1012.96 2048.05 997.96 2035.79 980.82 2035.99 973.33 2031.75 958.34 2028.8 949.29 2028.92 940.98 2018.14 930.84 2023.62 915.99 2027.16 901.44 2028.8 891.6 2020.37 879.5 2020.63 857.34 2029.4 857.34 2101.7 857.42 2191.58 854.91 2288.12 851.42 2374.89 849.15 2376.08 854.05 2385.45 868 2379.91 875.17 2381.14 894.23 2384.29 902.18 2389.38 916.35 2411.7 923.8 2418.99 937.27 2423.32 943.93 2431.53 948.08 2435.33 957.66 2446.35 964.26 2453.81 971.63\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"1083.16 686.64 1045.88 909.47 847.2 873.7 649.45 829.86 687.79 671.28 699.29 647.44 696.84 634.67 686.33 625.88 689.86 611.75 703.51 593.74 721.23 579.41 736.89 552.82 750.63 531.89 759.61 521.75 759.37 507.5 750.59 497.88 739.92 477.37 744.15 461.67 741.68 446.78 769.14 322.2 795.78 207.95 853.92 221.2 837.62 316.5 848.24 343.8 844.65 359.95 852.8 376.71 865.02 388.25 872.23 404.29 883.41 435.6 896.59 451.92 915 456.6 904.14 475.04 893.28 497.36 893.76 521.43 885.29 525.72 881.22 548.75 890.61 559.89 905.17 551.78 914.12 540.49 921.22 544.47 926.3 558.24 927.93 587.96 936.96 601.33 936.44 625.48 939.03 632.76 951.57 637.46 956.95 651.95 963.91 677.34 978.04 667.13 998.44 674.27 1001.75 665.78 1036.93 677.84 1052.13 677.52 1064.35 661.25 1070.87 664.88 1074.97 678.55 1081.13 684.65 1083.16 686.64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2159.39 1445.84 2095.68 1446.6 1964.96 1446.16 1834.21 1443.15 1761.63 1440.4 1689.11 1436.82 1620.85 1432.75 1629.74 1300.1 1638.33 1160.88 1638.45 1160.88 1759.97 1167.79 1850.45 1171.42 2010.64 1174.67 2106.54 1174.67 2123.18 1186.61 2132.25 1186.33 2134.4 1199.42 2124.74 1216.3 2130.18 1224.85 2139.09 1243.76 2157.72 1252.07 2158.44 1349.05 2159.39 1445.84\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3066.69 1320.15 3046.1 1346.28 3042.27 1351.14 3021.47 1364.95 3021.47 1364.97 3021.43 1364.99 3020.75 1372.48 3018.2 1376.81 3017.12 1378.66 3014.53 1383.03 2996.36 1396.52 2993.01 1402.76 2991.18 1406.18 2991.16 1406.2 2991.14 1406.22 2977.09 1413.86 2956.88 1421.85 2908.25 1431.3 2843.88 1435.38 2823.17 1438.93 2781.24 1441.08 2738.67 1444.89 2699.51 1448.32 2654.27 1455.09 2651.56 1451.19 2637.15 1452.66 2638.63 1466.83 2534.42 1474.3 2550.06 1463.6 2561.05 1455.21 2558.57 1441.12 2560.17 1431.89 2556.34 1418.44 2560.57 1409.31 2580.18 1412.7 2598.29 1419.64 2607.16 1411.43 2602.74 1391.93 2618.38 1382.99 2630.44 1375.34 2623.58 1367.34 2630.6 1354.09 2629.52 1347.41 2638.99 1348.93 2638.83 1338.92 2657.88 1344.23 2672.29 1332.93 2695.61 1344.54 2700.15 1335.24 2715.72 1325.01 2732.14 1334.04 2738.99 1323.18 2749.49 1303.95 2755.14 1314.47 2770.42 1320.63 2783.07 1292.13 2792.82 1288.16 2800.37 1271.64 2809.54 1263.89 2809.02 1246.45 2826.08 1247.73 2836.15 1238.46 2847.97 1236.87 2850.16 1229.83 2842.2 1212.2 2845.67 1207.43 2869.91 1206.52 2883.42 1213.59 2904.72 1231.43 2920.47 1235.79 2932.28 1241.57 2948.69 1236.79 2961.78 1240.21 2976.15 1233.16 2989.26 1229.67 2996.68 1241.41 3011.08 1248.09 3013.7 1256.4 3015.69 1275.03 3026.23 1287.77 3031.69 1300.82 3043.83 1310.88 3052.62 1320.63 3066.69 1320.15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2991.14 1406.22 2977.05 1413.9 2956.88 1421.85 2977.09 1413.86 2991.14 1406.22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3017.12 1378.66 3014.53 1383.07 2996.36 1396.6 2993.01 1402.76 2996.36 1396.52 3014.53 1383.03 3017.12 1378.66\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3066.75 1320.15 3046.1 1346.28 3066.69 1320.15 3066.75 1320.15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3543.51 1151.31 3523.74 1187.76 3507.86 1192.82 3503.73 1200.1 3503.73 1200.14 3458.77 1165.88 3441.14 1100.19 3436.63 1133.81 3454.35 1210.16 3406.8 1192.86 3400.08 1181.24 3389.56 1187.48 3379.3 1184.59 3383.08 1163.21 3393.18 1152.39 3392.91 1144.95 3400.2 1135.17 3389.48 1127.88 3384.76 1133.3 3369.83 1126.12 3369.79 1126.12 3354.14 1123.79 3357.21 1113.21 3346.71 1108.42 3335.97 1107.51 3328.26 1097.28 3317.32 1086.3 3294.68 1083.51 3282.78 1092.82 3276.56 1100.87 3255.55 1101.23 3248.14 1112.29 3235.11 1118.41 3225.18 1130.86 3216.03 1140.81 3208.32 1095.49 3272.1 1083.55 3293.8 1079.13 3342.37 1068.94 3400.92 1057.01 3461.02 1043.48 3491.51 1154.86 3537.75 1144.24 3543.51 1151.31\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3400.08 1181.24 3406.8 1192.86 3400.08 1181.29 3389.56 1187.52 3379.3 1184.59 3389.56 1187.48 3400.08 1181.24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3507.86 1192.82 3503.73 1200.14 3503.73 1200.1 3507.86 1192.82\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3903.15 451.84 3851.81 498.83 3797.55 538.17 3741.69 611.91 3725.2 660.9 3718.69 663.69 3712.27 652.35 3696.82 642.74 3696.78 633.43 3643.71 476.31 3664.92 453.81 3675.22 407.66 3673.83 333.94 3699.78 254.06 3726.6 271.06 3761.89 243.8 3796.35 260.56 3834.36 379.26 3890.22 415.31 3903.15 451.84\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    className: \"state\",\n    d: \"M2415.8,564.44l.48-.26v0Zm165.33,82.21v0l3.23-7.68v0Z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2561.05 1455.21 2550.06 1463.6 2534.42 1474.3 2533.14 1483.17 2529.6 1496.38 2525.43 1518.83 2477.52 1521.97 2481.49 1512.71 2489.06 1502.4 2496.69 1492.16 2489.86 1481.38 2406.38 1480.7 2329.29 1484.25 2248.48 1486.8 2159.59 1487.44 2159.75 1445.84 2159.39 1445.84 2158.44 1349.05 2157.72 1252.07 2139.09 1243.76 2130.18 1224.85 2124.74 1216.3 2134.4 1199.42 2132.25 1186.33 2123.18 1186.61 2106.54 1174.67 2097.35 1155.38 2086.53 1143.84 2074.84 1129.55 2073.44 1122.08 2135.44 1121.68 2197.32 1120.48 2276.74 1117.53 2352.09 1112.49 2365.98 1126.56 2375.8 1133.62 2370.88 1156.41 2378.43 1183.16 2390.97 1201.17 2405.14 1215.82 2422 1227.08 2428.7 1230.83 2435.57 1247.69 2437.6 1262.74 2445.88 1266.04 2458.89 1259.39 2473.26 1273.08 2470.31 1290 2464.55 1303.59 2460.96 1319.75 2471.9 1332.69 2486.87 1344.51 2495.02 1344.31 2515.13 1362.88 2522.56 1365.03 2529.48 1386.52 2527.78 1400.25 2538.64 1421.77 2546.28 1418.84 2560.17 1431.89 2558.57 1441.12 2561.05 1455.21\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2025.17 611.51 2025.05 628.11 1903.88 631.12 1800.47 627.2 1670.11 620.3 1548.83 611.23 1555.44 500.27 1569.49 332.38 1778.83 347.33 1984.88 354.15 1985.65 363.22 1991.15 376.55 1990.63 387.25 1988.4 398.99 1988.96 416.98 1989.8 433.69 1996.73 450.56 2004.05 469.5 2006.96 488.09 2008.07 499.07 2008.19 511.41 2010.52 538.29 2012.6 543.31 2013.19 564.16 2016.1 582.75 2021.31 597.62 2025.17 611.51\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2106.54 1174.67 2010.64 1174.67 1850.45 1171.42 1759.97 1167.79 1638.45 1160.88 1638.33 1160.88 1638.49 1157.97 1644.53 1070.22 1507.85 1059.6 1523.34 879.22 1653.1 889.3 1752.92 895.22 1886.46 900.48 1903.4 912.42 1927.8 920.25 1933.62 916.23 1949.5 916.87 1973.38 916.35 1990.51 928.25 2008.79 935.98 2011.8 943.57 2017.54 947.96 2028.8 949.29 2031.75 958.34 2035.99 973.33 2035.79 980.82 2048.05 997.96 2052.28 1012.96 2052.75 1033.93 2057.68 1036.88 2062.18 1047.7 2069.25 1073.85 2070.77 1089.45 2068.86 1105.67 2073.44 1122.08 2074.84 1129.55 2086.53 1143.84 2097.35 1155.38 2106.54 1174.67\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3725.2 660.9 3719.94 683.62 3711.87 684.13 3699.89 693.88 3695.61 704.38 3617.41 724.83 3609.82 717.08 3611.89 704.34 3607.34 680.9 3607.86 674.87 3604.51 653.54 3606.82 634.15 3609.97 625.08 3611.93 602.24 3609.57 587.72 3609.38 578.61 3620.4 571.05 3631.7 557.01 3631.18 545.43 3623.07 534.13 3623.78 508.22 3623.66 508.18 3623.86 484.82 3643.71 476.31 3696.78 633.43 3696.82 642.74 3712.27 652.35 3718.69 663.69 3725.2 660.9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3693.14 873.22 3606.82 924 3564.22 934.9 3561.59 904.53 3502.14 882.13 3489.92 878.46 3477.19 874.97 3469.87 863.16 3469.35 853.01 3459.61 846.87 3442.05 836.33 3352.33 856.18 3255.83 876.17 3152.18 895.82 3147.8 871.63 3194.63 807.95 3191.76 799.64 3191.72 799.4 3177.91 775.33 3209.72 757.59 3261.47 750.74 3316.2 747.01 3358.37 707.17 3346.91 673.47 3336.57 661.25 3336.29 661.17 3336.33 661.13 3336.61 661.25 3388.7 585.88 3413.35 562.88 3508.57 538.85 3511.84 557.05 3512.2 569.06 3520.39 594.87 3527.29 607.45 3525.53 627.28 3537.23 648.84 3536.4 662.65 3538.43 665.7 3547.78 664 3563.58 737.28 3564.93 801.44 3578.25 869.59 3585.34 875.73 3573.05 887.95 3578.11 898.09 3669.06 861.92 3693.14 873.22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3118.66 1043.06 3118.98 1064.18 3115.85 1088.62 3112.42 1109.02 3112.82 1118.41 3097.42 1141.92 3090.1 1147.59 3081.16 1151.63 3072.47 1150.99 3059.41 1168.83 3059.13 1185.41 3058.32 1194.46 3052.66 1198.98 3050.22 1189.16 3040.44 1188.44 3033.56 1209.37 3035.5 1229.36 3028.22 1243.16 3011.08 1248.09 2996.68 1241.41 2989.26 1229.67 2976.15 1233.16 2961.78 1240.21 2948.69 1236.79 2932.28 1241.57 2920.47 1235.79 2904.72 1231.43 2883.42 1213.59 2869.91 1206.52 2845.67 1207.43 2838.42 1145.11 2828.11 1057.57 2818.29 976.15 2852.71 971.11 2883.38 967.09 2908.65 962.78 2908.65 962.82 2952.83 975.48 2987.13 975.08 3034.04 955.55 3069.74 924.32 3102.08 906.48 3122.49 1026.14 3113.82 1032.21 3118.66 1043.06\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2175.78 1582.98 2175.7 1671.22 2174.86 1750.66 2141.96 1733.34 2120.63 1723.91 2103.47 1730.19 2076.83 1729.36 2061.06 1729.52 2048.09 1736.89 2035.39 1740.66 2024.29 1736.13 1998.94 1740.89 1987.61 1725.63 1975.63 1738.6 1955.02 1732.46 1934.06 1718.02 1911.14 1726.63 1901.71 1704.56 1866.5 1705.8 1844.19 1700.24 1819.1 1692.94 1808.62 1673.73 1788.61 1679.04 1776.67 1671.14 1759.18 1660.64 1763.02 1574.15 1766.89 1485.48 1693.83 1481.86 1620.77 1477.45 1547.81 1472.23 1551.18 1427.43 1620.85 1432.75 1689.11 1436.82 1761.63 1440.4 1834.21 1443.15 1964.96 1446.16 2095.68 1446.6 2159.39 1445.84 2159.75 1445.84 2159.59 1487.44 2175.78 1582.98\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3689.91 837.45 3690.43 823.56 3676.86 775.89 3704.08 767.34 3715.3 788.9 3728.39 796.05 3733.95 808.87 3689.91 837.45\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3373.06 1604.66 3355.7 1672.98 3300.08 1740.54 3228.37 1799.87 3214.48 1797.41 3206.89 1795.26 3204.22 1778.14 3193.91 1762.52 3178.15 1755.03 3179.7 1747.99 3173.59 1738.76 3164.88 1719.13 3137.85 1704.84 3125.72 1684.83 3105.63 1672.98 3098.77 1662.59 3069.46 1645.23 3058.2 1630.61 3040.2 1604.22 3026.51 1600.63 3004.35 1588.54 3013.82 1569.84 3020.87 1561.21 3027.86 1557.51 3065.39 1536.26 3133.39 1526.44 3168.48 1524.96 3170.36 1532.76 3176.78 1525.6 3190.84 1538.83 3192.4 1549.28 3274.41 1535.82 3373.06 1604.66\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2020.63 857.34 2020.37 879.5 2028.8 891.6 2027.16 901.44 2023.62 915.99 2018.14 930.84 2028.92 940.98 2028.8 949.29 2017.54 947.96 2011.8 943.57 2008.79 935.98 1990.51 928.25 1973.38 916.35 1949.5 916.87 1933.62 916.23 1927.8 920.25 1903.4 912.42 1886.46 900.48 1752.92 895.22 1653.1 889.3 1523.34 879.22 1538.12 694.2 1548.83 611.23 1670.11 620.3 1800.47 627.2 1903.88 631.12 2025.05 628.11 2023.86 641.37 2009.49 651.47 2005.92 663.81 2012.16 677.96 2023.34 685.13 2030.71 772.38 2029.4 857.34 2020.63 857.34\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"769.14 322.2 741.68 446.78 744.15 461.67 739.92 477.37 612.24 446.58 587.72 450.05 573.04 442.04 559.11 445.98 533.58 449.53 506.12 440.7 490.11 443.91 476.34 443.39 467.95 436.04 447.06 425.97 432.34 424.74 405.87 427.01 390.69 422.78 377.51 415.19 376.68 401.58 379.5 386.45 373.29 366.32 357.2 355.9 344.93 343.4 326.61 337.19 313.72 334.42 320.5 256.77 337.79 169.64 414.72 211.38 420.12 288.12 441.84 269.35 453.94 194.42 448.26 113.4 621.23 163.63 795.78 207.95 769.14 322.2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2604.41 805.74 2596.54 858.1 2608.84 901.66 2609.07 923.84 2608.84 923.84 2608.88 924.08 2557.3 927.73 2487.39 932.87 2418.99 937.27 2411.7 923.8 2389.38 916.35 2384.29 902.18 2381.14 894.23 2379.91 875.17 2385.45 868 2376.08 854.05 2374.89 849.15 2372.59 839 2371.28 817.16 2368.77 809.79 2345.93 797.45 2328.73 782.58 2323.69 773.02 2316.12 767.18 2294.51 755.12 2286.72 754.6 2267.11 737.8 2268.39 717.71 2267.55 693 2271.64 669.92 2257.59 653.3 2266.07 636.22 2279.33 626.96 2294.67 616.25 2296.67 616.25 2293.91 565.08 2310.28 559.28 2372.2 537.14 2411.94 565.87 2412.53 566.31 2414.95 564.94 2415.36 564.7 2415.52 564.62 2415.8 564.44 2416.28 564.18 2416.36 564.44 2416.4 564.44 2426.46 566.83 2432.6 582.91 2489.02 595.35 2526.87 608.88 2544.76 607.57 2557.22 607.69 2562 622.33 2577.59 626.76 2584.36 638.97 2581.13 646.65 2581.13 646.69 2579.54 661.65 2579.54 661.69 2593.71 661.22 2590.32 676.22 2590.32 676.26 2599.87 686.21 2599.87 686.17 2599.91 686.05 2601.62 686.52 2601.1 687.44 2578.78 722.46 2588.53 732.4 2630.36 669.53 2639.98 668.25 2613.28 741.27 2604.41 805.74\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2416.28 564.16 2416.28 564.18 2415.8 564.44 2416.28 564.16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2584.36 638.97 2584.36 639.01 2581.13 646.69 2581.13 646.65 2584.36 638.97\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3335.97 1107.51 3331.58 1125.7 3291.53 1108.7 3290.73 1133.42 3283.87 1143.92 3272.53 1158.17 3264.42 1171.62 3258.66 1168.87 3253.32 1182.96 3248.54 1195.3 3248.54 1195.34 3246.69 1204.04 3237.3 1209.37 3237.28 1209.37 3225.7 1204.92 3215.16 1199.74 3211.95 1220.33 3202.78 1238.34 3201.67 1252.11 3190.09 1266.16 3183.21 1283.3 3186.2 1293.57 3186.08 1301.88 3176.06 1310.68 3165.93 1311.12 3158.22 1319.15 3149.63 1317.36 3149.63 1317.48 3149.59 1317.48 3149.39 1325.63 3124.04 1337.51 3114.42 1332.65 3093.61 1347.06 3081.59 1341.6 3072.31 1334.76 3066.75 1320.07 3066.69 1320.15 3052.62 1320.63 3043.83 1310.88 3031.69 1300.82 3026.23 1287.77 3015.69 1275.03 3013.7 1256.4 3011.08 1248.09 3028.22 1243.16 3035.5 1229.36 3033.56 1209.37 3040.44 1188.44 3050.22 1189.16 3052.66 1198.98 3058.32 1194.46 3059.13 1185.41 3059.41 1168.83 3072.47 1150.99 3081.16 1151.63 3090.1 1147.59 3097.42 1141.92 3112.82 1118.41 3112.42 1109.02 3115.85 1088.62 3118.98 1064.18 3118.66 1043.06 3113.82 1032.21 3122.49 1026.14 3136.62 1108.27 3208.32 1095.49 3216.03 1140.81 3225.18 1130.86 3235.11 1118.41 3248.14 1112.29 3255.55 1101.23 3276.56 1100.87 3282.78 1092.82 3294.68 1083.51 3317.32 1086.3 3328.26 1097.28 3335.97 1107.51\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3124.04 1337.51 3149.39 1325.63 3149.39 1325.73 3124 1337.63 3114.38 1332.73 3093.57 1347.14 3081.59 1341.67 3072.27 1334.84 3066.75 1320.15 3066.69 1320.15 3066.75 1320.07 3072.31 1334.76 3081.59 1341.6 3093.61 1347.06 3114.42 1332.65 3124.04 1337.51\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3176.06 1310.68 3186.08 1301.88 3186.08 1301.98 3176.02 1310.85 3165.89 1311.28 3158.18 1319.32 3149.63 1317.48 3149.63 1317.36 3158.22 1319.15 3165.93 1311.12 3176.06 1310.68\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3190.09 1266.16 3201.67 1252.11 3190.13 1266.16 3183.21 1283.3 3190.09 1266.16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3248.54 1195.3 3253.32 1182.96 3248.54 1195.34 3248.54 1195.3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3335.97 1107.51 3331.62 1125.74 3291.57 1108.74 3290.77 1133.45 3283.91 1143.96 3272.57 1158.21 3264.46 1171.66 3258.7 1168.91 3253.32 1182.96 3258.66 1168.87 3264.42 1171.62 3272.53 1158.17 3283.87 1143.92 3290.73 1133.42 3291.53 1108.7 3331.58 1125.7 3335.97 1107.51\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"1538.12 694.2 1523.34 879.22 1507.85 1059.6 1439.38 1053.16 1302.72 1038.08 1234.52 1029.37 1166.37 1019.96 1031.03 996.48 1045.88 909.47 1083.16 686.64 1081.13 684.65 1082.84 681.66 1090.2 635.99 1215.95 655 1315.42 669.57 1431.01 682.7 1538.12 694.2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"1569.49 332.38 1555.44 500.27 1548.83 611.23 1538.12 694.2 1431.01 682.7 1315.42 669.57 1215.95 655 1090.2 635.99 1082.84 681.66 1081.13 684.65 1074.97 678.55 1070.87 664.88 1064.35 661.25 1052.13 677.52 1036.93 677.84 1001.75 665.78 998.44 674.27 978.04 667.13 963.91 677.34 956.95 651.95 951.57 637.46 939.03 632.76 936.44 625.48 936.96 601.33 927.93 587.96 926.3 558.24 921.22 544.47 914.12 540.49 905.17 551.78 890.61 559.89 881.22 548.75 885.29 525.72 893.76 521.43 893.28 497.36 904.14 475.04 915 456.6 896.59 451.92 883.41 435.6 872.23 404.29 865.02 388.25 852.8 376.71 844.65 359.95 848.24 343.8 837.62 316.5 853.92 221.2 1031.31 257.81 1209.85 288.56 1389.31 313.43 1569.49 332.38\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"1166.37 1019.96 1115.11 1378.68 1011.02 1362.12 873.51 1338.33 758.22 1317.6 847.2 873.7 1045.88 909.47 1031.03 996.48 1166.37 1019.96\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    className: \"state\",\n    d: \"M3400.08,1181.25l-10.52,6.23-10.27-2.89,10.27,2.93,10.52-6.23,6.72,11.57Zm-68.5-55.55-40-17-.8,24.72-6.86,10.5-11.34,14.25-8.11,13.45-5.76-2.75-5.34,14.09,5.38-14,5.76,2.75,8.11-13.45,11.34-14.25,6.86-10.5.8-24.72,40,17,4.35-18.23Zm-83,69.6v0l4.78-12.37Zm-58.45,70.86-6.88,17.14,6.92-17.14,11.54-14.05Zm-14,44.53-10.13.43-7.71,8-8.59-1.8v.12l8.55,1.83,7.71-8,10.13-.44,10.06-8.86v-.1Zm-52,26.82-9.62-4.86-20.81,14.41-12-5.47-9.28-6.83-5.56-14.69-.06.08-20.59,26.13,20.65-26.13,5.52,14.69,9.32,6.83,12,5.47,20.81-14.41,9.62,4.9,25.39-11.9v-.1ZM3014.53,1383l-18.17,13.49-3.35,6.24,3.35-6.16,18.17-13.53,2.59-4.41Zm-37.44,30.83-20.21,8,20.17-7.95,14.09-7.67Zm546.65-226.1-15.88,5.06-4.13,7.28v0l-10.66,65,7.23,2.07,23.48-79.48Z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3518.66 1324.89 3442.17 1342.15 3366.6 1358.55 3223.37 1385.22 3117.74 1399.59 3101.16 1401.84 3101.12 1401.84 3064.83 1409.3 2956.88 1421.85 2977.05 1413.9 2991.14 1406.22 2991.16 1406.2 2991.18 1406.18 2993.01 1402.76 2996.36 1396.6 3014.53 1383.07 3017.12 1378.66 3018.2 1376.81 3020.79 1372.44 3021.47 1364.97 3021.47 1364.95 3042.27 1351.14 3046.1 1346.28 3066.75 1320.15 3072.27 1334.84 3081.59 1341.67 3093.57 1347.14 3114.38 1332.73 3124 1337.63 3149.39 1325.73 3149.39 1325.63 3149.43 1325.61 3149.63 1317.48 3158.18 1319.32 3165.89 1311.28 3176.02 1310.85 3186.08 1301.98 3186.08 1301.88 3186.16 1301.82 3186.28 1293.41 3183.21 1283.3 3190.13 1266.16 3201.67 1252.11 3202.78 1238.34 3211.95 1220.33 3215.16 1199.74 3225.7 1204.92 3237.28 1209.37 3237.3 1209.37 3246.69 1204.04 3248.54 1195.34 3253.32 1182.96 3258.7 1168.91 3264.46 1171.66 3272.57 1158.21 3283.91 1143.96 3290.77 1133.45 3291.57 1108.74 3331.62 1125.74 3335.97 1107.51 3346.67 1108.46 3357.21 1113.21 3354.1 1123.79 3354.14 1123.79 3369.79 1126.12 3384.76 1133.3 3392.11 1139.69 3392.87 1144.95 3393.14 1152.39 3383.08 1163.21 3379.3 1184.59 3389.56 1187.52 3400.08 1181.29 3406.8 1192.86 3461.62 1232.88 3484.54 1272.16 3485.93 1274.55 3518.66 1324.89\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"1551.18 1427.43 1547.81 1472.23 1529.53 1709.03 1516.36 1879.58 1444.58 1873.68 1305.47 1860.11 1236.04 1852.28 1235.96 1860.11 1242.95 1875.56 1109.87 1858.84 1103.85 1895.96 1041.69 1887.45 1115.11 1378.68 1227.73 1393.97 1341.68 1407.7 1464.53 1420.04 1551.18 1427.43\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"847.2 873.7 758.22 1317.6 744.35 1389.15 740.64 1391.46 733.13 1404.03 724.04 1398.53 711.5 1389.38 696.36 1386.28 689.14 1396.16 693.05 1409.67 689.06 1428.74 686.97 1446.28 686.93 1464.4 678.84 1480.9 582.02 1342.11 482.96 1195.45 383.51 1043.36 454.46 781.23 649.37 830.09 649.45 829.86 847.2 873.7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"3620.4 571.05 3609.38 578.61 3609.57 587.72 3611.93 602.24 3609.97 625.08 3606.82 634.15 3604.51 653.54 3607.86 674.87 3607.34 680.9 3611.89 704.34 3609.82 717.08 3617.41 724.83 3563.58 737.28 3547.78 664 3538.43 665.7 3536.4 662.65 3537.23 648.84 3525.53 627.28 3527.29 607.45 3520.39 594.87 3512.2 569.06 3511.84 557.05 3508.57 538.85 3623.66 508.18 3623.78 508.22 3623.07 534.13 3631.18 545.43 3631.7 557.01 3620.4 571.05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    className: \"state\",\n    points: \"2589.44 2140.75 2479.16 2151.55 2409.98 2136.47 2362.91 2119.71 2301.65 2110.12 2232.33 2109.36 2225.48 2097.43 2233.27 2083.82 2244.89 2071.44 2244.63 2053.18 2238.69 2047.24 2245.05 2025.24 2249.83 2015.22 2256.53 1981.64 2249.23 1969.38 2239.65 1948.86 2232.45 1927.89 2227.79 1913.92 2214.82 1903.93 2207.98 1806.72 2281.98 1804.93 2365.5 1798.71 2430.29 1798.63 2436.05 1803.53 2429.77 1817.02 2441.91 1835.12 2439.36 1846.54 2450.18 1861.63 2439.96 1871.53 2437.32 1888.89 2423.08 1903.86 2417.04 1923.31 2411.06 1945.63 2401.99 1956.29 2406.26 1978.89 2475.65 1978.09 2549.63 1973.57 2548.43 1988.87 2544.24 2004.16 2550.02 2015.34 2561.13 2025.2 2565.01 2040.09 2567.12 2049.04 2560.61 2087.68 2589.44 2140.75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"California\",\n    className: \"state\",\n    points: \"699.57 1557.43 673.4 1571.12 659.11 1610.62 640.36 1628.02 640.96 1644.5 640.84 1658.41 651.52 1673.41 639.54 1689.5 629.58 1687.31 532.14 1676.01 445.23 1663.19 443.88 1628.45 423.39 1575.16 357.96 1502.88 329.32 1492.04 304.89 1456.05 249.27 1433.83 234.7 1414.58 239.26 1364.27 195.22 1256.99 172.82 1119.09 181.29 1099.71 159.69 1061.91 129.61 973.21 142.59 899.89 122.32 841.47 159.73 774.57 181.17 699.86 454.46 781.23 383.51 1043.36 482.96 1195.45 582.02 1342.11 678.84 1480.9 678.68 1489.15 680.2 1502.01 683.02 1518.83 689.1 1537.5 699.57 1557.43\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Texas\",\n    className: \"state\",\n    points: \"2256.53 1981.64 2249.83 2015.22 2245.05 2025.24 2238.69 2047.24 2244.63 2053.18 2244.89 2071.44 2233.27 2083.82 2225.48 2097.43 2232.33 2109.36 2164.4 2129.89 2091.74 2198.55 2011.04 2238.09 1966.08 2281.55 1946.63 2322.72 1944.88 2386.36 1948.35 2430.8 1963.81 2462.55 1931.07 2464.82 1872.06 2443.22 1807.8 2412.65 1786.06 2368.44 1770.36 2303.24 1724.28 2248.79 1698.77 2193.68 1661.68 2128.86 1607.46 2089.12 1542.19 2086.53 1486.33 2154.96 1422.02 2122.02 1383.19 2090.71 1368.19 2038.73 1346.66 1988.67 1304.24 1943.91 1267.55 1910.93 1242.95 1875.56 1235.96 1860.11 1236.04 1852.28 1305.47 1860.11 1444.58 1873.68 1516.36 1879.58 1529.53 1709.03 1547.81 1472.23 1620.77 1477.45 1693.83 1481.86 1766.89 1485.48 1763.02 1574.15 1759.18 1660.64 1776.67 1671.14 1788.61 1679.04 1808.62 1673.73 1819.1 1692.94 1844.19 1700.24 1866.5 1705.8 1901.71 1704.56 1911.14 1726.63 1934.06 1718.02 1955.02 1732.46 1975.63 1738.6 1987.61 1725.63 1998.94 1740.89 2024.29 1736.13 2035.39 1740.66 2048.09 1736.89 2061.06 1729.52 2076.83 1729.36 2103.47 1730.19 2120.63 1723.91 2141.96 1733.34 2174.86 1750.66 2178.96 1756.54 2193.69 1755.07 2211.31 1755.07 2207.98 1806.72 2214.82 1903.93 2227.79 1913.92 2232.45 1927.89 2239.65 1948.86 2249.23 1969.38 2256.53 1981.64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Arizona\",\n    className: \"state\",\n    points: \"1115.11 1378.68 1041.69 1887.45 888.41 1864.06 724.8 1769.43 619.07 1702.95 629.58 1687.31 639.54 1689.5 651.52 1673.41 640.84 1658.41 640.96 1644.5 640.36 1628.02 659.11 1610.62 673.4 1571.12 699.57 1557.43 689.1 1537.5 683.02 1518.83 680.2 1502.01 678.68 1489.15 678.84 1480.9 686.93 1464.4 686.97 1446.28 689.06 1428.74 693.05 1409.67 689.14 1396.16 696.36 1386.28 711.5 1389.38 724.04 1398.53 733.13 1404.03 740.64 1391.46 744.35 1389.15 758.22 1317.6 873.51 1338.33 1011.02 1362.12 1115.11 1378.68\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Oregon\",\n    className: \"state\",\n    points: \"759.61 521.75 750.63 531.89 736.89 552.82 721.23 579.41 703.51 593.74 689.86 611.75 686.33 625.88 696.84 634.67 699.29 647.44 687.79 671.28 649.45 829.86 649.37 830.09 454.46 781.23 181.17 699.86 176.13 644.77 225.31 558.32 260.97 462.06 313.72 334.42 326.61 337.19 344.93 343.4 357.2 355.9 373.29 366.32 379.5 386.45 376.68 401.58 377.51 415.19 390.69 422.78 405.87 427.01 432.34 424.74 447.06 425.97 467.95 436.04 476.34 443.39 490.11 443.91 506.12 440.7 533.58 449.53 559.11 445.98 573.04 442.04 587.72 450.05 612.24 446.58 739.92 477.37 750.59 497.88 759.37 507.5 759.61 521.75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Georgia\",\n    className: \"state\",\n    points: \"3228.37 1799.87 3205.81 1871.29 3199.38 1925.1 3182.65 1926.06 3166.17 1921.83 3157.26 1926.38 3161.93 1957.76 3153.06 1967.43 3144.85 1952.54 3016.01 1957.2 2936.75 1963.18 2921.9 1940.25 2916.74 1930.02 2910.44 1919.04 2910.76 1903.93 2910.76 1887.69 2904.52 1871.17 2905.36 1841.86 2916.1 1824.46 2907.45 1809.11 2893.06 1782.17 2864.49 1694.62 2832.06 1584.93 2889.32 1578.95 2928.72 1573.03 3020.87 1561.21 3013.82 1569.84 3004.35 1588.54 3026.51 1600.63 3040.2 1604.22 3058.2 1630.61 3069.46 1645.23 3098.77 1662.59 3105.63 1672.98 3125.72 1684.83 3137.85 1704.84 3164.88 1719.13 3173.59 1738.76 3179.7 1747.99 3178.15 1755.03 3193.91 1762.52 3204.22 1778.14 3206.89 1795.26 3214.48 1797.41 3228.37 1799.87\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Tennesee\",\n    className: \"state\",\n    points: \"3103.87 1426.04 3089.74 1432.21 3080.92 1448.99 3068.1 1449.15 3043.79 1470.12 3036.73 1463.08 3020.15 1477.93 3021.47 1484.37 3008.57 1493.55 3002.47 1502.48 2986.81 1512.59 2970.13 1519.1 2955.56 1523.49 2946.57 1535.78 2942.79 1546.09 2927.88 1553.8 2928.72 1573.03 2889.32 1578.95 2832.06 1584.93 2736.64 1594 2643.21 1602.67 2561.44 1607.25 2488.14 1612.37 2496.1 1603.38 2493.51 1577.12 2504.43 1564.46 2506.28 1549.28 2518.62 1539.63 2525.19 1526.36 2525.43 1518.83 2529.6 1496.38 2533.14 1483.17 2534.42 1474.3 2638.63 1466.83 2637.15 1452.66 2651.56 1451.19 2654.27 1455.09 2699.51 1448.32 2738.67 1444.89 2781.24 1441.08 2823.17 1438.93 2843.88 1435.38 2908.25 1431.3 2956.88 1421.85 3064.79 1409.31 3064.83 1409.3 3101.12 1401.84 3101.08 1413.38 3103.87 1426.04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Pennsylvania\",\n    className: \"state\",\n    points: \"3520.99 986.14 3514.55 997.8 3501.22 1013.24 3497.63 1019.88 3485.58 1031.16 3469.87 1029.96 3464.65 1035.33 3461.02 1043.48 3400.92 1057.01 3342.37 1068.94 3293.8 1079.13 3272.1 1083.55 3208.32 1095.49 3136.62 1108.27 3122.49 1026.14 3102.08 906.48 3147.68 871.79 3147.8 871.63 3152.18 895.82 3255.83 876.17 3352.33 856.18 3442.05 836.33 3459.61 846.87 3469.35 853.01 3469.87 863.16 3477.19 874.97 3489.92 878.46 3502.14 882.13 3494.94 887.95 3487.97 910.43 3479.1 920.69 3485.38 931.35 3480.06 943.97 3483.05 958.22 3491 959.25 3494.34 968.32 3520.99 986.14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Virginia\",\n    className: \"state\",\n    points: \"3548.73 1411.07 3517.14 1487.04 3452.51 1536.58 3398.33 1594.24 3373.06 1604.66 3274.41 1535.82 3192.4 1549.28 3190.84 1538.83 3176.78 1525.6 3170.36 1532.76 3168.48 1524.96 3133.39 1526.44 3065.39 1536.26 3027.86 1557.51 3020.87 1561.21 2928.72 1573.03 2927.88 1553.8 2942.79 1546.09 2946.57 1535.78 2955.56 1523.49 2970.13 1519.1 2986.81 1512.59 3002.47 1502.48 3008.57 1493.55 3021.47 1484.37 3020.15 1477.93 3036.73 1463.08 3043.79 1470.12 3068.1 1449.15 3080.92 1448.99 3089.74 1432.21 3103.87 1426.04 3101.08 1413.38 3101.12 1401.84 3101.16 1401.84 3117.74 1399.59 3223.33 1385.26 3366.52 1358.6 3442.13 1342.19 3518.62 1324.93 3548.73 1411.07\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Massachussets\",\n    className: \"state\",\n    points: \"3805.94 774.73 3765.92 801.64 3733.95 808.87 3728.39 796.05 3715.3 788.9 3704.08 767.34 3676.86 775.89 3615.49 790.14 3564.93 801.44 3563.58 737.28 3617.41 724.83 3695.61 704.38 3699.89 693.88 3711.87 684.13 3719.94 683.62 3732.48 730.09 3767.18 770.17 3794.8 764.51 3778.69 734.71 3803.86 748.35 3805.94 774.73\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"New_Jersey\",\n    \"data-name\": \"New Jersey\",\n    className: \"state\",\n    points: \"3570.85 1018.94 3537.39 1098.68 3526.93 1077.23 3510.81 1076.2 3489.04 1056.93 3483.24 1059.28 3477.59 1042.7 3485.58 1031.16 3497.63 1019.88 3501.22 1013.24 3514.55 997.8 3520.99 986.14 3494.34 968.32 3491 959.25 3483.05 958.22 3480.06 943.97 3485.38 931.35 3479.1 920.69 3487.97 910.43 3494.94 887.95 3502.14 882.13 3561.59 904.53 3549.13 953 3566.91 952.72 3570.85 1018.94\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    id: \"Michigan\",\n    className: \"state\",\n    d: \"M2962.26,835.93l-1.48,1.48-23.87,54-10.15,33.52-18.11,37.9-25.27,4.27-30.67,4-34.42,5-.92-7v0L2754,977l-72.7,7.36,12.37-13.91,22.58-46.84-4.58-59.73-27.82-53.53-.76-38.7,12.22-46.17,12.77-32.19,23.24-24.59,9.51,29.65,6.05-46,13-10.9,4.72-35.5,56.2,11.26,51.92,28.84,11,40.24-.12,41.93-30.79,41,6.39,22.24,13.1-1,34.85-45.28,25.35,5.52L2952,801.08l8.83,36.29Zm-167.41-290.7,6.8-10-21.25-.12-2.71,9.39-19.61-1.28-16.2-23.83-60.54,15-53.57,26.08L2580.3,530l-36.45-8.51,15.76-49.86-52.25,34.86-47.91,33.34-47,26.42,0,0,2.41-1.33.42-.24.16-.08.28-.18.48-.28v0l0,0,.08.28,10.06,2.35,6.14,16.08L2489,595.35h0l37.81,13.53,17.93-1.35,12.46.12,4.78,14.64,15.55,4.43,6.77,12.25v0l-3.23,7.68-1.59,15,14.17-.47v0l-3.39,15,9.55,9.95,0-.12v0l1.71.48,32-61.41L2676,612.47l47.39-23.64,50.86,3.59,2.17.16,54.53-15.37Z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Missouri\",\n    className: \"state\",\n    points: \"2659.55 2022.77 2612.76 2047.16 2567.12 2049.04 2565.01 2040.09 2561.13 2025.2 2550.02 2015.34 2544.24 2004.16 2548.43 1988.87 2549.63 1973.57 2475.65 1978.09 2406.26 1978.89 2401.99 1956.29 2411.06 1945.63 2417.04 1923.31 2423.08 1903.86 2437.32 1888.89 2439.96 1871.53 2450.18 1861.63 2439.36 1846.54 2441.91 1835.12 2429.77 1817.02 2436.05 1803.53 2430.29 1798.63 2433 1780.57 2423 1757.22 2423.59 1735.61 2438.36 1703.07 2445.3 1683.96 2457.89 1670.86 2466.26 1665.18 2474.81 1640.35 2474.29 1627.22 2487.19 1619.63 2488.14 1612.37 2561.44 1607.25 2643.21 1602.67 2650.05 1619.7 2646.78 1738.09 2645.49 1884.11 2659.55 2022.77\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Illinois\",\n    className: \"state\",\n    points: \"2660.15 1261.42 2654.71 1267.44 2650.97 1282.86 2638.03 1303.87 2630.2 1328.98 2629.52 1347.41 2630.6 1354.09 2623.58 1367.34 2630.44 1375.34 2618.38 1382.99 2602.74 1391.93 2607.16 1411.43 2598.29 1419.64 2580.18 1412.7 2560.57 1409.31 2556.34 1418.44 2560.17 1431.89 2546.28 1418.84 2538.64 1421.77 2527.78 1400.25 2529.48 1386.52 2522.56 1365.03 2515.13 1362.88 2495.02 1344.31 2486.87 1344.51 2471.9 1332.69 2460.96 1319.75 2464.55 1303.59 2470.31 1290 2473.26 1273.08 2458.89 1259.39 2445.88 1266.04 2437.6 1262.74 2435.57 1247.69 2428.7 1230.83 2422 1227.08 2405.14 1215.82 2390.97 1201.17 2378.43 1183.16 2370.88 1156.41 2375.8 1133.62 2376.36 1117.05 2393.32 1102.68 2397.15 1088.69 2405.26 1072.53 2401.59 1058.68 2392.72 1052.09 2397.99 1036.2 2421.1 1030.4 2436.33 1024.26 2440.47 1017.47 2451.73 996.2 2453.81 971.63 2446.35 964.26 2435.33 957.66 2431.53 948.08 2423.32 943.93 2418.99 937.27 2487.39 932.87 2557.3 927.73 2608.88 924.08 2608.84 923.84 2609.07 923.84 2609.07 924.08 2611.72 947.56 2634.28 993.35 2643.97 1097.88 2653.64 1202.29 2648.02 1228.12 2654.39 1234.2 2659.55 1249.24 2660.15 1261.42\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Indiana\",\n    className: \"state\",\n    points: \"2850.16 1229.83 2847.97 1236.87 2836.15 1238.46 2826.08 1247.73 2809.02 1246.45 2809.54 1263.89 2800.37 1271.64 2792.82 1288.16 2783.07 1292.13 2770.42 1320.63 2755.14 1314.47 2749.49 1303.95 2738.99 1323.18 2732.14 1334.04 2715.72 1325.01 2700.15 1335.24 2695.61 1344.54 2672.29 1332.93 2657.88 1344.23 2638.83 1338.92 2638.99 1348.93 2629.52 1347.41 2630.2 1328.98 2638.03 1303.87 2650.97 1282.86 2654.71 1267.44 2660.15 1261.42 2659.55 1249.24 2654.39 1234.2 2648.02 1228.12 2653.64 1202.29 2643.97 1097.88 2634.28 993.35 2641.06 998.88 2664.02 996.16 2681.26 984.43 2753.98 977.07 2817.37 969.12 2818.29 976.12 2818.29 976.15 2828.11 1057.57 2838.42 1145.11 2845.67 1207.43 2842.2 1212.2 2850.16 1229.83\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }), React.createElement(\"polygon\", {\n    id: \"Minnesota\",\n    className: \"state\",\n    points: \"2453.45 431.89 2453.41 431.93 2392.49 466.23 2350.43 505.27 2309.88 545.87 2310.28 559.28 2293.91 565.08 2296.67 616.25 2294.67 616.25 2279.33 626.96 2266.07 636.22 2257.59 653.3 2271.64 669.92 2267.55 693 2268.39 717.71 2267.11 737.8 2286.72 754.6 2294.51 755.12 2316.12 767.18 2323.69 773.02 2328.73 782.58 2345.93 797.45 2368.77 809.79 2371.28 817.16 2372.59 839 2374.89 849.15 2288.12 851.42 2191.58 854.91 2101.7 857.42 2029.4 857.34 2030.71 772.38 2023.34 685.13 2012.16 677.96 2005.92 663.81 2009.49 651.47 2023.86 641.37 2025.05 628.11 2025.17 611.51 2021.31 597.62 2016.1 582.75 2013.19 564.16 2012.6 543.31 2010.52 538.29 2008.19 511.41 2008.07 499.07 2006.96 488.09 2004.05 469.5 1996.73 450.56 1989.8 433.69 1988.96 416.98 1988.4 398.99 1990.63 387.25 1991.15 376.55 1985.65 363.22 1984.88 354.15 2110.37 354.51 2110.17 319.09 2130.58 318.38 2142 368.83 2161.19 384.14 2203.91 388.84 2266.71 401.5 2327.38 427.45 2376.4 412.88 2453.41 431.89 2453.45 431.89\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  })));\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      completedCrosswords: 0,\n      completedWaldo: 0,\n      completedPuzzle: 0,\n      completedColoring: 0,\n      gameStart: true,\n      gameCompleted: false,\n      currentGame: \"home\",\n      currentCity: \"no city\",\n      currentState: \"no state\",\n      currentDate: \"no date\",\n      currentDate: \"no data\"\n    };\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = () => {\n      // console.log(this.state.currentGame)\n      // check badges\n      // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n      if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n        alert(\"congratulations!\");\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        gameCompleted: true\n      });\n    };\n\n    this.changeGame = (game, city, state, date, data) => {\n      const newGame = game;\n      const newCity = city;\n      const newState = state;\n      const newDate = date;\n      const newData = data;\n      this.setState({\n        currentGame: newGame\n      });\n      this.setState({\n        currentCity: newCity\n      });\n      this.setState({\n        currentAction: newState\n      });\n      this.setState({\n        currentDate: newDate\n      });\n      this.setState({\n        currentData: newData\n      });\n      console.log(this.state.currentGame);\n    };\n\n    this.gameColor = arg => {\n      console.log(\"hey \" + arg);\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return \"blue\";\n          break;\n\n        case \"coloring\":\n          return \"orange\";\n          break;\n\n        case \"waldo\":\n          return \"pink\";\n          break;\n\n        case \"puzzle\":\n          return \"gray\";\n          break;\n\n        case \"home\":\n          return \"lightblue\";\n          break;\n      }\n    };\n\n    this.completeCurrentGame = arg => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            currentCity: \"no city\"\n          });\n          this.setState({\n            completedCrosswords: this.state.completedCrosswords + 1\n          });\n          return;\n          break;\n\n        case \"coloring\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            currentCity: \"no city\"\n          });\n          this.setState({\n            completedColoring: this.state.completedColoring + 1\n          });\n          return;\n          break;\n\n        case \"waldo\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            currentCity: \"no city\"\n          });\n          this.setState({\n            completedWaldo: this.state.completedWaldo + 1\n          });\n          return;\n          break;\n\n        case \"puzzle\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            currentCity: \"no city\"\n          });\n          this.setState({\n            completedPuzzle: this.state.completedPuzzle + 1\n          });\n          return;\n          break;\n      }\n    };\n\n    this.renderGame = (arg, data) => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"home\":\n          return box();\n\n        case \"crossword\":\n          return React.createElement(Crossword, {\n            data: this.state.currentData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 567\n            },\n            __self: this\n          });\n          break;\n\n        case \"coloring\":\n          return;\n          break;\n\n        case \"waldo\":\n          return;\n          break;\n\n        case \"puzzle\":\n          return React.createElement(Slider, {\n            size: 4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 576\n            },\n            __self: this\n          });\n          break;\n      }\n    };\n\n    this.renderMapListBadge = arg => {\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return React.createElement(MapListBadgeCrossword, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 587\n            },\n            __self: this\n          });\n\n        case \"coloring\":\n          return React.createElement(MapListBadgeColoring, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 589\n            },\n            __self: this\n          });\n\n        case \"waldo\":\n          return React.createElement(MapListBadgeWaldo, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 591\n            },\n            __self: this\n          });\n\n        case \"puzzle\":\n          return React.createElement(MapListBadgePuzzle, {\n            type: expr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 593\n            },\n            __self: this\n          });\n      }\n    };\n  }\n\n  render() {\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, this.state.completedCrosswords), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, this.state.completedWaldo), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, this.state.completedColoring), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, this.state.completedPuzzle)), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      soma: true,\n      onClick: this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, x.city, \" \", this.renderMapListBadge(x.game))))), React.createElement(MapRender, {\n      currentGame: this.state.currentGame,\n      gameColor: this.gameColor(this.state.currentGame),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, this.state.currentCity, this.renderGame(this.state.currentGame)), React.createElement(CompleteGameButton, {\n      currentGame: this.state.currentGame,\n      onClick: () => {\n        this.completeCurrentGame(this.state.currentGame);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }, \"complete game\"))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js"],"names":["React","Component","styled","Crossword","BrowserRouter","Router","Switch","Route","Link","Scoreboard","div","Badge","props","color","MapContainer","Map","MapListItem","RenderMapList","TourStopList","MapRender","gameColor","CompleteGameButton","currentGame","GameContainer","MapListBadgeCrossword","MapListBadgeColoring","MapListBadgeWaldo","MapListBadgePuzzle","sfdata","id","number","name","date","entries","humanNumber","clue","direction","length","group","position","x","y","separatorLocations","solution","solutionAvailable","dateSolutionAvailable","dimensions","cols","rows","crosswordType","tourStops","box","App","state","score","completedCrosswords","completedWaldo","completedPuzzle","completedColoring","gameStart","gameCompleted","currentCity","currentState","currentDate","componentDidMount","componentDidUpdate","alert","finishGame","setState","changeGame","game","city","data","newGame","newCity","newState","newDate","newData","currentAction","currentData","console","log","arg","expr","completeCurrentGame","renderGame","renderMapListBadge","render","gameStatus","locations","map","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  // background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  padding: 20px;\n  // background-color: ${props => props.color || \"red\"}\n\n`\n\nconst MapContainer = styled.div`\n\n  background-image: url(img/background.jpg);\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  // border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`\n\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n\n`\n\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`\n\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n  background-color: white;\n  padding-left: 10px;\n\n`\n\nconst MapRender = styled.div`\n\n  padding: 15px;\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`\n\nconst CompleteGameButton = styled.div`\n\n  display: ${props => (props.currentGame == \"home\" ? \"none\" : \"block\")};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`\n\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  // background-color: red;\n\n`\n\nconst MapListBadgeCrossword = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  blue;\n\n`\n\nconst MapListBadgeColoring = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  orange;\n\n`\nconst MapListBadgeWaldo = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  pink;\n\n`\nconst MapListBadgePuzzle = styled.div`\n\n  height: 40px;\n  width: 40px;\n  background-color:  gray;\n\n`\n\n\nconst sfdata =\n{\n  id: 'simple/1',\n  number: 1,\n  name: 'Simple Crossword 1',\n  date: 1542326400000,\n  entries: [\n    {\n      id: '1-across',\n      number: 1,\n      humanNumber: '1',\n      clue: 'Toy on a string (2-2)',\n      direction: 'across',\n      length: 4,\n      group: ['1-across'],\n      position: { x: 0, y: 0 },\n      separatorLocations: {\n        '-': [2],\n      },\n      solution: 'YOYO',\n    },\n    {\n      id: '2-across',\n      number: 2,\n      humanNumber: '2',\n      clue: 'Have a rest (3,4)',\n      direction: 'across',\n      length: 7,\n      group: ['2-across'],\n      position: { x: 0, y: 2 },\n      separatorLocations: {\n        ',': [3],\n      },\n      solution: 'LIEDOWN',\n    },\n    {\n      id: '1-down',\n      number: 1,\n      humanNumber: '1',\n      clue: 'Colour (6)',\n      direction: 'down',\n      length: 6,\n      group: ['1-down'],\n      position: { x: 0, y: 0 },\n      separatorLocations: {},\n      solution: 'YELLOW',\n    },\n    {\n      id: '3-down',\n      number: 3,\n      humanNumber: '3',\n      clue: 'Bits and bobs (4,3,4)',\n      direction: 'down',\n      length: 7,\n      group: ['3-down', '4-down'],\n      position: { x: 3, y: 0 },\n      separatorLocations: {\n        ',': [4],\n      },\n      solution: 'ODDSAND',\n    },\n    {\n      id: '4-down',\n      number: 4,\n      humanNumber: '4',\n      clue: 'See 3 down',\n      direction: 'down',\n      length: 4,\n      group: ['3-down', '4-down'],\n      position: {\n        x: 6,\n        y: 1,\n      },\n      separatorLocations: {},\n      solution: 'ENDS',\n    },\n  ],\n  solutionAvailable: true,\n  dateSolutionAvailable: 1542326400000,\n  dimensions: {\n    cols: 13,\n    rows: 13,\n  },\n  crosswordType: 'quick',\n}\n\nconst tourStops =[\n  {\n    \"date1\": 2,\n    \"date2\": 12,\n    \"venue\": \"Palace of the Fine Arts\",\n    \"city\": \"San Francisco\",\n    \"state\": \"California\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 13,\n    \"venue\": \"Palace Theatre\",\n    \"city\": \"Los Angeles\",\n    \"state\": \"California\",\n    \"game\": \"waldo\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 14,\n    \"venue\": \"The Magnolia\",\n    \"city\": \"El Cajon\",\n    \"state\": \"California\",\n    \"game\": \"coloring\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 15,\n    \"venue\": \"Fox Performing Arts Center\",\n    \"city\": \"Riverside\",\n    \"state\": \"California\",\n    \"game\": \"waldo\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 16,\n    \"venue\": \"The Van Buren\",\n    \"city\": \"Phoenix\",\n    \"state\": \"Arizona\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 18,\n    \"venue\": \"Majestic Theater\",\n    \"city\": \"Dallas\",\n    \"state\": \"Texas\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 19,\n    \"venue\": \"The Aztec Theater\",\n    \"city\": \"San Antonio\",\n    \"state\": \"Texas\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 21,\n    \"venue\": \"Mars Music Hall\",\n    \"city\": \"Huntsville\",\n    \"state\": \"Alabama\",\n    \"game\": \"coloring\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 22,\n    \"venue\": \"Seven Seas Concert Series\",\n    \"city\": \"Orlando\",\n    \"state\": \"Florida\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 24,\n    \"venue\": \"Buckhead Theatre\",\n    \"city\": \"Atlanta\",\n    \"state\": \"Georgia\",\n    \"game\": \"waldo\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 2,\n    \"date2\": 24,\n    \"venue\": \"Walker Theatre\",\n    \"city\": \"Chattanooga\",\n    \"state\": \"Tennesee\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 1,\n    \"venue\": \"State Theatre\",\n    \"city\": \"Portland\",\n    \"state\": \"Oregon\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 2,\n    \"venue\": \"The Fillmore\",\n    \"city\": \"Philadelphia\",\n    \"state\": \"Pennsylvania\",\n    \"game\": \"waldo\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 3,\n    \"venue\": \"The National\",\n    \"city\": \"Richmond\",\n    \"state\": \"Virginia\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 5,\n    \"venue\": \"Lincoln Theatre\",\n    \"city\": \"Washington\",\n    \"state\": \"DC\",\n    \"game\": \"coloring\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 7,\n    \"venue\": \"Somerville Theatre\",\n    \"city\": \"Somerville\",\n    \"state\": \"Massachussets\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 8,\n    \"venue\": \"Paramount Theatre\",\n    \"city\": \"Ashbury Park\",\n    \"state\": \"New Jersey\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 9,\n    \"venue\": \"Whitaker Center\",\n    \"city\": \"Harrisburg\",\n    \"state\": \"Pennsylvania\",\n    \"game\": \"waldo\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 10,\n    \"venue\": \"Royal Oak Music Theatre\",\n    \"city\": \"Royal Oak\",\n    \"state\": \"Michigan\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 14,\n    \"venue\": \"20 Monroe Live\",\n    \"city\": \"Grand Rapids\",\n    \"state\": \"Michigan\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 16,\n    \"venue\": \"The Pageant\",\n    \"city\": \"St. Louis\",\n    \"state\": \"Missouri\",\n    \"game\": \"coloring\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 17,\n    \"venue\": \"The Center for the Performin Arts\",\n    \"city\": \"Camel\",\n    \"state\": \"Indiana\",\n    \"game\": \"waldo\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 18,\n    \"venue\": \"Athenaeum Theatre\",\n    \"city\": \"Chicago\",\n    \"state\": \"Illinois\",\n    \"game\": \"puzzle\",\n    \"data\": \"none\"\n  },\n  {\n    \"date1\": 4,\n    \"date2\": 19,\n    \"venue\": \"The Fillmore\",\n    \"city\": \"Minneapolis\",\n    \"state\": \"Minnesota\",\n    \"game\": \"crossword\",\n    \"data\": \"none\"\n  }\n]\nlet box = () => {\n  return(\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 4025.47 2578.22\"><g id=\"Layer_2\" data-name=\"Layer 2\"><polygon className=\"state\" points=\"2718.21 1967.83 2717.61 1974.84 2737.56 1995.29 2735.13 2013.62 2730.58 2026.64 2659.55 2022.77 2645.49 1884.11 2646.78 1738.09 2650.05 1619.7 2643.21 1602.67 2736.64 1594 2832.06 1584.93 2864.49 1694.62 2893.06 1782.17 2907.45 1809.11 2916.1 1824.46 2905.36 1841.86 2904.52 1871.17 2910.76 1887.69 2910.76 1903.93 2910.44 1919.04 2916.74 1930.02 2921.9 1940.25 2762.47 1958.36 2718.21 1967.83\"/><polygon className=\"state\" points=\"2525.43 1518.83 2525.19 1526.36 2518.62 1539.63 2506.28 1549.28 2504.43 1564.46 2493.51 1577.12 2496.1 1603.38 2488.14 1612.37 2487.19 1619.63 2474.29 1627.22 2474.81 1640.35 2466.26 1665.18 2457.89 1670.86 2445.3 1683.96 2438.36 1703.07 2423.59 1735.61 2423 1757.22 2433 1780.57 2430.29 1798.63 2365.5 1798.71 2281.98 1804.93 2207.98 1806.72 2211.31 1755.07 2193.69 1755.07 2178.96 1756.54 2174.86 1750.66 2175.7 1671.22 2175.78 1582.98 2159.59 1487.44 2248.48 1486.8 2329.29 1484.25 2406.38 1480.7 2489.86 1481.38 2496.69 1492.16 2489.06 1502.4 2481.49 1512.71 2477.52 1521.97 2525.43 1518.83\"/><polygon className=\"state\" points=\"1644.53 1070.22 1638.49 1157.97 1638.33 1160.88 1629.74 1300.1 1620.85 1432.75 1551.18 1427.43 1464.53 1420.04 1341.68 1407.7 1227.73 1393.97 1115.11 1378.68 1166.37 1019.96 1234.52 1029.37 1302.72 1038.08 1439.38 1053.16 1507.85 1059.6 1644.53 1070.22\"/><polygon className=\"state\" points=\"3690.43 823.56 3689.91 837.45 3661.97 849.71 3624.66 864.15 3578.11 898.09 3573.05 887.95 3585.34 875.73 3578.25 869.59 3564.93 801.44 3615.49 790.14 3676.86 775.89 3690.43 823.56\"/><polygon className=\"state\" points=\"3400.2 1135.17 3392.91 1144.95 3392.15 1139.69 3384.76 1133.3 3389.48 1127.88 3400.2 1135.17\"/><polygon className=\"state\" points=\"3537.75 1144.24 3491.51 1154.86 3461.02 1043.48 3464.65 1035.33 3469.87 1029.96 3485.58 1031.16 3477.59 1042.7 3483.24 1059.28 3508.49 1103.52 3537.75 1144.24\"/><polygon className=\"state\" points=\"3385.15 2323.12 3381.93 2405.25 3349.74 2427.41 3306.81 2423.17 3287.1 2385.16 3252.21 2369.16 3196.34 2297.34 3146.36 2236.69 3132.55 2193.96 3138.17 2136.55 3112.3 2088.4 3052.97 2041.29 3003.27 2012.91 2919.03 2062.21 2897.79 2038.89 2818.61 2006.27 2730.58 2026.64 2735.13 2013.62 2737.56 1995.29 2717.61 1974.84 2718.21 1967.83 2762.47 1958.36 2921.9 1940.25 2936.75 1963.18 3016.01 1957.2 3144.85 1952.54 3153.06 1967.43 3161.93 1957.76 3157.26 1926.38 3166.17 1921.83 3182.65 1926.06 3199.38 1925.1 3220.22 1989.31 3262.47 2058.51 3309.78 2120.27 3315.88 2155.6 3367.32 2242.43 3385.15 2323.12\"/><polygon className=\"state\" points=\"2453.81 971.63 2451.73 996.2 2440.47 1017.47 2436.33 1024.26 2421.1 1030.4 2397.99 1036.2 2392.72 1052.09 2401.59 1058.68 2405.26 1072.53 2397.15 1088.69 2393.32 1102.68 2376.36 1117.05 2375.8 1133.62 2365.98 1126.56 2352.09 1112.49 2276.74 1117.53 2197.32 1120.48 2135.44 1121.68 2073.44 1122.08 2068.86 1105.67 2070.77 1089.45 2069.25 1073.85 2062.18 1047.7 2057.68 1036.88 2052.75 1033.93 2052.28 1012.96 2048.05 997.96 2035.79 980.82 2035.99 973.33 2031.75 958.34 2028.8 949.29 2028.92 940.98 2018.14 930.84 2023.62 915.99 2027.16 901.44 2028.8 891.6 2020.37 879.5 2020.63 857.34 2029.4 857.34 2101.7 857.42 2191.58 854.91 2288.12 851.42 2374.89 849.15 2376.08 854.05 2385.45 868 2379.91 875.17 2381.14 894.23 2384.29 902.18 2389.38 916.35 2411.7 923.8 2418.99 937.27 2423.32 943.93 2431.53 948.08 2435.33 957.66 2446.35 964.26 2453.81 971.63\"/><polygon className=\"state\" points=\"1083.16 686.64 1045.88 909.47 847.2 873.7 649.45 829.86 687.79 671.28 699.29 647.44 696.84 634.67 686.33 625.88 689.86 611.75 703.51 593.74 721.23 579.41 736.89 552.82 750.63 531.89 759.61 521.75 759.37 507.5 750.59 497.88 739.92 477.37 744.15 461.67 741.68 446.78 769.14 322.2 795.78 207.95 853.92 221.2 837.62 316.5 848.24 343.8 844.65 359.95 852.8 376.71 865.02 388.25 872.23 404.29 883.41 435.6 896.59 451.92 915 456.6 904.14 475.04 893.28 497.36 893.76 521.43 885.29 525.72 881.22 548.75 890.61 559.89 905.17 551.78 914.12 540.49 921.22 544.47 926.3 558.24 927.93 587.96 936.96 601.33 936.44 625.48 939.03 632.76 951.57 637.46 956.95 651.95 963.91 677.34 978.04 667.13 998.44 674.27 1001.75 665.78 1036.93 677.84 1052.13 677.52 1064.35 661.25 1070.87 664.88 1074.97 678.55 1081.13 684.65 1083.16 686.64\"/><polygon className=\"state\" points=\"2159.39 1445.84 2095.68 1446.6 1964.96 1446.16 1834.21 1443.15 1761.63 1440.4 1689.11 1436.82 1620.85 1432.75 1629.74 1300.1 1638.33 1160.88 1638.45 1160.88 1759.97 1167.79 1850.45 1171.42 2010.64 1174.67 2106.54 1174.67 2123.18 1186.61 2132.25 1186.33 2134.4 1199.42 2124.74 1216.3 2130.18 1224.85 2139.09 1243.76 2157.72 1252.07 2158.44 1349.05 2159.39 1445.84\"/><polygon className=\"state\" points=\"3066.69 1320.15 3046.1 1346.28 3042.27 1351.14 3021.47 1364.95 3021.47 1364.97 3021.43 1364.99 3020.75 1372.48 3018.2 1376.81 3017.12 1378.66 3014.53 1383.03 2996.36 1396.52 2993.01 1402.76 2991.18 1406.18 2991.16 1406.2 2991.14 1406.22 2977.09 1413.86 2956.88 1421.85 2908.25 1431.3 2843.88 1435.38 2823.17 1438.93 2781.24 1441.08 2738.67 1444.89 2699.51 1448.32 2654.27 1455.09 2651.56 1451.19 2637.15 1452.66 2638.63 1466.83 2534.42 1474.3 2550.06 1463.6 2561.05 1455.21 2558.57 1441.12 2560.17 1431.89 2556.34 1418.44 2560.57 1409.31 2580.18 1412.7 2598.29 1419.64 2607.16 1411.43 2602.74 1391.93 2618.38 1382.99 2630.44 1375.34 2623.58 1367.34 2630.6 1354.09 2629.52 1347.41 2638.99 1348.93 2638.83 1338.92 2657.88 1344.23 2672.29 1332.93 2695.61 1344.54 2700.15 1335.24 2715.72 1325.01 2732.14 1334.04 2738.99 1323.18 2749.49 1303.95 2755.14 1314.47 2770.42 1320.63 2783.07 1292.13 2792.82 1288.16 2800.37 1271.64 2809.54 1263.89 2809.02 1246.45 2826.08 1247.73 2836.15 1238.46 2847.97 1236.87 2850.16 1229.83 2842.2 1212.2 2845.67 1207.43 2869.91 1206.52 2883.42 1213.59 2904.72 1231.43 2920.47 1235.79 2932.28 1241.57 2948.69 1236.79 2961.78 1240.21 2976.15 1233.16 2989.26 1229.67 2996.68 1241.41 3011.08 1248.09 3013.7 1256.4 3015.69 1275.03 3026.23 1287.77 3031.69 1300.82 3043.83 1310.88 3052.62 1320.63 3066.69 1320.15\"/><polygon className=\"state\" points=\"2991.14 1406.22 2977.05 1413.9 2956.88 1421.85 2977.09 1413.86 2991.14 1406.22\"/><polygon className=\"state\" points=\"3017.12 1378.66 3014.53 1383.07 2996.36 1396.6 2993.01 1402.76 2996.36 1396.52 3014.53 1383.03 3017.12 1378.66\"/><polygon className=\"state\" points=\"3066.75 1320.15 3046.1 1346.28 3066.69 1320.15 3066.75 1320.15\"/><polygon className=\"state\" points=\"3543.51 1151.31 3523.74 1187.76 3507.86 1192.82 3503.73 1200.1 3503.73 1200.14 3458.77 1165.88 3441.14 1100.19 3436.63 1133.81 3454.35 1210.16 3406.8 1192.86 3400.08 1181.24 3389.56 1187.48 3379.3 1184.59 3383.08 1163.21 3393.18 1152.39 3392.91 1144.95 3400.2 1135.17 3389.48 1127.88 3384.76 1133.3 3369.83 1126.12 3369.79 1126.12 3354.14 1123.79 3357.21 1113.21 3346.71 1108.42 3335.97 1107.51 3328.26 1097.28 3317.32 1086.3 3294.68 1083.51 3282.78 1092.82 3276.56 1100.87 3255.55 1101.23 3248.14 1112.29 3235.11 1118.41 3225.18 1130.86 3216.03 1140.81 3208.32 1095.49 3272.1 1083.55 3293.8 1079.13 3342.37 1068.94 3400.92 1057.01 3461.02 1043.48 3491.51 1154.86 3537.75 1144.24 3543.51 1151.31\"/><polygon className=\"state\" points=\"3400.08 1181.24 3406.8 1192.86 3400.08 1181.29 3389.56 1187.52 3379.3 1184.59 3389.56 1187.48 3400.08 1181.24\"/><polygon className=\"state\" points=\"3507.86 1192.82 3503.73 1200.14 3503.73 1200.1 3507.86 1192.82\"/><polygon className=\"state\" points=\"3903.15 451.84 3851.81 498.83 3797.55 538.17 3741.69 611.91 3725.2 660.9 3718.69 663.69 3712.27 652.35 3696.82 642.74 3696.78 633.43 3643.71 476.31 3664.92 453.81 3675.22 407.66 3673.83 333.94 3699.78 254.06 3726.6 271.06 3761.89 243.8 3796.35 260.56 3834.36 379.26 3890.22 415.31 3903.15 451.84\"/><path className=\"state\" d=\"M2415.8,564.44l.48-.26v0Zm165.33,82.21v0l3.23-7.68v0Z\"/><polygon className=\"state\" points=\"2561.05 1455.21 2550.06 1463.6 2534.42 1474.3 2533.14 1483.17 2529.6 1496.38 2525.43 1518.83 2477.52 1521.97 2481.49 1512.71 2489.06 1502.4 2496.69 1492.16 2489.86 1481.38 2406.38 1480.7 2329.29 1484.25 2248.48 1486.8 2159.59 1487.44 2159.75 1445.84 2159.39 1445.84 2158.44 1349.05 2157.72 1252.07 2139.09 1243.76 2130.18 1224.85 2124.74 1216.3 2134.4 1199.42 2132.25 1186.33 2123.18 1186.61 2106.54 1174.67 2097.35 1155.38 2086.53 1143.84 2074.84 1129.55 2073.44 1122.08 2135.44 1121.68 2197.32 1120.48 2276.74 1117.53 2352.09 1112.49 2365.98 1126.56 2375.8 1133.62 2370.88 1156.41 2378.43 1183.16 2390.97 1201.17 2405.14 1215.82 2422 1227.08 2428.7 1230.83 2435.57 1247.69 2437.6 1262.74 2445.88 1266.04 2458.89 1259.39 2473.26 1273.08 2470.31 1290 2464.55 1303.59 2460.96 1319.75 2471.9 1332.69 2486.87 1344.51 2495.02 1344.31 2515.13 1362.88 2522.56 1365.03 2529.48 1386.52 2527.78 1400.25 2538.64 1421.77 2546.28 1418.84 2560.17 1431.89 2558.57 1441.12 2561.05 1455.21\"/><polygon className=\"state\" points=\"2025.17 611.51 2025.05 628.11 1903.88 631.12 1800.47 627.2 1670.11 620.3 1548.83 611.23 1555.44 500.27 1569.49 332.38 1778.83 347.33 1984.88 354.15 1985.65 363.22 1991.15 376.55 1990.63 387.25 1988.4 398.99 1988.96 416.98 1989.8 433.69 1996.73 450.56 2004.05 469.5 2006.96 488.09 2008.07 499.07 2008.19 511.41 2010.52 538.29 2012.6 543.31 2013.19 564.16 2016.1 582.75 2021.31 597.62 2025.17 611.51\"/><polygon className=\"state\" points=\"2106.54 1174.67 2010.64 1174.67 1850.45 1171.42 1759.97 1167.79 1638.45 1160.88 1638.33 1160.88 1638.49 1157.97 1644.53 1070.22 1507.85 1059.6 1523.34 879.22 1653.1 889.3 1752.92 895.22 1886.46 900.48 1903.4 912.42 1927.8 920.25 1933.62 916.23 1949.5 916.87 1973.38 916.35 1990.51 928.25 2008.79 935.98 2011.8 943.57 2017.54 947.96 2028.8 949.29 2031.75 958.34 2035.99 973.33 2035.79 980.82 2048.05 997.96 2052.28 1012.96 2052.75 1033.93 2057.68 1036.88 2062.18 1047.7 2069.25 1073.85 2070.77 1089.45 2068.86 1105.67 2073.44 1122.08 2074.84 1129.55 2086.53 1143.84 2097.35 1155.38 2106.54 1174.67\"/><polygon className=\"state\" points=\"3725.2 660.9 3719.94 683.62 3711.87 684.13 3699.89 693.88 3695.61 704.38 3617.41 724.83 3609.82 717.08 3611.89 704.34 3607.34 680.9 3607.86 674.87 3604.51 653.54 3606.82 634.15 3609.97 625.08 3611.93 602.24 3609.57 587.72 3609.38 578.61 3620.4 571.05 3631.7 557.01 3631.18 545.43 3623.07 534.13 3623.78 508.22 3623.66 508.18 3623.86 484.82 3643.71 476.31 3696.78 633.43 3696.82 642.74 3712.27 652.35 3718.69 663.69 3725.2 660.9\"/><polygon className=\"state\" points=\"3693.14 873.22 3606.82 924 3564.22 934.9 3561.59 904.53 3502.14 882.13 3489.92 878.46 3477.19 874.97 3469.87 863.16 3469.35 853.01 3459.61 846.87 3442.05 836.33 3352.33 856.18 3255.83 876.17 3152.18 895.82 3147.8 871.63 3194.63 807.95 3191.76 799.64 3191.72 799.4 3177.91 775.33 3209.72 757.59 3261.47 750.74 3316.2 747.01 3358.37 707.17 3346.91 673.47 3336.57 661.25 3336.29 661.17 3336.33 661.13 3336.61 661.25 3388.7 585.88 3413.35 562.88 3508.57 538.85 3511.84 557.05 3512.2 569.06 3520.39 594.87 3527.29 607.45 3525.53 627.28 3537.23 648.84 3536.4 662.65 3538.43 665.7 3547.78 664 3563.58 737.28 3564.93 801.44 3578.25 869.59 3585.34 875.73 3573.05 887.95 3578.11 898.09 3669.06 861.92 3693.14 873.22\"/><polygon className=\"state\" points=\"3118.66 1043.06 3118.98 1064.18 3115.85 1088.62 3112.42 1109.02 3112.82 1118.41 3097.42 1141.92 3090.1 1147.59 3081.16 1151.63 3072.47 1150.99 3059.41 1168.83 3059.13 1185.41 3058.32 1194.46 3052.66 1198.98 3050.22 1189.16 3040.44 1188.44 3033.56 1209.37 3035.5 1229.36 3028.22 1243.16 3011.08 1248.09 2996.68 1241.41 2989.26 1229.67 2976.15 1233.16 2961.78 1240.21 2948.69 1236.79 2932.28 1241.57 2920.47 1235.79 2904.72 1231.43 2883.42 1213.59 2869.91 1206.52 2845.67 1207.43 2838.42 1145.11 2828.11 1057.57 2818.29 976.15 2852.71 971.11 2883.38 967.09 2908.65 962.78 2908.65 962.82 2952.83 975.48 2987.13 975.08 3034.04 955.55 3069.74 924.32 3102.08 906.48 3122.49 1026.14 3113.82 1032.21 3118.66 1043.06\"/><polygon className=\"state\" points=\"2175.78 1582.98 2175.7 1671.22 2174.86 1750.66 2141.96 1733.34 2120.63 1723.91 2103.47 1730.19 2076.83 1729.36 2061.06 1729.52 2048.09 1736.89 2035.39 1740.66 2024.29 1736.13 1998.94 1740.89 1987.61 1725.63 1975.63 1738.6 1955.02 1732.46 1934.06 1718.02 1911.14 1726.63 1901.71 1704.56 1866.5 1705.8 1844.19 1700.24 1819.1 1692.94 1808.62 1673.73 1788.61 1679.04 1776.67 1671.14 1759.18 1660.64 1763.02 1574.15 1766.89 1485.48 1693.83 1481.86 1620.77 1477.45 1547.81 1472.23 1551.18 1427.43 1620.85 1432.75 1689.11 1436.82 1761.63 1440.4 1834.21 1443.15 1964.96 1446.16 2095.68 1446.6 2159.39 1445.84 2159.75 1445.84 2159.59 1487.44 2175.78 1582.98\"/><polygon className=\"state\" points=\"3689.91 837.45 3690.43 823.56 3676.86 775.89 3704.08 767.34 3715.3 788.9 3728.39 796.05 3733.95 808.87 3689.91 837.45\"/><polygon className=\"state\" points=\"3373.06 1604.66 3355.7 1672.98 3300.08 1740.54 3228.37 1799.87 3214.48 1797.41 3206.89 1795.26 3204.22 1778.14 3193.91 1762.52 3178.15 1755.03 3179.7 1747.99 3173.59 1738.76 3164.88 1719.13 3137.85 1704.84 3125.72 1684.83 3105.63 1672.98 3098.77 1662.59 3069.46 1645.23 3058.2 1630.61 3040.2 1604.22 3026.51 1600.63 3004.35 1588.54 3013.82 1569.84 3020.87 1561.21 3027.86 1557.51 3065.39 1536.26 3133.39 1526.44 3168.48 1524.96 3170.36 1532.76 3176.78 1525.6 3190.84 1538.83 3192.4 1549.28 3274.41 1535.82 3373.06 1604.66\"/><polygon className=\"state\" points=\"2020.63 857.34 2020.37 879.5 2028.8 891.6 2027.16 901.44 2023.62 915.99 2018.14 930.84 2028.92 940.98 2028.8 949.29 2017.54 947.96 2011.8 943.57 2008.79 935.98 1990.51 928.25 1973.38 916.35 1949.5 916.87 1933.62 916.23 1927.8 920.25 1903.4 912.42 1886.46 900.48 1752.92 895.22 1653.1 889.3 1523.34 879.22 1538.12 694.2 1548.83 611.23 1670.11 620.3 1800.47 627.2 1903.88 631.12 2025.05 628.11 2023.86 641.37 2009.49 651.47 2005.92 663.81 2012.16 677.96 2023.34 685.13 2030.71 772.38 2029.4 857.34 2020.63 857.34\"/><polygon className=\"state\" points=\"769.14 322.2 741.68 446.78 744.15 461.67 739.92 477.37 612.24 446.58 587.72 450.05 573.04 442.04 559.11 445.98 533.58 449.53 506.12 440.7 490.11 443.91 476.34 443.39 467.95 436.04 447.06 425.97 432.34 424.74 405.87 427.01 390.69 422.78 377.51 415.19 376.68 401.58 379.5 386.45 373.29 366.32 357.2 355.9 344.93 343.4 326.61 337.19 313.72 334.42 320.5 256.77 337.79 169.64 414.72 211.38 420.12 288.12 441.84 269.35 453.94 194.42 448.26 113.4 621.23 163.63 795.78 207.95 769.14 322.2\"/><polygon className=\"state\" points=\"2604.41 805.74 2596.54 858.1 2608.84 901.66 2609.07 923.84 2608.84 923.84 2608.88 924.08 2557.3 927.73 2487.39 932.87 2418.99 937.27 2411.7 923.8 2389.38 916.35 2384.29 902.18 2381.14 894.23 2379.91 875.17 2385.45 868 2376.08 854.05 2374.89 849.15 2372.59 839 2371.28 817.16 2368.77 809.79 2345.93 797.45 2328.73 782.58 2323.69 773.02 2316.12 767.18 2294.51 755.12 2286.72 754.6 2267.11 737.8 2268.39 717.71 2267.55 693 2271.64 669.92 2257.59 653.3 2266.07 636.22 2279.33 626.96 2294.67 616.25 2296.67 616.25 2293.91 565.08 2310.28 559.28 2372.2 537.14 2411.94 565.87 2412.53 566.31 2414.95 564.94 2415.36 564.7 2415.52 564.62 2415.8 564.44 2416.28 564.18 2416.36 564.44 2416.4 564.44 2426.46 566.83 2432.6 582.91 2489.02 595.35 2526.87 608.88 2544.76 607.57 2557.22 607.69 2562 622.33 2577.59 626.76 2584.36 638.97 2581.13 646.65 2581.13 646.69 2579.54 661.65 2579.54 661.69 2593.71 661.22 2590.32 676.22 2590.32 676.26 2599.87 686.21 2599.87 686.17 2599.91 686.05 2601.62 686.52 2601.1 687.44 2578.78 722.46 2588.53 732.4 2630.36 669.53 2639.98 668.25 2613.28 741.27 2604.41 805.74\"/><polygon className=\"state\" points=\"2416.28 564.16 2416.28 564.18 2415.8 564.44 2416.28 564.16\"/><polygon className=\"state\" points=\"2584.36 638.97 2584.36 639.01 2581.13 646.69 2581.13 646.65 2584.36 638.97\"/><polygon className=\"state\" points=\"3335.97 1107.51 3331.58 1125.7 3291.53 1108.7 3290.73 1133.42 3283.87 1143.92 3272.53 1158.17 3264.42 1171.62 3258.66 1168.87 3253.32 1182.96 3248.54 1195.3 3248.54 1195.34 3246.69 1204.04 3237.3 1209.37 3237.28 1209.37 3225.7 1204.92 3215.16 1199.74 3211.95 1220.33 3202.78 1238.34 3201.67 1252.11 3190.09 1266.16 3183.21 1283.3 3186.2 1293.57 3186.08 1301.88 3176.06 1310.68 3165.93 1311.12 3158.22 1319.15 3149.63 1317.36 3149.63 1317.48 3149.59 1317.48 3149.39 1325.63 3124.04 1337.51 3114.42 1332.65 3093.61 1347.06 3081.59 1341.6 3072.31 1334.76 3066.75 1320.07 3066.69 1320.15 3052.62 1320.63 3043.83 1310.88 3031.69 1300.82 3026.23 1287.77 3015.69 1275.03 3013.7 1256.4 3011.08 1248.09 3028.22 1243.16 3035.5 1229.36 3033.56 1209.37 3040.44 1188.44 3050.22 1189.16 3052.66 1198.98 3058.32 1194.46 3059.13 1185.41 3059.41 1168.83 3072.47 1150.99 3081.16 1151.63 3090.1 1147.59 3097.42 1141.92 3112.82 1118.41 3112.42 1109.02 3115.85 1088.62 3118.98 1064.18 3118.66 1043.06 3113.82 1032.21 3122.49 1026.14 3136.62 1108.27 3208.32 1095.49 3216.03 1140.81 3225.18 1130.86 3235.11 1118.41 3248.14 1112.29 3255.55 1101.23 3276.56 1100.87 3282.78 1092.82 3294.68 1083.51 3317.32 1086.3 3328.26 1097.28 3335.97 1107.51\"/><polygon className=\"state\" points=\"3124.04 1337.51 3149.39 1325.63 3149.39 1325.73 3124 1337.63 3114.38 1332.73 3093.57 1347.14 3081.59 1341.67 3072.27 1334.84 3066.75 1320.15 3066.69 1320.15 3066.75 1320.07 3072.31 1334.76 3081.59 1341.6 3093.61 1347.06 3114.42 1332.65 3124.04 1337.51\"/><polygon className=\"state\" points=\"3176.06 1310.68 3186.08 1301.88 3186.08 1301.98 3176.02 1310.85 3165.89 1311.28 3158.18 1319.32 3149.63 1317.48 3149.63 1317.36 3158.22 1319.15 3165.93 1311.12 3176.06 1310.68\"/><polygon className=\"state\" points=\"3190.09 1266.16 3201.67 1252.11 3190.13 1266.16 3183.21 1283.3 3190.09 1266.16\"/><polygon className=\"state\" points=\"3248.54 1195.3 3253.32 1182.96 3248.54 1195.34 3248.54 1195.3\"/><polygon className=\"state\" points=\"3335.97 1107.51 3331.62 1125.74 3291.57 1108.74 3290.77 1133.45 3283.91 1143.96 3272.57 1158.21 3264.46 1171.66 3258.7 1168.91 3253.32 1182.96 3258.66 1168.87 3264.42 1171.62 3272.53 1158.17 3283.87 1143.92 3290.73 1133.42 3291.53 1108.7 3331.58 1125.7 3335.97 1107.51\"/><polygon className=\"state\" points=\"1538.12 694.2 1523.34 879.22 1507.85 1059.6 1439.38 1053.16 1302.72 1038.08 1234.52 1029.37 1166.37 1019.96 1031.03 996.48 1045.88 909.47 1083.16 686.64 1081.13 684.65 1082.84 681.66 1090.2 635.99 1215.95 655 1315.42 669.57 1431.01 682.7 1538.12 694.2\"/><polygon className=\"state\" points=\"1569.49 332.38 1555.44 500.27 1548.83 611.23 1538.12 694.2 1431.01 682.7 1315.42 669.57 1215.95 655 1090.2 635.99 1082.84 681.66 1081.13 684.65 1074.97 678.55 1070.87 664.88 1064.35 661.25 1052.13 677.52 1036.93 677.84 1001.75 665.78 998.44 674.27 978.04 667.13 963.91 677.34 956.95 651.95 951.57 637.46 939.03 632.76 936.44 625.48 936.96 601.33 927.93 587.96 926.3 558.24 921.22 544.47 914.12 540.49 905.17 551.78 890.61 559.89 881.22 548.75 885.29 525.72 893.76 521.43 893.28 497.36 904.14 475.04 915 456.6 896.59 451.92 883.41 435.6 872.23 404.29 865.02 388.25 852.8 376.71 844.65 359.95 848.24 343.8 837.62 316.5 853.92 221.2 1031.31 257.81 1209.85 288.56 1389.31 313.43 1569.49 332.38\"/><polygon className=\"state\" points=\"1166.37 1019.96 1115.11 1378.68 1011.02 1362.12 873.51 1338.33 758.22 1317.6 847.2 873.7 1045.88 909.47 1031.03 996.48 1166.37 1019.96\"/><path className=\"state\" d=\"M3400.08,1181.25l-10.52,6.23-10.27-2.89,10.27,2.93,10.52-6.23,6.72,11.57Zm-68.5-55.55-40-17-.8,24.72-6.86,10.5-11.34,14.25-8.11,13.45-5.76-2.75-5.34,14.09,5.38-14,5.76,2.75,8.11-13.45,11.34-14.25,6.86-10.5.8-24.72,40,17,4.35-18.23Zm-83,69.6v0l4.78-12.37Zm-58.45,70.86-6.88,17.14,6.92-17.14,11.54-14.05Zm-14,44.53-10.13.43-7.71,8-8.59-1.8v.12l8.55,1.83,7.71-8,10.13-.44,10.06-8.86v-.1Zm-52,26.82-9.62-4.86-20.81,14.41-12-5.47-9.28-6.83-5.56-14.69-.06.08-20.59,26.13,20.65-26.13,5.52,14.69,9.32,6.83,12,5.47,20.81-14.41,9.62,4.9,25.39-11.9v-.1ZM3014.53,1383l-18.17,13.49-3.35,6.24,3.35-6.16,18.17-13.53,2.59-4.41Zm-37.44,30.83-20.21,8,20.17-7.95,14.09-7.67Zm546.65-226.1-15.88,5.06-4.13,7.28v0l-10.66,65,7.23,2.07,23.48-79.48Z\"/><polygon className=\"state\" points=\"3518.66 1324.89 3442.17 1342.15 3366.6 1358.55 3223.37 1385.22 3117.74 1399.59 3101.16 1401.84 3101.12 1401.84 3064.83 1409.3 2956.88 1421.85 2977.05 1413.9 2991.14 1406.22 2991.16 1406.2 2991.18 1406.18 2993.01 1402.76 2996.36 1396.6 3014.53 1383.07 3017.12 1378.66 3018.2 1376.81 3020.79 1372.44 3021.47 1364.97 3021.47 1364.95 3042.27 1351.14 3046.1 1346.28 3066.75 1320.15 3072.27 1334.84 3081.59 1341.67 3093.57 1347.14 3114.38 1332.73 3124 1337.63 3149.39 1325.73 3149.39 1325.63 3149.43 1325.61 3149.63 1317.48 3158.18 1319.32 3165.89 1311.28 3176.02 1310.85 3186.08 1301.98 3186.08 1301.88 3186.16 1301.82 3186.28 1293.41 3183.21 1283.3 3190.13 1266.16 3201.67 1252.11 3202.78 1238.34 3211.95 1220.33 3215.16 1199.74 3225.7 1204.92 3237.28 1209.37 3237.3 1209.37 3246.69 1204.04 3248.54 1195.34 3253.32 1182.96 3258.7 1168.91 3264.46 1171.66 3272.57 1158.21 3283.91 1143.96 3290.77 1133.45 3291.57 1108.74 3331.62 1125.74 3335.97 1107.51 3346.67 1108.46 3357.21 1113.21 3354.1 1123.79 3354.14 1123.79 3369.79 1126.12 3384.76 1133.3 3392.11 1139.69 3392.87 1144.95 3393.14 1152.39 3383.08 1163.21 3379.3 1184.59 3389.56 1187.52 3400.08 1181.29 3406.8 1192.86 3461.62 1232.88 3484.54 1272.16 3485.93 1274.55 3518.66 1324.89\"/><polygon className=\"state\" points=\"1551.18 1427.43 1547.81 1472.23 1529.53 1709.03 1516.36 1879.58 1444.58 1873.68 1305.47 1860.11 1236.04 1852.28 1235.96 1860.11 1242.95 1875.56 1109.87 1858.84 1103.85 1895.96 1041.69 1887.45 1115.11 1378.68 1227.73 1393.97 1341.68 1407.7 1464.53 1420.04 1551.18 1427.43\"/><polygon className=\"state\" points=\"847.2 873.7 758.22 1317.6 744.35 1389.15 740.64 1391.46 733.13 1404.03 724.04 1398.53 711.5 1389.38 696.36 1386.28 689.14 1396.16 693.05 1409.67 689.06 1428.74 686.97 1446.28 686.93 1464.4 678.84 1480.9 582.02 1342.11 482.96 1195.45 383.51 1043.36 454.46 781.23 649.37 830.09 649.45 829.86 847.2 873.7\"/><polygon className=\"state\" points=\"3620.4 571.05 3609.38 578.61 3609.57 587.72 3611.93 602.24 3609.97 625.08 3606.82 634.15 3604.51 653.54 3607.86 674.87 3607.34 680.9 3611.89 704.34 3609.82 717.08 3617.41 724.83 3563.58 737.28 3547.78 664 3538.43 665.7 3536.4 662.65 3537.23 648.84 3525.53 627.28 3527.29 607.45 3520.39 594.87 3512.2 569.06 3511.84 557.05 3508.57 538.85 3623.66 508.18 3623.78 508.22 3623.07 534.13 3631.18 545.43 3631.7 557.01 3620.4 571.05\"/><polygon className=\"state\" points=\"2589.44 2140.75 2479.16 2151.55 2409.98 2136.47 2362.91 2119.71 2301.65 2110.12 2232.33 2109.36 2225.48 2097.43 2233.27 2083.82 2244.89 2071.44 2244.63 2053.18 2238.69 2047.24 2245.05 2025.24 2249.83 2015.22 2256.53 1981.64 2249.23 1969.38 2239.65 1948.86 2232.45 1927.89 2227.79 1913.92 2214.82 1903.93 2207.98 1806.72 2281.98 1804.93 2365.5 1798.71 2430.29 1798.63 2436.05 1803.53 2429.77 1817.02 2441.91 1835.12 2439.36 1846.54 2450.18 1861.63 2439.96 1871.53 2437.32 1888.89 2423.08 1903.86 2417.04 1923.31 2411.06 1945.63 2401.99 1956.29 2406.26 1978.89 2475.65 1978.09 2549.63 1973.57 2548.43 1988.87 2544.24 2004.16 2550.02 2015.34 2561.13 2025.2 2565.01 2040.09 2567.12 2049.04 2560.61 2087.68 2589.44 2140.75\"/><polygon id=\"California\" className=\"state\" points=\"699.57 1557.43 673.4 1571.12 659.11 1610.62 640.36 1628.02 640.96 1644.5 640.84 1658.41 651.52 1673.41 639.54 1689.5 629.58 1687.31 532.14 1676.01 445.23 1663.19 443.88 1628.45 423.39 1575.16 357.96 1502.88 329.32 1492.04 304.89 1456.05 249.27 1433.83 234.7 1414.58 239.26 1364.27 195.22 1256.99 172.82 1119.09 181.29 1099.71 159.69 1061.91 129.61 973.21 142.59 899.89 122.32 841.47 159.73 774.57 181.17 699.86 454.46 781.23 383.51 1043.36 482.96 1195.45 582.02 1342.11 678.84 1480.9 678.68 1489.15 680.2 1502.01 683.02 1518.83 689.1 1537.5 699.57 1557.43\"/><polygon id=\"Texas\" className=\"state\" points=\"2256.53 1981.64 2249.83 2015.22 2245.05 2025.24 2238.69 2047.24 2244.63 2053.18 2244.89 2071.44 2233.27 2083.82 2225.48 2097.43 2232.33 2109.36 2164.4 2129.89 2091.74 2198.55 2011.04 2238.09 1966.08 2281.55 1946.63 2322.72 1944.88 2386.36 1948.35 2430.8 1963.81 2462.55 1931.07 2464.82 1872.06 2443.22 1807.8 2412.65 1786.06 2368.44 1770.36 2303.24 1724.28 2248.79 1698.77 2193.68 1661.68 2128.86 1607.46 2089.12 1542.19 2086.53 1486.33 2154.96 1422.02 2122.02 1383.19 2090.71 1368.19 2038.73 1346.66 1988.67 1304.24 1943.91 1267.55 1910.93 1242.95 1875.56 1235.96 1860.11 1236.04 1852.28 1305.47 1860.11 1444.58 1873.68 1516.36 1879.58 1529.53 1709.03 1547.81 1472.23 1620.77 1477.45 1693.83 1481.86 1766.89 1485.48 1763.02 1574.15 1759.18 1660.64 1776.67 1671.14 1788.61 1679.04 1808.62 1673.73 1819.1 1692.94 1844.19 1700.24 1866.5 1705.8 1901.71 1704.56 1911.14 1726.63 1934.06 1718.02 1955.02 1732.46 1975.63 1738.6 1987.61 1725.63 1998.94 1740.89 2024.29 1736.13 2035.39 1740.66 2048.09 1736.89 2061.06 1729.52 2076.83 1729.36 2103.47 1730.19 2120.63 1723.91 2141.96 1733.34 2174.86 1750.66 2178.96 1756.54 2193.69 1755.07 2211.31 1755.07 2207.98 1806.72 2214.82 1903.93 2227.79 1913.92 2232.45 1927.89 2239.65 1948.86 2249.23 1969.38 2256.53 1981.64\"/><polygon id=\"Arizona\" className=\"state\" points=\"1115.11 1378.68 1041.69 1887.45 888.41 1864.06 724.8 1769.43 619.07 1702.95 629.58 1687.31 639.54 1689.5 651.52 1673.41 640.84 1658.41 640.96 1644.5 640.36 1628.02 659.11 1610.62 673.4 1571.12 699.57 1557.43 689.1 1537.5 683.02 1518.83 680.2 1502.01 678.68 1489.15 678.84 1480.9 686.93 1464.4 686.97 1446.28 689.06 1428.74 693.05 1409.67 689.14 1396.16 696.36 1386.28 711.5 1389.38 724.04 1398.53 733.13 1404.03 740.64 1391.46 744.35 1389.15 758.22 1317.6 873.51 1338.33 1011.02 1362.12 1115.11 1378.68\"/><polygon id=\"Oregon\" className=\"state\" points=\"759.61 521.75 750.63 531.89 736.89 552.82 721.23 579.41 703.51 593.74 689.86 611.75 686.33 625.88 696.84 634.67 699.29 647.44 687.79 671.28 649.45 829.86 649.37 830.09 454.46 781.23 181.17 699.86 176.13 644.77 225.31 558.32 260.97 462.06 313.72 334.42 326.61 337.19 344.93 343.4 357.2 355.9 373.29 366.32 379.5 386.45 376.68 401.58 377.51 415.19 390.69 422.78 405.87 427.01 432.34 424.74 447.06 425.97 467.95 436.04 476.34 443.39 490.11 443.91 506.12 440.7 533.58 449.53 559.11 445.98 573.04 442.04 587.72 450.05 612.24 446.58 739.92 477.37 750.59 497.88 759.37 507.5 759.61 521.75\"/><polygon id=\"Georgia\" className=\"state\" points=\"3228.37 1799.87 3205.81 1871.29 3199.38 1925.1 3182.65 1926.06 3166.17 1921.83 3157.26 1926.38 3161.93 1957.76 3153.06 1967.43 3144.85 1952.54 3016.01 1957.2 2936.75 1963.18 2921.9 1940.25 2916.74 1930.02 2910.44 1919.04 2910.76 1903.93 2910.76 1887.69 2904.52 1871.17 2905.36 1841.86 2916.1 1824.46 2907.45 1809.11 2893.06 1782.17 2864.49 1694.62 2832.06 1584.93 2889.32 1578.95 2928.72 1573.03 3020.87 1561.21 3013.82 1569.84 3004.35 1588.54 3026.51 1600.63 3040.2 1604.22 3058.2 1630.61 3069.46 1645.23 3098.77 1662.59 3105.63 1672.98 3125.72 1684.83 3137.85 1704.84 3164.88 1719.13 3173.59 1738.76 3179.7 1747.99 3178.15 1755.03 3193.91 1762.52 3204.22 1778.14 3206.89 1795.26 3214.48 1797.41 3228.37 1799.87\"/><polygon id=\"Tennesee\" className=\"state\" points=\"3103.87 1426.04 3089.74 1432.21 3080.92 1448.99 3068.1 1449.15 3043.79 1470.12 3036.73 1463.08 3020.15 1477.93 3021.47 1484.37 3008.57 1493.55 3002.47 1502.48 2986.81 1512.59 2970.13 1519.1 2955.56 1523.49 2946.57 1535.78 2942.79 1546.09 2927.88 1553.8 2928.72 1573.03 2889.32 1578.95 2832.06 1584.93 2736.64 1594 2643.21 1602.67 2561.44 1607.25 2488.14 1612.37 2496.1 1603.38 2493.51 1577.12 2504.43 1564.46 2506.28 1549.28 2518.62 1539.63 2525.19 1526.36 2525.43 1518.83 2529.6 1496.38 2533.14 1483.17 2534.42 1474.3 2638.63 1466.83 2637.15 1452.66 2651.56 1451.19 2654.27 1455.09 2699.51 1448.32 2738.67 1444.89 2781.24 1441.08 2823.17 1438.93 2843.88 1435.38 2908.25 1431.3 2956.88 1421.85 3064.79 1409.31 3064.83 1409.3 3101.12 1401.84 3101.08 1413.38 3103.87 1426.04\"/><polygon id=\"Pennsylvania\" className=\"state\" points=\"3520.99 986.14 3514.55 997.8 3501.22 1013.24 3497.63 1019.88 3485.58 1031.16 3469.87 1029.96 3464.65 1035.33 3461.02 1043.48 3400.92 1057.01 3342.37 1068.94 3293.8 1079.13 3272.1 1083.55 3208.32 1095.49 3136.62 1108.27 3122.49 1026.14 3102.08 906.48 3147.68 871.79 3147.8 871.63 3152.18 895.82 3255.83 876.17 3352.33 856.18 3442.05 836.33 3459.61 846.87 3469.35 853.01 3469.87 863.16 3477.19 874.97 3489.92 878.46 3502.14 882.13 3494.94 887.95 3487.97 910.43 3479.1 920.69 3485.38 931.35 3480.06 943.97 3483.05 958.22 3491 959.25 3494.34 968.32 3520.99 986.14\"/><polygon id=\"Virginia\" className=\"state\" points=\"3548.73 1411.07 3517.14 1487.04 3452.51 1536.58 3398.33 1594.24 3373.06 1604.66 3274.41 1535.82 3192.4 1549.28 3190.84 1538.83 3176.78 1525.6 3170.36 1532.76 3168.48 1524.96 3133.39 1526.44 3065.39 1536.26 3027.86 1557.51 3020.87 1561.21 2928.72 1573.03 2927.88 1553.8 2942.79 1546.09 2946.57 1535.78 2955.56 1523.49 2970.13 1519.1 2986.81 1512.59 3002.47 1502.48 3008.57 1493.55 3021.47 1484.37 3020.15 1477.93 3036.73 1463.08 3043.79 1470.12 3068.1 1449.15 3080.92 1448.99 3089.74 1432.21 3103.87 1426.04 3101.08 1413.38 3101.12 1401.84 3101.16 1401.84 3117.74 1399.59 3223.33 1385.26 3366.52 1358.6 3442.13 1342.19 3518.62 1324.93 3548.73 1411.07\"/><polygon id=\"Massachussets\" className=\"state\" points=\"3805.94 774.73 3765.92 801.64 3733.95 808.87 3728.39 796.05 3715.3 788.9 3704.08 767.34 3676.86 775.89 3615.49 790.14 3564.93 801.44 3563.58 737.28 3617.41 724.83 3695.61 704.38 3699.89 693.88 3711.87 684.13 3719.94 683.62 3732.48 730.09 3767.18 770.17 3794.8 764.51 3778.69 734.71 3803.86 748.35 3805.94 774.73\"/><polygon id=\"New_Jersey\" data-name=\"New Jersey\" className=\"state\" points=\"3570.85 1018.94 3537.39 1098.68 3526.93 1077.23 3510.81 1076.2 3489.04 1056.93 3483.24 1059.28 3477.59 1042.7 3485.58 1031.16 3497.63 1019.88 3501.22 1013.24 3514.55 997.8 3520.99 986.14 3494.34 968.32 3491 959.25 3483.05 958.22 3480.06 943.97 3485.38 931.35 3479.1 920.69 3487.97 910.43 3494.94 887.95 3502.14 882.13 3561.59 904.53 3549.13 953 3566.91 952.72 3570.85 1018.94\"/><path id=\"Michigan\" className=\"state\" d=\"M2962.26,835.93l-1.48,1.48-23.87,54-10.15,33.52-18.11,37.9-25.27,4.27-30.67,4-34.42,5-.92-7v0L2754,977l-72.7,7.36,12.37-13.91,22.58-46.84-4.58-59.73-27.82-53.53-.76-38.7,12.22-46.17,12.77-32.19,23.24-24.59,9.51,29.65,6.05-46,13-10.9,4.72-35.5,56.2,11.26,51.92,28.84,11,40.24-.12,41.93-30.79,41,6.39,22.24,13.1-1,34.85-45.28,25.35,5.52L2952,801.08l8.83,36.29Zm-167.41-290.7,6.8-10-21.25-.12-2.71,9.39-19.61-1.28-16.2-23.83-60.54,15-53.57,26.08L2580.3,530l-36.45-8.51,15.76-49.86-52.25,34.86-47.91,33.34-47,26.42,0,0,2.41-1.33.42-.24.16-.08.28-.18.48-.28v0l0,0,.08.28,10.06,2.35,6.14,16.08L2489,595.35h0l37.81,13.53,17.93-1.35,12.46.12,4.78,14.64,15.55,4.43,6.77,12.25v0l-3.23,7.68-1.59,15,14.17-.47v0l-3.39,15,9.55,9.95,0-.12v0l1.71.48,32-61.41L2676,612.47l47.39-23.64,50.86,3.59,2.17.16,54.53-15.37Z\"/><polygon id=\"Missouri\" className=\"state\" points=\"2659.55 2022.77 2612.76 2047.16 2567.12 2049.04 2565.01 2040.09 2561.13 2025.2 2550.02 2015.34 2544.24 2004.16 2548.43 1988.87 2549.63 1973.57 2475.65 1978.09 2406.26 1978.89 2401.99 1956.29 2411.06 1945.63 2417.04 1923.31 2423.08 1903.86 2437.32 1888.89 2439.96 1871.53 2450.18 1861.63 2439.36 1846.54 2441.91 1835.12 2429.77 1817.02 2436.05 1803.53 2430.29 1798.63 2433 1780.57 2423 1757.22 2423.59 1735.61 2438.36 1703.07 2445.3 1683.96 2457.89 1670.86 2466.26 1665.18 2474.81 1640.35 2474.29 1627.22 2487.19 1619.63 2488.14 1612.37 2561.44 1607.25 2643.21 1602.67 2650.05 1619.7 2646.78 1738.09 2645.49 1884.11 2659.55 2022.77\"/><polygon id=\"Illinois\" className=\"state\" points=\"2660.15 1261.42 2654.71 1267.44 2650.97 1282.86 2638.03 1303.87 2630.2 1328.98 2629.52 1347.41 2630.6 1354.09 2623.58 1367.34 2630.44 1375.34 2618.38 1382.99 2602.74 1391.93 2607.16 1411.43 2598.29 1419.64 2580.18 1412.7 2560.57 1409.31 2556.34 1418.44 2560.17 1431.89 2546.28 1418.84 2538.64 1421.77 2527.78 1400.25 2529.48 1386.52 2522.56 1365.03 2515.13 1362.88 2495.02 1344.31 2486.87 1344.51 2471.9 1332.69 2460.96 1319.75 2464.55 1303.59 2470.31 1290 2473.26 1273.08 2458.89 1259.39 2445.88 1266.04 2437.6 1262.74 2435.57 1247.69 2428.7 1230.83 2422 1227.08 2405.14 1215.82 2390.97 1201.17 2378.43 1183.16 2370.88 1156.41 2375.8 1133.62 2376.36 1117.05 2393.32 1102.68 2397.15 1088.69 2405.26 1072.53 2401.59 1058.68 2392.72 1052.09 2397.99 1036.2 2421.1 1030.4 2436.33 1024.26 2440.47 1017.47 2451.73 996.2 2453.81 971.63 2446.35 964.26 2435.33 957.66 2431.53 948.08 2423.32 943.93 2418.99 937.27 2487.39 932.87 2557.3 927.73 2608.88 924.08 2608.84 923.84 2609.07 923.84 2609.07 924.08 2611.72 947.56 2634.28 993.35 2643.97 1097.88 2653.64 1202.29 2648.02 1228.12 2654.39 1234.2 2659.55 1249.24 2660.15 1261.42\"/><polygon id=\"Indiana\" className=\"state\" points=\"2850.16 1229.83 2847.97 1236.87 2836.15 1238.46 2826.08 1247.73 2809.02 1246.45 2809.54 1263.89 2800.37 1271.64 2792.82 1288.16 2783.07 1292.13 2770.42 1320.63 2755.14 1314.47 2749.49 1303.95 2738.99 1323.18 2732.14 1334.04 2715.72 1325.01 2700.15 1335.24 2695.61 1344.54 2672.29 1332.93 2657.88 1344.23 2638.83 1338.92 2638.99 1348.93 2629.52 1347.41 2630.2 1328.98 2638.03 1303.87 2650.97 1282.86 2654.71 1267.44 2660.15 1261.42 2659.55 1249.24 2654.39 1234.2 2648.02 1228.12 2653.64 1202.29 2643.97 1097.88 2634.28 993.35 2641.06 998.88 2664.02 996.16 2681.26 984.43 2753.98 977.07 2817.37 969.12 2818.29 976.12 2818.29 976.15 2828.11 1057.57 2838.42 1145.11 2845.67 1207.43 2842.2 1212.2 2850.16 1229.83\"/><polygon id=\"Minnesota\" className=\"state\" points=\"2453.45 431.89 2453.41 431.93 2392.49 466.23 2350.43 505.27 2309.88 545.87 2310.28 559.28 2293.91 565.08 2296.67 616.25 2294.67 616.25 2279.33 626.96 2266.07 636.22 2257.59 653.3 2271.64 669.92 2267.55 693 2268.39 717.71 2267.11 737.8 2286.72 754.6 2294.51 755.12 2316.12 767.18 2323.69 773.02 2328.73 782.58 2345.93 797.45 2368.77 809.79 2371.28 817.16 2372.59 839 2374.89 849.15 2288.12 851.42 2191.58 854.91 2101.7 857.42 2029.4 857.34 2030.71 772.38 2023.34 685.13 2012.16 677.96 2005.92 663.81 2009.49 651.47 2023.86 641.37 2025.05 628.11 2025.17 611.51 2021.31 597.62 2016.1 582.75 2013.19 564.16 2012.6 543.31 2010.52 538.29 2008.19 511.41 2008.07 499.07 2006.96 488.09 2004.05 469.5 1996.73 450.56 1989.8 433.69 1988.96 416.98 1988.4 398.99 1990.63 387.25 1991.15 376.55 1985.65 363.22 1984.88 354.15 2110.37 354.51 2110.17 319.09 2130.58 318.38 2142 368.83 2161.19 384.14 2203.91 388.84 2266.71 401.5 2327.38 427.45 2376.4 412.88 2453.41 431.89 2453.45 431.89\"/></g></svg>\n  )\n}\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n\n    completedCrosswords: 0,\n    completedWaldo: 0,\n    completedPuzzle: 0,\n    completedColoring: 0,\n    gameStart: true,\n    gameCompleted: false,\n\n    currentGame: \"home\",\n    currentCity: \"no city\",\n    currentState: \"no state\",\n    currentDate: \"no date\",\n    currentDate: \"no data\",\n  }\n\n  componentDidMount = () => {\n\n\n\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.state.currentGame)\n\n    // check badges\n    // if badges are complete\n    // Change gameCompleted\n    // GivePrize\n\n    if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n      alert(\"congratulations!\")\n    }\n\n  }\n\n  finishGame = () => {\n    this.setState({ gameCompleted: true });\n  }\n\n  changeGame = (game, city, state, date, data) => {\n    const newGame = game;\n    const newCity = city;\n    const newState = state;\n    const newDate = date;\n    const newData = data;\n    this.setState({ currentGame: newGame });\n    this.setState({ currentCity: newCity });\n    this.setState({ currentAction: newState });\n    this.setState({ currentDate: newDate });\n    this.setState({ currentData: newData });\n    console.log(this.state.currentGame);\n  }\n\n  gameColor = (arg) => {\n    console.log(\"hey \" + arg)\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return \"blue\";\n        break;\n      case \"coloring\":\n        return \"orange\";\n        break;\n      case \"waldo\":\n        return \"pink\";\n        break;\n      case \"puzzle\":\n        return \"gray\";\n        break;\n      case \"home\":\n        return \"lightblue\";\n        break;\n    }\n  }\n\n  completeCurrentGame = (arg) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ currentCity: \"no city\" });\n        this.setState({ completedCrosswords: (this.state.completedCrosswords + 1) })\n        return;\n        break;\n      case \"coloring\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ currentCity: \"no city\" });\n        this.setState({ completedColoring: (this.state.completedColoring + 1) })\n        return;\n        break;\n      case \"waldo\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ currentCity: \"no city\" });\n        this.setState({ completedWaldo: (this.state.completedWaldo + 1) })\n        return;\n        break;\n      case \"puzzle\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ currentCity: \"no city\" });\n        this.setState({ completedPuzzle: (this.state.completedPuzzle + 1) })\n        return;\n        break;\n    }\n  }\n\n  renderGame = (arg, data) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"home\":\n        return box()\n      case \"crossword\":\n        return <Crossword data={this.state.currentData}/>;\n        break;\n      case \"coloring\":\n        return;\n        break;\n      case \"waldo\":\n        return;\n        break;\n      case \"puzzle\":\n        return <Slider size={4}/>;\n        break;\n    }\n\n\n  }\n\n  renderMapListBadge = (arg) => {\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return <MapListBadgeCrossword type={expr} />;\n      case \"coloring\":\n        return <MapListBadgeColoring type={expr} />;\n      case \"waldo\":\n        return <MapListBadgeWaldo type={expr} />;\n      case \"puzzle\":\n        return <MapListBadgePuzzle type={expr} />;\n    }\n  }\n\n  render() {\n\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n\n    return (\n      <Router>\n        <div>\n\n          <Scoreboard>\n            {/* <RenderBadges gameStatus={gameStatus} badges={this.state.badges} /> */}\n            <Badge>{this.state.completedCrosswords}</Badge>\n            <Badge>{this.state.completedWaldo}</Badge>\n            <Badge>{this.state.completedColoring}</Badge>\n            <Badge>{this.state.completedPuzzle}</Badge>\n          </Scoreboard>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <MapContainer>\n\n                <Map>\n\n                  <TourStopList>\n                    <RenderMapList>\n\n                      {tourStops && tourStops.map((x, i) => (\n                        <MapListItem soma onClick={this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data)} >\n                          {x.city} {this.renderMapListBadge(x.game)}\n                        </MapListItem>\n                      ))\n                      }\n\n                    </RenderMapList>\n                  </TourStopList>\n\n                  <MapRender currentGame={this.state.currentGame} gameColor={this.gameColor(this.state.currentGame)}>\n                    <GameContainer>{this.state.currentCity}\n                      {this.renderGame(this.state.currentGame)}\n\n                    </GameContainer>\n                    <CompleteGameButton currentGame={this.state.currentGame} onClick={() => { this.completeCurrentGame(this.state.currentGame) }}>\n\n                      complete game</CompleteGameButton>\n\n                  </MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n            </Route>\n\n            <Route path=\"/map\">\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}