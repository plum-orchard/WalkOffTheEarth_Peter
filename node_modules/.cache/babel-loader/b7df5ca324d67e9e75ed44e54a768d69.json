{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Main from \"./components/Main.jsx\";\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`;\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`;\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: block;\n\n`;\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`;\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n\n`;\nconst MapRender = styled.div`\n\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`;\nconst CompleteGameButton = styled.div`\n\n  display: ${props => props.currentGame == \"home\" ? \"none\" : \"block\"};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`;\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-color: red;\n\n`;\nconst tourStops = [{\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      currentGame: \"home\",\n      completedCrosswords: 0,\n      completedWaldo: 0,\n      completedPuzzle: 0,\n      completedColoring: 0,\n      gameStart: true,\n      gameCompleted: false,\n      currentCity: \"\"\n    };\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = () => {\n      // console.log(this.state.currentGame)\n      // check badges\n      // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n      if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n        alert(\"congratulations!\");\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        gameCompleted: true\n      });\n    };\n\n    this.changeGame = (game, city, date, action) => {\n      const newGame = game;\n      this.setState({\n        currentGame: newGame\n      });\n      this.setState({\n        currentCity: newGame\n      });\n      console.log(this.state.currentGame);\n    };\n\n    this.gameColor = arg => {\n      console.log(\"hey \" + arg);\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return \"blue\";\n          break;\n\n        case \"coloring\":\n          return \"orange\";\n          break;\n\n        case \"waldo\":\n          return \"pink\";\n          break;\n\n        case \"puzzle\":\n          return \"gray\";\n          break;\n\n        case \"home\":\n          return \"lightblue\";\n          break;\n      }\n    };\n\n    this.completeCurrentGame = arg => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedCrosswords: this.state.completedCrosswords + 1\n          });\n          return;\n          break;\n\n        case \"coloring\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedColoring: this.state.completedColoring + 1\n          });\n          return;\n          break;\n\n        case \"waldo\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedWaldo: this.state.completedWaldo + 1\n          });\n          return;\n          break;\n\n        case \"puzzle\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedPuzzle: this.state.completedPuzzle + 1\n          });\n          return;\n          break;\n      }\n    };\n\n    this.renderGame = (arg, data) => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          return React.createElement(Crossword, {\n            data: {\n              id: 'simple/1',\n              number: 1,\n              name: 'Simple Crossword 1',\n              date: 1542326400000,\n              entries: [{\n                id: '1-across',\n                number: 1,\n                humanNumber: '1',\n                clue: 'Toy on a string (2-2)',\n                direction: 'across',\n                length: 4,\n                group: ['1-across'],\n                position: {\n                  x: 0,\n                  y: 0\n                },\n                separatorLocations: {\n                  '-': [2]\n                },\n                solution: 'YOYO'\n              }, {\n                id: '2-across',\n                number: 2,\n                humanNumber: '2',\n                clue: 'Have a rest (3,4)',\n                direction: 'across',\n                length: 7,\n                group: ['2-across'],\n                position: {\n                  x: 0,\n                  y: 2\n                },\n                separatorLocations: {\n                  ',': [3]\n                },\n                solution: 'LIEDOWN'\n              }, {\n                id: '1-down',\n                number: 1,\n                humanNumber: '1',\n                clue: 'Colour (6)',\n                direction: 'down',\n                length: 6,\n                group: ['1-down'],\n                position: {\n                  x: 0,\n                  y: 0\n                },\n                separatorLocations: {},\n                solution: 'YELLOW'\n              }, {\n                id: '3-down',\n                number: 3,\n                humanNumber: '3',\n                clue: 'Bits and bobs (4,3,4)',\n                direction: 'down',\n                length: 7,\n                group: ['3-down', '4-down'],\n                position: {\n                  x: 3,\n                  y: 0\n                },\n                separatorLocations: {\n                  ',': [4]\n                },\n                solution: 'ODDSAND'\n              }, {\n                id: '4-down',\n                number: 4,\n                humanNumber: '4',\n                clue: 'See 3 down',\n                direction: 'down',\n                length: 4,\n                group: ['3-down', '4-down'],\n                position: {\n                  x: 6,\n                  y: 1\n                },\n                separatorLocations: {},\n                solution: 'ENDS'\n              }],\n              solutionAvailable: true,\n              dateSolutionAvailable: 1542326400000,\n              dimensions: {\n                cols: 13,\n                rows: 13\n              },\n              crosswordType: 'quick'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304\n            },\n            __self: this\n          });\n          break;\n\n        case \"coloring\":\n          return;\n          break;\n\n        case \"waldo\":\n          return;\n          break;\n\n        case \"puzzle\":\n          return;\n          break;\n      }\n    };\n  }\n\n  render() {\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, this.state.completedCrosswords), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, this.state.completedWaldo), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, this.state.completedColoring), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, this.state.completedPuzzle)), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      soma: true,\n      onClick: this.changeGame.bind(this, x.game, x.city, x.state, x.date),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, x.city, \" + \", x.game)))), React.createElement(MapRender, {\n      currentGame: this.state.currentGame,\n      gameColor: this.gameColor(this.state.currentGame),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, this.state.currentCity, this.renderGame(this.state.currentGame)), React.createElement(CompleteGameButton, {\n      currentGame: this.state.currentGame,\n      onClick: () => {\n        this.completeCurrentGame(this.state.currentGame);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"complete game\"))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js"],"names":["React","Component","styled","Crossword","BrowserRouter","Router","Switch","Route","Link","Main","Scoreboard","div","Badge","props","color","MapContainer","Map","MapListItem","RenderMapList","TourStopList","MapRender","gameColor","CompleteGameButton","currentGame","GameContainer","tourStops","date","city","venue","game","App","state","score","completedCrosswords","completedWaldo","completedPuzzle","completedColoring","gameStart","gameCompleted","currentCity","componentDidMount","componentDidUpdate","alert","finishGame","setState","changeGame","action","newGame","console","log","arg","expr","completeCurrentGame","renderGame","data","id","number","name","entries","humanNumber","clue","direction","length","group","position","x","y","separatorLocations","solution","solutionAvailable","dateSolutionAvailable","dimensions","cols","rows","crosswordType","render","gameStatus","locations","map","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Main from \"./components/Main.jsx\"\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`\n\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`\n\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: block;\n\n`\n\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`\n\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n\n`\n\nconst MapRender = styled.div`\n\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`\n\nconst CompleteGameButton = styled.div`\n\n  display: ${props => (props.currentGame == \"home\" ? \"none\" : \"block\")};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`\n\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-color: red;\n\n`\n\nconst tourStops = [\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n];\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    currentGame: \"home\",\n    completedCrosswords: 0,\n    completedWaldo: 0,\n    completedPuzzle: 0,\n    completedColoring: 0,\n    gameStart: true,\n    gameCompleted: false,\n    currentCity: \"\",\n  }\n\n  componentDidMount = () => {\n\n\n\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.state.currentGame)\n\n    // check badges\n    // if badges are complete\n    // Change gameCompleted\n    // GivePrize\n\n    if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n      alert(\"congratulations!\")\n    }\n\n  }\n\n  finishGame = () => {\n    this.setState({ gameCompleted: true });\n  }\n\n  changeGame = (game, city, date, action) => {\n    const newGame = game\n    this.setState({ currentGame: newGame });\n    this.setState({ currentCity: newGame });\n    console.log(this.state.currentGame);\n  }\n\n  gameColor = (arg) => {\n    console.log(\"hey \" + arg)\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return \"blue\";\n        break;\n      case \"coloring\":\n        return \"orange\";\n        break;\n      case \"waldo\":\n        return \"pink\";\n        break;\n      case \"puzzle\":\n        return \"gray\";\n        break;\n      case \"home\":\n        return \"lightblue\";\n        break;\n    }\n  }\n\n  completeCurrentGame = (arg) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedCrosswords: (this.state.completedCrosswords + 1) })\n        return;\n        break;\n      case \"coloring\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedColoring: (this.state.completedColoring + 1) })\n        return;\n        break;\n      case \"waldo\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedWaldo: (this.state.completedWaldo + 1) })\n        return;\n        break;\n      case \"puzzle\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedPuzzle: (this.state.completedPuzzle + 1) })\n        return;\n        break;\n    }\n  }\n\n  renderGame = (arg, data) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        return <Crossword data={\n          {\n            id: 'simple/1',\n            number: 1,\n            name: 'Simple Crossword 1',\n            date: 1542326400000,\n            entries: [\n              {\n                id: '1-across',\n                number: 1,\n                humanNumber: '1',\n                clue: 'Toy on a string (2-2)',\n                direction: 'across',\n                length: 4,\n                group: ['1-across'],\n                position: { x: 0, y: 0 },\n                separatorLocations: {\n                  '-': [2],\n                },\n                solution: 'YOYO',\n              },\n              {\n                id: '2-across',\n                number: 2,\n                humanNumber: '2',\n                clue: 'Have a rest (3,4)',\n                direction: 'across',\n                length: 7,\n                group: ['2-across'],\n                position: { x: 0, y: 2 },\n                separatorLocations: {\n                  ',': [3],\n                },\n                solution: 'LIEDOWN',\n              },\n              {\n                id: '1-down',\n                number: 1,\n                humanNumber: '1',\n                clue: 'Colour (6)',\n                direction: 'down',\n                length: 6,\n                group: ['1-down'],\n                position: { x: 0, y: 0 },\n                separatorLocations: {},\n                solution: 'YELLOW',\n              },\n              {\n                id: '3-down',\n                number: 3,\n                humanNumber: '3',\n                clue: 'Bits and bobs (4,3,4)',\n                direction: 'down',\n                length: 7,\n                group: ['3-down', '4-down'],\n                position: { x: 3, y: 0 },\n                separatorLocations: {\n                  ',': [4],\n                },\n                solution: 'ODDSAND',\n              },\n              {\n                id: '4-down',\n                number: 4,\n                humanNumber: '4',\n                clue: 'See 3 down',\n                direction: 'down',\n                length: 4,\n                group: ['3-down', '4-down'],\n                position: {\n                  x: 6,\n                  y: 1,\n                },\n                separatorLocations: {},\n                solution: 'ENDS',\n              },\n            ],\n            solutionAvailable: true,\n            dateSolutionAvailable: 1542326400000,\n            dimensions: {\n              cols: 13,\n              rows: 13,\n            },\n            crosswordType: 'quick',\n          }\n        }\n        />;\n        break;\n      case \"coloring\":\n        return;\n        break;\n      case \"waldo\":\n        return;\n        break;\n      case \"puzzle\":\n        return;\n        break;\n    }\n\n\n  }\n\n  render() {\n\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n\n    return (\n      <Router>\n        <div>\n\n          <Scoreboard>\n            {/* <RenderBadges gameStatus={gameStatus} badges={this.state.badges} /> */}\n            <Badge>{this.state.completedCrosswords}</Badge>\n            <Badge>{this.state.completedWaldo}</Badge>\n            <Badge>{this.state.completedColoring}</Badge>\n            <Badge>{this.state.completedPuzzle}</Badge>\n          </Scoreboard>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <MapContainer>\n\n                <Map>\n\n                  <TourStopList>\n                    <RenderMapList>\n\n                      {tourStops && tourStops.map((x, i) => (\n                        <MapListItem soma onClick={this.changeGame.bind(this, x.game, x.city, x.state, x.date)} >\n                          {x.city} + {x.game}\n                        </MapListItem>\n                      ))\n                      }\n\n                    </RenderMapList>\n                  </TourStopList>\n\n                  <MapRender currentGame={this.state.currentGame} gameColor={this.gameColor(this.state.currentGame)}>\n                    <GameContainer>{this.state.currentCity}\n                    {this.renderGame(this.state.currentGame)}\n                      \n                    </GameContainer>\n                    <CompleteGameButton currentGame={this.state.currentGame} onClick={() => { this.completeCurrentGame(this.state.currentGame) }}>\n\n                      complete game</CompleteGameButton>\n\n                  </MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n              {/* <Main /> */}\n            </Route>\n\n            <Route path=\"/map\">\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}