{"ast":null,"code":"import _slicedToArray from \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport position from '../helpers/position';\n\nconst useMove = drawingRef => {\n  const positionRef = useRef();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        moving = _useState2[0],\n        setMoving = _useState2[1];\n\n  const mousedown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const positionFromEvent = position(drawingRef, e);\n    positionRef.current = positionFromEvent;\n    setMoving(positionFromEvent);\n  };\n\n  const mouseup = () => setMoving(null);\n\n  const mousemove = e => positionRef.current = position(drawingRef, e);\n\n  useLayoutEffect(() => {\n    const node = drawingRef.current;\n    if (!node) return;\n    node.addEventListener('mousedown', mousedown);\n    node.addEventListener('touchstart', mousedown);\n    window.addEventListener('mouseup', mouseup);\n    window.addEventListener('touchend', mouseup);\n    return () => {\n      node.removeEventListener('mousedown', mousedown);\n      node.removeEventListener('touchstart', mousedown);\n      window.removeEventListener('mouseup', mouseup);\n      window.removeEventListener('touchend', mouseup);\n    };\n  });\n  useEffect(() => {\n    if (!moving) return;\n    window.addEventListener('mousemove', mousemove);\n    window.addEventListener('touchmove', mousemove);\n    return () => {\n      window.removeEventListener('mousemove', mousemove);\n      window.removeEventListener('touchmove', mousemove);\n    };\n  }, [moving]);\n  return {\n    positionRef,\n    point: moving\n  };\n};\n\nexport default useMove;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing/hooks/useMove.js"],"names":["useEffect","useLayoutEffect","useRef","useState","position","useMove","drawingRef","positionRef","moving","setMoving","mousedown","e","preventDefault","stopPropagation","positionFromEvent","current","mouseup","mousemove","node","addEventListener","window","removeEventListener","point"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA4D,OAA5D;AAEA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,OAAO,GAAIC,UAAD,IAAgB;AAC9B,QAAMC,WAAW,GAAGL,MAAM,EAA1B;;AAD8B,oBAEFC,QAAQ,CAAC,IAAD,CAFN;AAAA;AAAA,QAEvBK,MAFuB;AAAA,QAEfC,SAFe;;AAI9B,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AAEA,UAAMC,iBAAiB,GAAGV,QAAQ,CAACE,UAAD,EAAaK,CAAb,CAAlC;AACAJ,IAAAA,WAAW,CAACQ,OAAZ,GAAsBD,iBAAtB;AACAL,IAAAA,SAAS,CAACK,iBAAD,CAAT;AACD,GAPD;;AASA,QAAME,OAAO,GAAG,MAAMP,SAAS,CAAC,IAAD,CAA/B;;AACA,QAAMQ,SAAS,GAAIN,CAAD,IAAOJ,WAAW,CAACQ,OAAZ,GAAsBX,QAAQ,CAACE,UAAD,EAAaK,CAAb,CAAvD;;AAEAV,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMiB,IAAI,GAAGZ,UAAU,CAACS,OAAxB;AACA,QAAI,CAACG,IAAL,EAAW;AAEXA,IAAAA,IAAI,CAACC,gBAAL,CAAsB,WAAtB,EAAmCT,SAAnC;AACAQ,IAAAA,IAAI,CAACC,gBAAL,CAAsB,YAAtB,EAAoCT,SAApC;AACAU,IAAAA,MAAM,CAACD,gBAAP,CAAwB,SAAxB,EAAmCH,OAAnC;AACAI,IAAAA,MAAM,CAACD,gBAAP,CAAwB,UAAxB,EAAoCH,OAApC;AAEA,WAAO,MAAM;AACXE,MAAAA,IAAI,CAACG,mBAAL,CAAyB,WAAzB,EAAsCX,SAAtC;AACAQ,MAAAA,IAAI,CAACG,mBAAL,CAAyB,YAAzB,EAAuCX,SAAvC;AACAU,MAAAA,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAsCL,OAAtC;AACAI,MAAAA,MAAM,CAACC,mBAAP,CAA2B,UAA3B,EAAuCL,OAAvC;AACD,KALD;AAMD,GAfc,CAAf;AAiBAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,MAAL,EAAa;AAEbY,IAAAA,MAAM,CAACD,gBAAP,CAAwB,WAAxB,EAAqCF,SAArC;AACAG,IAAAA,MAAM,CAACD,gBAAP,CAAwB,WAAxB,EAAqCF,SAArC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACC,mBAAP,CAA2B,WAA3B,EAAwCJ,SAAxC;AACAG,MAAAA,MAAM,CAACC,mBAAP,CAA2B,WAA3B,EAAwCJ,SAAxC;AACD,KAHD;AAID,GATQ,EASN,CAACT,MAAD,CATM,CAAT;AAWA,SAAO;AAAED,IAAAA,WAAF;AAAee,IAAAA,KAAK,EAAEd;AAAtB,GAAP;AACD,CA7CD;;AA+CA,eAAeH,OAAf","sourcesContent":["import { useEffect, useLayoutEffect, useRef, useState} from 'react'\n\nimport position from '../helpers/position'\n\nconst useMove = (drawingRef) => {\n  const positionRef = useRef()\n  const [moving, setMoving] = useState(null)  \n\n  const mousedown = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    \n    const positionFromEvent = position(drawingRef, e)\n    positionRef.current = positionFromEvent\n    setMoving(positionFromEvent)\n  }\n\n  const mouseup = () => setMoving(null)\n  const mousemove = (e) => positionRef.current = position(drawingRef, e)\n\n  useLayoutEffect(() => {\n    const node = drawingRef.current\n    if (!node) return\n\n    node.addEventListener('mousedown', mousedown)\n    node.addEventListener('touchstart', mousedown)\n    window.addEventListener('mouseup', mouseup)\n    window.addEventListener('touchend', mouseup)\n\n    return () => {\n      node.removeEventListener('mousedown', mousedown)\n      node.removeEventListener('touchstart', mousedown)\n      window.removeEventListener('mouseup', mouseup)\n      window.removeEventListener('touchend', mouseup)\n    }\n  })\n\n  useEffect(() => {\n    if (!moving) return\n\n    window.addEventListener('mousemove', mousemove)\n    window.addEventListener('touchmove', mousemove)\n    return () => {\n      window.removeEventListener('mousemove', mousemove)\n      window.removeEventListener('touchmove', mousemove)\n    }\n  }, [moving])\n\n  return { positionRef, point: moving }\n}\n\nexport default useMove\n"]},"metadata":{},"sourceType":"module"}