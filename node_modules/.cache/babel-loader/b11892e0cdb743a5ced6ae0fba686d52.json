{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from \"./Box\";\nimport BoardLogic from \"./BoardLogic\";\nimport \"./App.css\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initialGameState\", () => {\n      this.boardLogic = new BoardLogic(this.props.data || this.props.size);\n      return {\n        board: this.props.data ? this.boardLogic.matrix : this.boardLogic.scramble(),\n        moves: 0,\n        isWin: this.boardLogic.checkWin()\n      };\n    });\n\n    _defineProperty(this, \"move\", (i, j) => {\n      if (this.state.isWin) return;\n\n      if (this.boardLogic.move(i, j)) {\n        this.props.onMove(i, j);\n        this.setState(prevState => ({\n          board: this.boardLogic.matrix,\n          moves: prevState.moves + 1,\n          isWin: this.boardLogic.checkWin()\n        }));\n      }\n    });\n\n    _defineProperty(this, \"getRow\", (rowData, j) => {\n      return React.createElement(\"div\", {\n        key: j\n      }, rowData.map((bNum, i) => React.createElement(Box, {\n        key: bNum,\n        boxNumber: bNum,\n        onClick: () => this.move(i, j)\n      })));\n    });\n\n    _defineProperty(this, \"newGame\", () => {\n      this.setState(this.initialGameState());\n    });\n\n    this.state = this.initialGameState();\n  }\n\n  render() {\n    let rows = this.state.board.map(this.getRow);\n    let message = (this.state.isWin ? \"Winner !!! \" : \"Total \") + `Moves: ${this.state.moves}`;\n    return React.createElement(\"div\", {\n      className: \"slider-board\"\n    }, rows, React.createElement(\"span\", {\n      className: \"slider-msg\"\n    }, message), React.createElement(\"div\", {\n      className: \"btn-new-game\"\n    }, React.createElement(\"button\", {\n      onClick: this.newGame\n    }, \"New Game\")));\n  }\n\n}\n\n_defineProperty(Board, \"defaultProps\", {\n  size: 3,\n  onMove: (i, j) => {}\n});\n\nBoard.propTypes = {\n  data: PropTypes.array,\n  size: PropTypes.number,\n  onMove: PropTypes.func\n};\nexport default Board;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/node_modules/react-slider-game/dist/Board.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","PropTypes","Box","BoardLogic","Board","constructor","props","boardLogic","data","size","board","matrix","scramble","moves","isWin","checkWin","i","j","state","move","onMove","setState","prevState","rowData","createElement","map","bNum","boxNumber","onClick","initialGameState","render","rows","getRow","message","className","newGame","propTypes","array","number","func"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from \"./Box\";\nimport BoardLogic from \"./BoardLogic\";\nimport \"./App.css\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initialGameState\", () => {\n      this.boardLogic = new BoardLogic(this.props.data || this.props.size);\n      return {\n        board: this.props.data ? this.boardLogic.matrix : this.boardLogic.scramble(),\n        moves: 0,\n        isWin: this.boardLogic.checkWin()\n      };\n    });\n\n    _defineProperty(this, \"move\", (i, j) => {\n      if (this.state.isWin) return;\n\n      if (this.boardLogic.move(i, j)) {\n        this.props.onMove(i, j);\n        this.setState(prevState => ({\n          board: this.boardLogic.matrix,\n          moves: prevState.moves + 1,\n          isWin: this.boardLogic.checkWin()\n        }));\n      }\n    });\n\n    _defineProperty(this, \"getRow\", (rowData, j) => {\n      return React.createElement(\"div\", {\n        key: j\n      }, rowData.map((bNum, i) => React.createElement(Box, {\n        key: bNum,\n        boxNumber: bNum,\n        onClick: () => this.move(i, j)\n      })));\n    });\n\n    _defineProperty(this, \"newGame\", () => {\n      this.setState(this.initialGameState());\n    });\n\n    this.state = this.initialGameState();\n  }\n\n  render() {\n    let rows = this.state.board.map(this.getRow);\n    let message = (this.state.isWin ? \"Winner !!! \" : \"Total \") + `Moves: ${this.state.moves}`;\n    return React.createElement(\"div\", {\n      className: \"slider-board\"\n    }, rows, React.createElement(\"span\", {\n      className: \"slider-msg\"\n    }, message), React.createElement(\"div\", {\n      className: \"btn-new-game\"\n    }, React.createElement(\"button\", {\n      onClick: this.newGame\n    }, \"New Game\")));\n  }\n\n}\n\n_defineProperty(Board, \"defaultProps\", {\n  size: 3,\n  onMove: (i, j) => {}\n});\n\nBoard.propTypes = {\n  data: PropTypes.array,\n  size: PropTypes.number,\n  onMove: PropTypes.func\n};\nexport default Board;"]},"metadata":{},"sourceType":"module"}