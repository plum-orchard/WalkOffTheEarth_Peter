{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\n\nimport ReactCompareImage from 'react-compare-image';\n\nclass CompareImgInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'init',\n      answers: [\"test\"]\n    };\n\n    this.inputData = event => {\n      this.setState({\n        arr: event.target.value\n      });\n    };\n\n    this.newArr = this.props.data;\n\n    this.componentDidUpdate = () => {\n      if (this.props.data.includes(this.state.entry)) {\n        const str = this.state.entry;\n        var index = this.props.data.indexOf(this.state.entry);\n        this.props.data.splice(index, 1);\n      }\n    };\n\n    this.handleEntryChange = event => {\n      this.setState({\n        entry: event.target.value\n      });\n    };\n\n    this.renderAnswers = () => {\n      this.state.answers && this.state.answers.map((answers, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, answers));\n    };\n\n    this.submitData = this.submitData.bind(this);\n  }\n\n  submitData(event) {\n    event.preventDefault();\n    const arr = this.state.arr; // this.setState({answers: [\"test2\"]})\n\n    let tempArr = this.state.answers;\n    tempArr.push(\"test2\");\n    this.setState({\n      answers: tempArr\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.data);\n    this.setState({\n      arr: this.props.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.entry, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      value: this.state.entry,\n      onChange: this.handleEntryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.answers.map((x, i) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, x))));\n  }\n\n}\n\nCompareImgInput.propTypes = {\n  data: React.propTypes\n};\nexport default CompareImgInput;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx"],"names":["React","Component","ReactCompareImage","CompareImgInput","constructor","props","state","value","answers","inputData","event","setState","arr","target","newArr","data","componentDidUpdate","includes","entry","str","index","indexOf","splice","handleEntryChange","renderAnswers","map","i","submitData","bind","preventDefault","tempArr","push","componentDidMount","console","log","render","x","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\nimport ReactCompareImage from 'react-compare-image';\n\nclass CompareImgInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.submitData = this.submitData.bind(this);\n\n      };\n\n\n    state = {\n        value: 'init',\n        answers: [\"test\"],\n    };\n\n    inputData = event =>{\n        this.setState({ arr: event.target.value});\n    };\n\n    submitData(event){\n        event.preventDefault();\n        const {arr} = this.state;\n        // this.setState({answers: [\"test2\"]})\n        let tempArr = this.state.answers;\n        tempArr.push(\"test2\");\n        this.setState({answers: tempArr})\n    };\n\n    newArr = this.props.data\n    \n    componentDidMount() {\n\n        console.log(this.props.data)\n        this.setState({\n            arr: this.props.data\n        })\n\n    };\n\n    componentDidUpdate = () => {\n\n            if(this.props.data.includes(this.state.entry)){\n                const str = this.state.entry\n                var index = this.props.data.indexOf(this.state.entry)\n                this.props.data.splice(index,1)\n            } \n\n    };\n\n\n    handleEntryChange = (event) => {\n\n        this.setState({\n            entry: event.target.value\n        })\n\n    };\n\n    renderAnswers = () => {\n        \n        this.state.answers && this.state.answers.map((answers, i) => (\n            <div>\n                {answers}\n            </div>\n        ))\n    };\n\n    render(){ \n        return(\n            <div>\n                <form >\n                {this.state.entry}\n                <br/>\n                <input name=\"title\" type=\"text\" value={this.state.entry} onChange={this.handleEntryChange} />\n                <input type=\"submit\" value=\"Submit\" onClick={this.submitData}  />\n                </form>\n                <div className=\"answers\">\n                {this.state.answers.map((x, i) => (\n                    <div>{x}</div>\n                ))}\n                </div>\n            </div>\n\n        )\n      }\n\n}\n\nCompareImgInput.propTypes = {\n    data: React.propTypes\n}\n\nexport default CompareImgInput"]},"metadata":{},"sourceType":"module"}