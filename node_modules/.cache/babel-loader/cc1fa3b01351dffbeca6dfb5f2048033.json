{"ast":null,"code":"import { useLayoutEffect, useRef } from 'react';\n\nconst NOOP = () => {};\n\nconst useBrush = ({\n  brush,\n  canvasRef\n}) => {\n  const brushRef = useRef();\n  if (!brushRef.current) brushRef.current = NOOP;\n  useLayoutEffect(() => {\n    let origin = true;\n    brush.then(({\n      draw,\n      init\n    }) => {\n      if (!origin) return;\n      const ctx = canvasRef.current.getContext('2d');\n      if (init) init(ctx);\n\n      brushRef.current = (x, y) => draw(ctx, x, y);\n    });\n    return () => {\n      brushRef.current = NOOP;\n      origin = false;\n    };\n  }, [brush]);\n  return brushRef;\n};\n\nexport default useBrush;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing/hooks/useBrush.js"],"names":["useLayoutEffect","useRef","NOOP","useBrush","brush","canvasRef","brushRef","current","origin","then","draw","init","ctx","getContext","x","y"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,MAAMC,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0B;AACzC,QAAMC,QAAQ,GAAGL,MAAM,EAAvB;AACA,MAAI,CAACK,QAAQ,CAACC,OAAd,EAAuBD,QAAQ,CAACC,OAAT,GAAmBL,IAAnB;AAEvBF,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIQ,MAAM,GAAG,IAAb;AACAJ,IAAAA,KAAK,CAACK,IAAN,CAAW,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAoB;AAC7B,UAAI,CAACH,MAAL,EAAa;AAEb,YAAMI,GAAG,GAAGP,SAAS,CAACE,OAAV,CAAkBM,UAAlB,CAA6B,IAA7B,CAAZ;AACA,UAAIF,IAAJ,EAAUA,IAAI,CAACC,GAAD,CAAJ;;AACVN,MAAAA,QAAQ,CAACC,OAAT,GAAmB,CAACO,CAAD,EAAIC,CAAJ,KAAUL,IAAI,CAACE,GAAD,EAAME,CAAN,EAASC,CAAT,CAAjC;AACD,KAND;AAQA,WAAO,MAAM;AACXT,MAAAA,QAAQ,CAACC,OAAT,GAAmBL,IAAnB;AACAM,MAAAA,MAAM,GAAG,KAAT;AACD,KAHD;AAID,GAdc,EAcZ,CAACJ,KAAD,CAdY,CAAf;AAgBA,SAAOE,QAAP;AACD,CArBD;;AAuBA,eAAeH,QAAf","sourcesContent":["import { useLayoutEffect, useRef } from 'react'\n\nconst NOOP = () => {}\n\nconst useBrush = ({ brush, canvasRef }) => {\n  const brushRef = useRef()\n  if (!brushRef.current) brushRef.current = NOOP\n\n  useLayoutEffect(() => {\n    let origin = true\n    brush.then(({ draw, init }) => {\n      if (!origin) return\n\n      const ctx = canvasRef.current.getContext('2d')\n      if (init) init(ctx)\n      brushRef.current = (x, y) => draw(ctx, x, y)\n    })\n\n    return () => {\n      brushRef.current = NOOP\n      origin = false\n    }\n  }, [brush])\n\n  return brushRef\n}\n\nexport default useBrush"]},"metadata":{},"sourceType":"module"}