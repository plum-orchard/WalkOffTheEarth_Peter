{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { render } from \"react-dom\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport classNames from \"./drawing.css\";\nconst DrawingWrapper = styled.div`\n\n    display: flex;\n    flex-direction: row-reverse;\n\n    #toolbox {\n        padding: 20px\n    }\n\n    input {\n        margin-left: 10px\n    }\n\n    .toolchunk {\n        margin-bottom: 10px;\n    }\n\n\n`;\n\nclass CanvasDraw2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"#ffc600\",\n      // width: 100,\n      // height: 100,\n      brushRadius: 10,\n      lazyRadius: 12\n    };\n  }\n\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    window.setInterval(() => {\n      this.setState({\n        color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n      });\n    }, 2000);\n    console.log(\"image source \" + this.props.imgSrc);\n  }\n\n  render() {\n    return React.createElement(DrawingWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"toolbox\",\n      className: classNames.tools,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolchunk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Width:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.width,\n      onChange: e => this.setState({\n        width: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toolchunk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Height:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.height,\n      onChange: e => this.setState({\n        height: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toolchunk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Brush-Radius:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.brushRadius,\n      onChange: e => this.setState({\n        brushRadius: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toolchunk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Lazy-Radius:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.lazyRadius,\n      onChange: e => this.setState({\n        lazyRadius: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => {\n        localStorage.setItem(\"savedDrawing\", this.saveableCanvas.getSaveData());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.saveableCanvas.clear();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.saveableCanvas.undo();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Undo\")), React.createElement(CanvasDraw, {\n      ref: canvasDraw => this.saveableCanvas = canvasDraw,\n      brushColor: this.state.color,\n      brushRadius: this.state.brushRadius,\n      imgSrc: this.props.imgSrc,\n      lazyRadius: this.state.lazyRadius,\n      canvasWidth: 600,\n      canvasHeight: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nCanvasDraw2.propTypes = {\n  imgSrc: React.propTypes\n};\nexport default CanvasDraw2;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing.jsx"],"names":["React","Component","styled","render","CanvasDraw","classNames","DrawingWrapper","div","CanvasDraw2","constructor","props","state","color","brushRadius","lazyRadius","componentDidMount","window","setInterval","setState","Math","floor","random","toString","console","log","imgSrc","tools","width","e","parseInt","target","value","height","localStorage","setItem","saveableCanvas","getSaveData","clear","undo","canvasDraw","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { render } from \"react-dom\";\n\nimport CanvasDraw from \"react-canvas-draw\";\nimport classNames from \"./drawing.css\";\n\nconst DrawingWrapper = styled.div`\n\n    display: flex;\n    flex-direction: row-reverse;\n\n    #toolbox {\n        padding: 20px\n    }\n\n    input {\n        margin-left: 10px\n    }\n\n    .toolchunk {\n        margin-bottom: 10px;\n    }\n\n\n`\n\nclass CanvasDraw2 extends Component {\n  \n    constructor(props){\n        super(props);\n      };\n  \n    state = {\n    color: \"#ffc600\",\n    // width: 100,\n    // height: 100,\n    brushRadius: 10,\n    lazyRadius: 12\n  };\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    window.setInterval(() => {\n      this.setState({\n        color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n      });\n    }, 2000);\n    console.log(\"image source \" + this.props.imgSrc)\n  }\n  render() {\n    return (\n      <DrawingWrapper>\n\n          <div id=\"toolbox\" className={classNames.tools}>\n           \n            <div className=\"toolchunk\">\n              <label>Width:</label>\n              <input\n                type=\"number\"\n                value={this.state.width}\n                onChange={e =>\n                  this.setState({ width: parseInt(e.target.value, 10) })\n                }\n              />\n            </div>\n            <div className=\"toolchunk\">\n              <label>Height:</label>\n              <input\n                type=\"number\"\n                value={this.state.height}\n                onChange={e =>\n                  this.setState({ height: parseInt(e.target.value, 10) })\n                }\n              />\n            </div>\n            <div className=\"toolchunk\">\n              <label>Brush-Radius:</label>\n              <input\n                type=\"number\"\n                value={this.state.brushRadius}\n                onChange={e =>\n                  this.setState({ brushRadius: parseInt(e.target.value, 10) })\n                }\n              />\n            </div>\n            <div className=\"toolchunk\">\n              <label>Lazy-Radius:</label>\n              <input\n                type=\"number\"\n                value={this.state.lazyRadius}\n                onChange={e =>\n                  this.setState({ lazyRadius: parseInt(e.target.value, 10) })\n                }\n              />\n            </div>\n            <button\n              onClick={() => {\n                localStorage.setItem(\n                  \"savedDrawing\",\n                  this.saveableCanvas.getSaveData()\n                );\n              }}\n            >\n              Save\n            </button>\n            <button\n              onClick={() => {\n                this.saveableCanvas.clear();\n              }}\n            >\n              Clear\n            </button>\n            <button\n              onClick={() => {\n                this.saveableCanvas.undo();\n              }}\n            >\n              Undo\n            </button>\n          </div>\n          <CanvasDraw\n  \n            ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\n            brushColor={this.state.color}\n            brushRadius={this.state.brushRadius}\n            imgSrc= {this.props.imgSrc}\n            lazyRadius={this.state.lazyRadius}\n            canvasWidth={600}\n            canvasHeight={600}\n          />\n      </DrawingWrapper>\n        );\n  }\n}\n\nCanvasDraw2.propTypes = {\n    imgSrc: React.propTypes\n}\n\nexport default CanvasDraw2"]},"metadata":{},"sourceType":"module"}