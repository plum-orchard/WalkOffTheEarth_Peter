{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport Slider from \"react-slider-game\"; // import CanvasDraw from \"react-canvas-draw\";\n\nimport Drawing from \"./components/Drawing.jsx\";\nimport HamburgerMenu from \"react-hamburger-menu\";\nimport anime from 'animejs/lib/anime.es.js';\nimport CompareImgInput from \"./components/CompareImgInput\";\nimport tourStops from './components/data/tourStops.jsx';\nimport mapVector from './components/mapVector';\nimport crosswordLA from \"./components/data/crosswordLA\";\nimport crosswordDAL from \"./components/data/crosswordDAL\";\nimport Iframe from 'react-iframe';\nimport Socials from \"./components/Socials\";\nimport ReactTooltip from 'react-tooltip';\nimport PrizeModal from \"./components/PrizeModal\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nconst Scoreboard = styled.div`\n\n  padding: 20px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  // background-color: lightblue;\n  display: flex;\n\n  // &:hover {\n  //   .scoreboardBadge {\n  //     margin-bottom: 20px;\n  //   }\n\n  // }\n\n`;\nconst Badge = styled.div`\n\n  margin: 0 10px;\n  height: 30px;\n  width: 30px;\n  background-image: ${props => \"url(\" + props.star + \")\"};\n  background-size: cover;\n\n\n`;\nconst GameContainer = styled.div`\n\n  opacity 0;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 1200px;\n  transform: translateY(100vh);\n  box-shadow: 2px 10px 30px rgba(0,0,0,.5);\n\n  z-index: 400;\n\n`;\nconst DynamicWrap = styled.div`\n\n  display: flex;\n  width: 100%;\n  background-image: url(img/background.jpg);\n  justify-content: center;\n  height: 100vh;\n  overflow: hidden;\n  align-items: center;\n  background-size: cover;\n\n`;\nconst MapVectorWrap = styled.div`\n\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // padding: 700px;\n  z-index: 100;\n\n  .state {\n    transition: .2s ease;\n    fill: ${props => props.theme.pink};\n    stroke-width: 10px;\n    stroke: ${props => props.theme.brown};\n    &:hover {\n      fill: ${props => props.theme.green};\n    }\n  }\n\n  .city {\n    transition: .2s ease;\n    fill: ${props => props.theme.yellow};\n    stroke-width: 10px;\n    stroke: white;\n    box-shadow: 10px 10px rgba(0,0,0,.5);\n    &:hover {\n      fill: ${props => props.theme.green};\n      stroke:${props => props.theme.green};\n      stroke-width: 150px;\n      cursor: pointer;\n    }\n  }\n\n\n`;\nconst RotatingDude = styled.div`\n\n  height: 700px;\n  width: 700px;\n  background: url(img/WOTE_spiral.png);\n  background-postion: center;\n  background-size: contain;\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  animation-name: spin;\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  @keyframes spin {\n    from {\n      transform: rotateZ(0) translate(-50%, -50%);\n    }\n    to {\n      transform: rotateZ(360) translate(-50%, -50%)\n    }\n  }\n\n\n\n`;\nconst MapRender = styled.div`\n\n  position: fixed;\n  z-index: 5;\n  width: 1000px;\n\n`;\nconst GameNavigator = styled.div`\n\n  display: flex;\n  padding: 10px 0;\n  background-color: ${props => props.theme.pink};\n  width: 100%;\n  justify-content: center;\n  border: 3px solid ${props => props.theme.pink};\n\n  button {\n    color: white;\n    background-color: rgba(0,0,0,0);\n    border: none;\n    margin: 0 10px;\n    font-size: 14px;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n  }\n\n  border-radius: 20px 20px 0 0;\n\n  h1 {\n    color: white;\n    padding: 0;\n    margin: 0 30px;\n  }\n`;\nconst Game = styled.div`\n\n  max-height: 600px;\n  display: flex;\n  border: 3px solid ${props => props.theme.pink};\n  width: 100%;\n  overflow: hidden;\n  \n  .crossword__grid-background {\n    fill: ${props => props.theme.brown};\n  }\n\n  .Layer_2 {\n    box-shadow: 5px 10px rgba(0,0,0,.3);\n  }\n\n`;\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  width: 480px;\n  min-height: 40px;\n  padding: 0 20px 0 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  color: white;\n\n  &:active .date {\n    background-color: ${props => props.theme.pink};\n  }\n\n  .date {\n    background-color: ${props => props.theme.pink};\n    color: white;\n    padding: 10px 10px;\n    width: 50px;\n    display: flex;\n    justify-content: center;\n    margin-right: 24px;\n    font-weight: bold;\n    letter-spacing: 1px;\n    // border-top-left-radius: 20px;\n  }\n\n  &:hover {\n    background-color: ${props => props.theme.yellow};\n  }\n\n  &:hover .date {\n    background-color: ${props => props.theme.yellow};\n  }\n\n  .mapInfo{\n    display: flex;\n    align-items: center;\n    span {\n      margin-right: 20px;\n    }\n\n  }\n\n  .cityName {\n    font-weight: bold;\n  }\n\n  .listItemWrap {\n    display: flex;\n    align-items: center;\n    border-radius: 5px;\n  }\n\n  .venue {\n    font-size: 10px;\n    font-style: italic;\n  }\n\n  a {\n    color: white;\n  }\n\n`;\nconst Hamburger = styled.div`\n\n  position: fixed;\n  right: 40px;\n  top: 40px;\n  z-index: 100;\n\n`; // const RenderMapList = styled.div`\n//   overflow: scroll;\n// `\n// const TourStopList = styled.div`\n//   overflow: scroll;\n//   width: 400px;\n//   background-color: white;\n//   box-shadow: 0px 0px 10px rgba(0,0,0,.5);\n//   z-index; 400;\n// `\n\nconst GameRender = styled.div`\n\n  // padding: 15px;\n  background-color: white;\n  height: 100%;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  .compareImageInput {\n    width: 400px;\n  }\n\n`;\nconst GameWrap = styled.div`\n\n  height: 100%;\n  width: 100%;\n  // background-color: red;\n\n`;\nconst MapListBadgeCrossword = styled.div`\n\n  height: 20px;\n  width: 20px;\n  // background-color:  blue;\n  background-image: url(img/crossword-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst MapListBadgeColoring = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/coloring-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst MapListBadgeWaldo = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/waldo-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst MapListBadgePuzzle = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/puzzle-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst DrawingWrap = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-image: ${props => props.coloringImage};\n  background-size: cover;\n`;\nconst WOTELogo = styled.div`\n\n  background-image: url(img/logo.png);\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  height: 200px;\n  width: 200px;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst PrizeButton = styled.div`\n\n  display: ${props => props.gameState > 0 ? \"flex\" : \"none\"};\n  position: fixed;\n  justify-content: center;\n  bottom: 0;\n  padding: 20px;\n  width: 400px;\n  background-color: ${props => props.modalShown === true ? \"white\" : \"#E25085\"};\n  color:  ${props => props.modalShown === true ? \"#E25085\" : \"white\"};\n  border-radius: 20px 20px 0 0 ;\n  text-align: center;\n  font-weight: bold;\n  animation-name: ${props => props.modalShown === true ? \"none\" : \"jiggle\"};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  @keyframes jiggle {\n    0% {padding-bottom: 20px}\n    10% {padding-bottom: 25px}\n    20% {padding-bottom: 20px}\n  }\n  cursor: pointer;\n  z-index: 600;\n\n`;\nconst Modal = styled.div`\n  padding: 200px;\n  display: ${props => props.modalShown === true ? \"flex\" : \"none\"};\n  postition: fixed;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0,0,0,.3);\n  justify-content: center;\n  align-items: center;\n  z-index: 550;\n\n`;\nconst Menu = styled.div`\n\n  display: ${props => props.open === true ? \"flex\" : \"none\"};\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0,0,0,.6);\n  align-items: center;\n  z-index: 400;\n  flex-direction: column;\n  overflow: scroll;\n  padding: 200px 0;\n\n  h2 {\n    width: 100%;\n    text-align: center;\n    color: white;\n  }\n\n  .iframe {\n    border: none;\n  }\n\n  .menuWrap {\n    display: flex;\n  }\n\n  .menuItem {\n    padding: 20px\n  }\n\n  .menu-container {\n    padding: 20px;\n  }\n\n`;\nconst Intro = styled.div`\n\n  z-index: 700;\n  position: fixed;\n  background: rgba(0,0,0,.6);\n  height: 100vh;\n  width: 100vw;\n  display: ${props => props.siteEntered === true ? \"none\" : \"flex\"};\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-direction: column;\n\n  .enter {\n    cursor: pointer\n  }\n\n  // .introItemsWrap;\n\n  .instructions {\n    max-width: 400px;\n  }\n\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      siteEntered: false,\n      score: 0,\n      completedCrosswords: 0,\n      completedColoring: 0,\n      completedPuzzle: 0,\n      completedWaldo: 0,\n      gameStart: true,\n      gameCompleted: false,\n      gameState: 0,\n      currentGame: \"home\",\n      currentCity: \"no city\",\n      currentState: \"no state\",\n      currentDate: \"no date\",\n      currentData: \"no data\",\n      currentData2: \"no data2\",\n      theme: {\n        brown: \"#583539\",\n        purple: \"#B486BC\",\n        yellow: \"#FDB714\",\n        green: \"#88CCA4\",\n        pink: \"#E25085\"\n      },\n      completedGames: []\n    };\n\n    this.componentDidMount = () => {\n      this.anime1();\n    };\n\n    this.componentDidUpdate = () => {\n      console.log(\"component did update // current game = \" + this.state.currentGame);\n      console.log(\"component did update // current data = \" + this.state.currentData);\n      console.log(\"data2 = \" + this.state.currentData2);\n\n      if (this.state.completedCrosswords > 0 && this.state.completedColoring > 0 && this.state.completedPuzzle > 0 && this.state.completedWaldo > 0 && this.state.gameState === 0) {\n        this.setState({\n          gameState: 1\n        });\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        gameCompleted: true\n      });\n    };\n\n    this.whichCrossword = arg => {\n      switch (arg) {\n        case \"Los Angeles\":\n          return crosswordLA;\n\n        case \"Dallas\":\n          return crosswordDAL;\n      }\n    };\n\n    this.changeGame = (game, city, state, date, data, data2) => {\n      const newGame = game;\n      const newCity = city;\n      const newState = state;\n      const newDate = date;\n      const newData = data;\n      const newData2 = data2;\n      this.state.completedGames.push(newGame);\n      this.setState({\n        currentGame: \"none\"\n      });\n      this.setState({\n        currentGame: newGame\n      });\n      this.setState({\n        currentCity: newCity\n      });\n      this.setState({\n        currentAction: newState\n      });\n      this.setState({\n        currentDate: newDate\n      });\n      this.setState({\n        currentData: newData\n      });\n      this.setState({\n        currentData2: newData2\n      });\n      console.log(\"previous game \" + this.state.currentGame);\n\n      if (this.state.completedGames.includes(newCity)) {\n        return;\n      } else {\n        this.completeCurrentGame(newGame);\n      }\n    };\n\n    this.completeCurrentGame = arg => {\n      const expr = arg;\n      console.log(\"score added for \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          this.setState({\n            completedCrosswords: this.state.completedCrosswords + 1\n          });\n          return;\n\n        case \"coloring\":\n          this.setState({\n            completedColoring: this.state.completedColoring + 1\n          });\n          return;\n\n        case \"puzzle\":\n          this.setState({\n            completedPuzzle: this.state.completedPuzzle + 1\n          });\n          return;\n\n        case \"waldo\":\n          this.setState({\n            completedWaldo: this.state.completedWaldo + 1\n          });\n          return;\n      }\n    };\n\n    this.renderGame = (arg, data) => {\n      const expr = arg;\n\n      if (expr == \"home\") {\n        return this.showHome();\n      } else {\n        this.showGame();\n\n        switch (expr) {\n          case \"crossword\":\n            return React.createElement(Crossword, {\n              data: this.whichCrossword(this.state.currentCity),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 642\n              },\n              __self: this\n            });\n\n          case \"coloring\":\n            return React.createElement(DrawingWrap, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 644\n              },\n              __self: this\n            }, React.createElement(Drawing, {\n              imgSrc: \"./img/\" + this.state.currentData,\n              canvasWidth: 80 + `%`,\n              canvasHeight: 100 + `%`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 645\n              },\n              __self: this\n            }));\n\n          case \"puzzle\":\n            return React.createElement(Slider, {\n              size: 3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 648\n              },\n              __self: this\n            });\n\n          case \"waldo\":\n            return React.createElement(CompareImgInput, {\n              className: \"compareImageInput\",\n              data: this.state.currentData2,\n              rightImage: this.state.currentData,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 650\n              },\n              __self: this\n            });\n        }\n      }\n    };\n\n    this.renderMapListBadge = arg => {\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return React.createElement(MapListBadgeCrossword, {\n            type: expr,\n            count: this.state.completedCrosswords,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 660\n            },\n            __self: this\n          });\n\n        case \"coloring\":\n          return React.createElement(MapListBadgeColoring, {\n            type: expr,\n            count: this.state.completedColoring,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 662\n            },\n            __self: this\n          });\n\n        case \"puzzle\":\n          return React.createElement(MapListBadgePuzzle, {\n            type: expr,\n            count: this.state.completedPuzzle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 664\n            },\n            __self: this\n          });\n\n        case \"waldo\":\n          return React.createElement(MapListBadgeWaldo, {\n            type: expr,\n            count: this.state.completedWaldo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 666\n            },\n            __self: this\n          });\n      }\n    };\n  }\n\n  showHome() {\n    var tl = anime.timeline({\n      easing: \"spring(1, 80, 10, 0)\",\n      duration: 300,\n      complete: function (anim) {// document.getElementByClass(\"game-container\").style.display = \"none\";\n      }\n    });\n    tl.add({\n      targets: \".game-container\",\n      opacity: \"0\",\n      translateY: \"100vh\"\n    }).add({});\n  }\n\n  showGame() {\n    var tl = anime.timeline({\n      easing: 'easeOutCirc',\n      duration: 600\n    });\n    tl.add({\n      targets: \".game-container\",\n      opacity: \"1\",\n      translateY: \"0\"\n    });\n  }\n\n  menuHandleClick() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  renderCompletionStatus(game, count) {\n    const expr = game;\n\n    if (count > 2) {\n      return \"'img/\" + expr + \"-0\" + \"3\" + \".png'\";\n    }\n\n    let badgeString = \"'img/\" + expr + \"-0\" + count + \".png'\";\n    console.log(badgeString);\n    return badgeString;\n  }\n\n  anime1() {\n    var tl = anime.timeline({\n      easing: 'easeOutExpo',\n      duration: 1000\n    });\n    tl.add({\n      targets: \"#Layer_2 .city\",\n      delay: anime.stagger(100),\n      opacity: \"1\",\n      fill: \"white\"\n    }, 200);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(ReactTooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(DynamicWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalShown: this.state.modalShown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, React.createElement(PrizeModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, \"Tour\"), tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      theme: this.state.theme,\n      onClick: () => {\n        // this.setState({open: false});\n        this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data, x.data2, x.title, x.instructions, x.venue);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"listItemWrap\",\n      \"data-tip\": \"Play Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }, x.date1), \"/\", React.createElement(\"span\", {\n      className: \"date1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }, x.date2)), React.createElement(\"div\", {\n      className: \"mapInfo\",\n      \"data-tip\": \"Play Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"cityName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }, x.city, \" \"), React.createElement(\"span\", {\n      className: \"venue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, x.venue, \" \"))), React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    }, \"Buy Tickets\")))), React.createElement(\"div\", {\n      className: \"menu-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }, \"Music\"), React.createElement(Iframe, {\n      className: \"iframe\",\n      url: \"https://open.spotify.com/embed/album/02TmceYFis4XKcjCZ86eBP\",\n      width: \"500px\",\n      height: \"400px\",\n      border: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"menu-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758\n      },\n      __self: this\n    }, \"Merch\"), React.createElement(\"a\", {\n      href: \"https://walkofftheearth.myshopify.com/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759\n      },\n      __self: this\n    }, \"Shop\"))), React.createElement(WOTELogo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }), React.createElement(Hamburger, {\n      style: {\n        zIndex: \"900\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(Socials, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }), React.createElement(HamburgerMenu, {\n      className: \"hamburger\",\n      isOpen: this.state.open,\n      menuClicked: this.menuHandleClick.bind(this),\n      width: 18,\n      height: 15,\n      strokeWidth: 1,\n      rotate: 0,\n      color: \"black\",\n      borderRadius: 0,\n      animationDuration: 0.2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    })), React.createElement(PrizeButton, {\n      modalShown: this.state.modalShown,\n      gameState: this.state.gameState,\n      theme: this.state.theme,\n      onClick: () => {\n        this.setState({\n          modalShown: !this.state.modalShown\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, this.state.modalShown ? \"RETURN TO GAMES\" : \"CLAIM YOUR PRIZE\"), React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      className: \"scoreboardBadge\",\n      star: this.renderCompletionStatus(\"crossword\", this.state.completedCrosswords),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      className: \"scoreboardBadge\",\n      star: this.renderCompletionStatus(\"coloring\", this.state.completedColoring),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      className: \"scoreboardBadge\",\n      star: this.renderCompletionStatus(\"puzzle\", this.state.completedPuzzle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      className: \"scoreboardBadge\",\n      star: this.renderCompletionStatus(\"waldo\", this.state.completedWaldo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    })), React.createElement(MapVectorWrap, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }, React.createElement(MapRender, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, mapVector(this.changeGame))), React.createElement(RotatingDude, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }), React.createElement(GameContainer, {\n      className: \"game-container\",\n      show: this.state.currentGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }, React.createElement(GameNavigator, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          open: true,\n          currentGame: \"home\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }, \"See Tour Dates\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, this.state.currentCity), React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          currentGame: \"home\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }, \"Back to Home\")), React.createElement(Game, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807\n      },\n      __self: this\n    }, React.createElement(GameRender, {\n      currentGame: this.state.currentGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }, React.createElement(GameWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, this.renderGame(this.state.currentGame))))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, React.createElement(CompareImgInput, {\n      data: this.state.currentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/App.js"],"names":["React","Component","styled","Crossword","Slider","Drawing","HamburgerMenu","anime","CompareImgInput","tourStops","mapVector","crosswordLA","crosswordDAL","Iframe","Socials","ReactTooltip","PrizeModal","BrowserRouter","Router","Switch","Route","Link","Scoreboard","div","Badge","props","star","GameContainer","DynamicWrap","MapVectorWrap","theme","pink","brown","green","yellow","RotatingDude","MapRender","GameNavigator","Game","MapListItem","Hamburger","GameRender","GameWrap","MapListBadgeCrossword","MapListBadgeColoring","MapListBadgeWaldo","MapListBadgePuzzle","DrawingWrap","coloringImage","WOTELogo","PrizeButton","gameState","modalShown","Modal","Menu","open","Intro","siteEntered","App","state","score","completedCrosswords","completedColoring","completedPuzzle","completedWaldo","gameStart","gameCompleted","currentGame","currentCity","currentState","currentDate","currentData","currentData2","purple","completedGames","componentDidMount","anime1","componentDidUpdate","console","log","setState","finishGame","whichCrossword","arg","changeGame","game","city","date","data","data2","newGame","newCity","newState","newDate","newData","newData2","push","currentAction","includes","completeCurrentGame","expr","renderGame","showHome","showGame","renderMapListBadge","tl","timeline","easing","duration","complete","anim","add","targets","opacity","translateY","menuHandleClick","renderCompletionStatus","count","badgeString","delay","stagger","fill","render","map","x","i","bind","title","instructions","venue","date1","date2","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport Slider from \"react-slider-game\";\n// import CanvasDraw from \"react-canvas-draw\";\nimport Drawing from \"./components/Drawing.jsx\";\nimport HamburgerMenu from \"react-hamburger-menu\";\nimport anime from 'animejs/lib/anime.es.js';\n\nimport CompareImgInput from \"./components/CompareImgInput\";\n\nimport tourStops from './components/data/tourStops.jsx';\nimport mapVector from './components/mapVector';\n\nimport crosswordLA from \"./components/data/crosswordLA\";\nimport crosswordDAL from \"./components/data/crosswordDAL\";\n\nimport Iframe from 'react-iframe';\n\nimport Socials from \"./components/Socials\";\nimport ReactTooltip from 'react-tooltip'\n\nimport PrizeModal from \"./components/PrizeModal\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\n\nconst Scoreboard = styled.div`\n\n  padding: 20px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  // background-color: lightblue;\n  display: flex;\n\n  // &:hover {\n  //   .scoreboardBadge {\n  //     margin-bottom: 20px;\n  //   }\n\n  // }\n\n`\nconst Badge = styled.div`\n\n  margin: 0 10px;\n  height: 30px;\n  width: 30px;\n  background-image: ${props => \"url(\" + props.star + \")\"};\n  background-size: cover;\n\n\n`\n\nconst GameContainer = styled.div`\n\n  opacity 0;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 1200px;\n  transform: translateY(100vh);\n  box-shadow: 2px 10px 30px rgba(0,0,0,.5);\n\n  z-index: 400;\n\n`\n\nconst DynamicWrap = styled.div`\n\n  display: flex;\n  width: 100%;\n  background-image: url(img/background.jpg);\n  justify-content: center;\n  height: 100vh;\n  overflow: hidden;\n  align-items: center;\n  background-size: cover;\n\n`\n\nconst MapVectorWrap = styled.div`\n\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // padding: 700px;\n  z-index: 100;\n\n  .state {\n    transition: .2s ease;\n    fill: ${props => props.theme.pink};\n    stroke-width: 10px;\n    stroke: ${props => props.theme.brown};\n    &:hover {\n      fill: ${props => props.theme.green};\n    }\n  }\n\n  .city {\n    transition: .2s ease;\n    fill: ${props => props.theme.yellow};\n    stroke-width: 10px;\n    stroke: white;\n    box-shadow: 10px 10px rgba(0,0,0,.5);\n    &:hover {\n      fill: ${props => props.theme.green};\n      stroke:${props => props.theme.green};\n      stroke-width: 150px;\n      cursor: pointer;\n    }\n  }\n\n\n`\n\nconst RotatingDude = styled.div`\n\n  height: 700px;\n  width: 700px;\n  background: url(img/WOTE_spiral.png);\n  background-postion: center;\n  background-size: contain;\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  animation-name: spin;\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  @keyframes spin {\n    from {\n      transform: rotateZ(0) translate(-50%, -50%);\n    }\n    to {\n      transform: rotateZ(360) translate(-50%, -50%)\n    }\n  }\n\n\n\n`\n\nconst MapRender = styled.div`\n\n  position: fixed;\n  z-index: 5;\n  width: 1000px;\n\n`\n\n\nconst GameNavigator = styled.div`\n\n  display: flex;\n  padding: 10px 0;\n  background-color: ${props => props.theme.pink};\n  width: 100%;\n  justify-content: center;\n  border: 3px solid ${props => props.theme.pink};\n\n  button {\n    color: white;\n    background-color: rgba(0,0,0,0);\n    border: none;\n    margin: 0 10px;\n    font-size: 14px;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n  }\n\n  border-radius: 20px 20px 0 0;\n\n  h1 {\n    color: white;\n    padding: 0;\n    margin: 0 30px;\n  }\n`\n\nconst Game = styled.div`\n\n  max-height: 600px;\n  display: flex;\n  border: 3px solid ${props => props.theme.pink};\n  width: 100%;\n  overflow: hidden;\n  \n  .crossword__grid-background {\n    fill: ${props => props.theme.brown};\n  }\n\n  .Layer_2 {\n    box-shadow: 5px 10px rgba(0,0,0,.3);\n  }\n\n`\n\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  width: 480px;\n  min-height: 40px;\n  padding: 0 20px 0 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  color: white;\n\n  &:active .date {\n    background-color: ${props => props.theme.pink};\n  }\n\n  .date {\n    background-color: ${props => props.theme.pink};\n    color: white;\n    padding: 10px 10px;\n    width: 50px;\n    display: flex;\n    justify-content: center;\n    margin-right: 24px;\n    font-weight: bold;\n    letter-spacing: 1px;\n    // border-top-left-radius: 20px;\n  }\n\n  &:hover {\n    background-color: ${props => props.theme.yellow};\n  }\n\n  &:hover .date {\n    background-color: ${props => props.theme.yellow};\n  }\n\n  .mapInfo{\n    display: flex;\n    align-items: center;\n    span {\n      margin-right: 20px;\n    }\n\n  }\n\n  .cityName {\n    font-weight: bold;\n  }\n\n  .listItemWrap {\n    display: flex;\n    align-items: center;\n    border-radius: 5px;\n  }\n\n  .venue {\n    font-size: 10px;\n    font-style: italic;\n  }\n\n  a {\n    color: white;\n  }\n\n`\n\nconst Hamburger = styled.div`\n\n  position: fixed;\n  right: 40px;\n  top: 40px;\n  z-index: 100;\n\n`\n\n// const RenderMapList = styled.div`\n\n//   overflow: scroll;\n\n// `\n\n// const TourStopList = styled.div`\n\n//   overflow: scroll;\n//   width: 400px;\n//   background-color: white;\n//   box-shadow: 0px 0px 10px rgba(0,0,0,.5);\n//   z-index; 400;\n\n// `\n\nconst GameRender = styled.div`\n\n  // padding: 15px;\n  background-color: white;\n  height: 100%;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  .compareImageInput {\n    width: 400px;\n  }\n\n`\n\nconst GameWrap = styled.div`\n\n  height: 100%;\n  width: 100%;\n  // background-color: red;\n\n`\n\nconst MapListBadgeCrossword = styled.div`\n\n  height: 20px;\n  width: 20px;\n  // background-color:  blue;\n  background-image: url(img/crossword-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\n\nconst MapListBadgeColoring = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/coloring-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\nconst MapListBadgeWaldo = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/waldo-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\nconst MapListBadgePuzzle = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/puzzle-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\n\nconst DrawingWrap = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-image: ${props => props.coloringImage};\n  background-size: cover;\n`\n\nconst WOTELogo = styled.div`\n\n  background-image: url(img/logo.png);\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  height: 200px;\n  width: 200px;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\n\nconst PrizeButton = styled.div`\n\n  display: ${props => (props.gameState > 0) ? \"flex\" : \"none\"};\n  position: fixed;\n  justify-content: center;\n  bottom: 0;\n  padding: 20px;\n  width: 400px;\n  background-color: ${props => (props.modalShown === true) ? \"white\" : \"#E25085\"};\n  color:  ${props => (props.modalShown === true) ? \"#E25085\" : \"white\"};\n  border-radius: 20px 20px 0 0 ;\n  text-align: center;\n  font-weight: bold;\n  animation-name: ${props => (props.modalShown === true) ? \"none\" : \"jiggle\"};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  @keyframes jiggle {\n    0% {padding-bottom: 20px}\n    10% {padding-bottom: 25px}\n    20% {padding-bottom: 20px}\n  }\n  cursor: pointer;\n  z-index: 600;\n\n`\n\nconst Modal = styled.div`\n  padding: 200px;\n  display: ${props => (props.modalShown === true) ? \"flex\" : \"none\"};\n  postition: fixed;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0,0,0,.3);\n  justify-content: center;\n  align-items: center;\n  z-index: 550;\n\n`\n\nconst Menu = styled.div`\n\n  display: ${props => (props.open === true) ? \"flex\" : \"none\"};\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0,0,0,.6);\n  align-items: center;\n  z-index: 400;\n  flex-direction: column;\n  overflow: scroll;\n  padding: 200px 0;\n\n  h2 {\n    width: 100%;\n    text-align: center;\n    color: white;\n  }\n\n  .iframe {\n    border: none;\n  }\n\n  .menuWrap {\n    display: flex;\n  }\n\n  .menuItem {\n    padding: 20px\n  }\n\n  .menu-container {\n    padding: 20px;\n  }\n\n`\nconst Intro = styled.div`\n\n  z-index: 700;\n  position: fixed;\n  background: rgba(0,0,0,.6);\n  height: 100vh;\n  width: 100vw;\n  display: ${props => (props.siteEntered === true) ? \"none\" : \"flex\"};\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-direction: column;\n\n  .enter {\n    cursor: pointer\n  }\n\n  // .introItemsWrap;\n\n  .instructions {\n    max-width: 400px;\n  }\n\n`\n\nclass App extends Component {\n\n  state = {\n\n    siteEntered: false,\n\n    score: 0,\n\n    completedCrosswords: 0,\n    completedColoring: 0,\n    completedPuzzle: 0,\n    completedWaldo: 0,\n\n    gameStart: true,\n    gameCompleted: false,\n    gameState: 0,\n\n    currentGame: \"home\",\n    currentCity: \"no city\",\n    currentState: \"no state\",\n    currentDate: \"no date\",\n    currentData: \"no data\",\n    currentData2: \"no data2\",\n\n    theme: {\n      brown: \"#583539\",\n      purple: \"#B486BC\",\n      yellow: \"#FDB714\",\n      green: \"#88CCA4\",\n      pink: \"#E25085\"\n    },\n\n    completedGames: []\n  }\n\n  componentDidMount = () => {\n\n    this.anime1()\n\n  }\n\n  componentDidUpdate = () => {\n\n    console.log(\"component did update // current game = \" + this.state.currentGame)\n    console.log(\"component did update // current data = \" + this.state.currentData)\n    console.log(\"data2 = \" + this.state.currentData2)\n\n    if (this.state.completedCrosswords > 0 && this.state.completedColoring > 0 && this.state.completedPuzzle > 0 && this.state.completedWaldo > 0 && this.state.gameState === 0) {\n      this.setState({ gameState: 1 })\n    }\n\n\n  }\n\n  finishGame = () => {\n\n    this.setState({ gameCompleted: true });\n\n  }\n\n  whichCrossword = (arg) => {\n    switch (arg) {\n      case \"Los Angeles\":\n        return crosswordLA\n      case \"Dallas\":\n        return crosswordDAL\n    }\n  }\n\n  changeGame = (game, city, state, date, data, data2) => {\n    const newGame = game;\n    const newCity = city;\n    const newState = state;\n    const newDate = date;\n    const newData = data;\n    const newData2 = data2;\n    this.state.completedGames.push(newGame);\n    this.setState({ currentGame: \"none\" });\n    this.setState({ currentGame: newGame });\n    this.setState({ currentCity: newCity });\n    this.setState({ currentAction: newState });\n    this.setState({ currentDate: newDate });\n    this.setState({ currentData: newData });\n    this.setState({ currentData2: newData2 });\n    console.log(\"previous game \" + this.state.currentGame);\n\n    if (this.state.completedGames.includes(newCity)) {\n      return\n    } else {\n      this.completeCurrentGame(newGame);\n    }\n\n  }\n\n  completeCurrentGame = (arg) => {\n    const expr = arg\n    console.log(\"score added for \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        this.setState({ completedCrosswords: (this.state.completedCrosswords + 1) })\n        return;\n      case \"coloring\":\n        this.setState({ completedColoring: (this.state.completedColoring + 1) })\n        return;\n      case \"puzzle\":\n        this.setState({ completedPuzzle: (this.state.completedPuzzle + 1) })\n        return;\n      case \"waldo\":\n        this.setState({ completedWaldo: (this.state.completedWaldo + 1) })\n        return;\n    }\n  }\n\n  showHome() {\n    var tl = anime.timeline({\n      easing: \"spring(1, 80, 10, 0)\",\n      duration: 300,\n      complete: function (anim) {\n        // document.getElementByClass(\"game-container\").style.display = \"none\";\n      }\n    });\n\n    tl.add({\n      targets: \".game-container\",\n      opacity: \"0\",\n      translateY: \"100vh\"\n    }).add({\n\n    })\n  }\n\n  showGame() {\n    var tl = anime.timeline({\n      easing: 'easeOutCirc',\n      duration: 600,\n    });\n\n    tl.add({\n      targets: \".game-container\",\n      opacity: \"1\",\n      translateY: \"0\",\n    })\n  }\n\n  renderGame = (arg, data) => {\n    const expr = arg\n\n    if (expr == \"home\") {\n      return this.showHome()\n    } else {\n      this.showGame()\n      switch (expr) {\n        case \"crossword\":\n          return <Crossword data={this.whichCrossword(this.state.currentCity)} />;\n        case \"coloring\":\n          return <DrawingWrap >\n            <Drawing imgSrc={\"./img/\" + this.state.currentData} canvasWidth={80 + `%`} canvasHeight={100 + `%`} />\n          </DrawingWrap>\n        case \"puzzle\":\n          return <Slider size={3} />;\n        case \"waldo\":\n          return <CompareImgInput className=\"compareImageInput\" data={this.state.currentData2} rightImage={this.state.currentData} />\n      }\n    }\n\n  }\n\n  renderMapListBadge = (arg) => {\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return <MapListBadgeCrossword type={expr} count={this.state.completedCrosswords} />;\n      case \"coloring\":\n        return <MapListBadgeColoring type={expr} count={this.state.completedColoring} />;\n      case \"puzzle\":\n        return <MapListBadgePuzzle type={expr} count={this.state.completedPuzzle} />;\n      case \"waldo\":\n        return <MapListBadgeWaldo type={expr} count={this.state.completedWaldo} />;\n    }\n  }\n\n  menuHandleClick() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  renderCompletionStatus(game, count) {\n\n    const expr = game\n    if (count > 2) {\n      return \"'img/\" + expr + \"-0\" + \"3\" + \".png'\"\n    }\n\n    let badgeString = \"'img/\" + expr + \"-0\" + count + \".png'\"\n    console.log(badgeString)\n    return badgeString\n\n  }\n\n  anime1() {\n    var tl = anime.timeline({\n      easing: 'easeOutExpo',\n      duration: 1000,\n    });\n\n    tl.add({\n      targets: \"#Layer_2 .city\",\n      delay: anime.stagger(100),\n      opacity: \"1\",\n      fill: \"white\"\n    }, 200)\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div>\n          <ReactTooltip />\n\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <DynamicWrap>\n\n\n                {/* <Intro siteEntered={this.state.siteEntered}>\n                    <h1>Here We Go!</h1>\n                    <p className=\"instructions\">We're on tour! We made games for all of our tour spots. Discover something new in every city and collect stars. Collect one of each star and win something special! 🌎</p>\n                    <div className=\"enter\"onClick={()=>{this.setState({siteEntered: true})}}>enter</div>\n                </Intro> */}\n\n                <Modal modalShown={this.state.modalShown}>\n                  <PrizeModal />\n                </Modal>\n\n                <Menu open={this.state.open}>\n                  <div className=\"menu-container\">\n                    <h2>Tour</h2>\n                    {/* <a href=\"https://www.bandsintown.com/a/158776-walk-off-the-earth?came_from=242\">Tour!</a> */}\n                    {tourStops && tourStops.map((x, i) => (\n                          <MapListItem theme={this.state.theme} onClick={()=>{\n                            // this.setState({open: false});\n                            this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data, x.data2, x.title, x.instructions, x.venue); \n                          }\n                          } >\n                            <div className=\"listItemWrap\" data-tip=\"Play Game\">\n                              <div className=\"date\">\n                                <span className=\"date1\">{x.date1}</span>/<span className=\"date1\">{x.date2}</span>\n                              </div>\n                              <div className=\"mapInfo\" data-tip=\"Play Game\">\n                                <span className=\"cityName\">{x.city} </span>\n                                <span className=\"venue\">{x.venue} </span>\n                              </div>\n                            </div>\n                            <a href=\"#\">Buy Tickets</a>\n                            {/* {this.renderMapListBadge(x.game)} */}\n                          </MapListItem>\n                        ))\n                        }\n                  </div>\n                  <div className=\"menu-container\">\n                    <h2>Music</h2>\n                    <Iframe className=\"iframe\" url=\"https://open.spotify.com/embed/album/02TmceYFis4XKcjCZ86eBP\" width=\"500px\" height=\"400px\" border=\"none\"></Iframe>\n                  </div>\n                  <div className=\"menu-container\">\n                    <h2>Merch</h2>\n                    <a href=\"https://walkofftheearth.myshopify.com/\">Shop</a>\n                  </div>\n                </Menu>\n\n                <WOTELogo />\n                <Hamburger                   style={{zIndex:\"900\"}}>\n                  <Socials theme={this.state.theme} />\n                  <HamburgerMenu\n\n                    className=\"hamburger\"\n                    isOpen={this.state.open}\n                    menuClicked={this.menuHandleClick.bind(this)}\n                    width={18}\n                    height={15}\n                    strokeWidth={1}\n                    rotate={0}\n                    color='black'\n                    borderRadius={0}\n                    animationDuration={0.2}\n                  />\n                </Hamburger>\n\n                <PrizeButton modalShown={this.state.modalShown} gameState={this.state.gameState} theme={this.state.theme} onClick={() => { this.setState({ modalShown: !this.state.modalShown }) }}>\n                  {this.state.modalShown ? \"RETURN TO GAMES\" : \"CLAIM YOUR PRIZE\"}\n                </PrizeButton>\n\n                <Scoreboard>\n                  <Badge className=\"scoreboardBadge\" star={this.renderCompletionStatus(\"crossword\", this.state.completedCrosswords)}></Badge>\n                  <Badge className=\"scoreboardBadge\" star={this.renderCompletionStatus(\"coloring\", this.state.completedColoring)}></Badge>\n                  <Badge className=\"scoreboardBadge\" star={this.renderCompletionStatus(\"puzzle\", this.state.completedPuzzle)}></Badge>\n                  <Badge className=\"scoreboardBadge\" star={this.renderCompletionStatus(\"waldo\", this.state.completedWaldo)}></Badge>\n\n                </Scoreboard>\n\n                <MapVectorWrap theme={this.state.theme}>\n                  <MapRender>\n                    {mapVector(this.changeGame)}\n                  </MapRender>\n                </MapVectorWrap>\n\n                <RotatingDude></RotatingDude>\n\n                <GameContainer className=\"game-container\" show={this.state.currentGame}>\n                  <GameNavigator theme={this.state.theme}>\n                    <button onClick={()=>{ this.setState({ open: true, currentGame: \"home\"})}}>See Tour Dates</button>\n                    <h1>{this.state.currentCity}</h1>\n                    <button onClick={() => { this.setState({ currentGame: \"home\" }) }}>Back to Home</button>\n                  </GameNavigator>\n                  <Game theme={this.state.theme}>\n                    {/* <TourStopList>\n                      <RenderMapList>\n                        {tourStops && tourStops.map((x, i) => (\n                          <MapListItem theme={this.state.theme} onClick={\n                            this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data, x.data2, x.title, x.instructions, x.venue)\n                          } >\n                            <div className=\"listItemWrap\">\n                              <div className=\"date\">\n                                <span className=\"date1\">{x.date1}</span>/<span className=\"date1\">{x.date2}</span>\n                              </div>\n                              <div className=\"mapInfo\">\n                                <span className=\"cityName\">{x.city} </span>\n                                <span className=\"venue\">{x.venue} </span>\n                              </div>\n                            </div>\n                            {this.renderMapListBadge(x.game)}\n                          </MapListItem>\n                        ))\n                        }\n                      </RenderMapList>\n                    </TourStopList> */}\n                    <GameRender currentGame={this.state.currentGame}>\n                      {/* <h1>{this.state.currentCity}</h1>\n                      <h2>{this.state.currentVenue}</h2> */}\n                      <GameWrap>\n                        {this.renderGame(this.state.currentGame)}\n                      </GameWrap>\n                    </GameRender>\n                  </Game>\n                </GameContainer>\n\n              </DynamicWrap>\n\n            </Route>\n\n            <Route path=\"/map\">\n              <CompareImgInput data={this.state.currentData} />\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}