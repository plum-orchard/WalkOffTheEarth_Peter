{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Main from \"./components/Main.jsx\";\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`;\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`;\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: block;\n\n`;\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`;\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n\n`;\nconst MapRender = styled.div`\n\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`;\nconst CompleteGameButton = styled.div`\n\n  display: ${props => props.currentGame == \"home\" ? \"none\" : \"block\"};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`;\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-color: red;\n\n`;\nconst tourStops = [{\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}, {\n  date: \"0212\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"0213\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"0214\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"0215\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      currentGame: \"home\",\n      completedCrosswords: 0,\n      completedWaldo: 0,\n      completedPuzzle: 0,\n      completedColoring: 0,\n      gameStart: true,\n      gameCompleted: false\n    };\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = () => {\n      // console.log(this.state.currentGame)\n      // check badges\n      // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n      if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n        alert(\"congratulations!\");\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        gameCompleted: true\n      });\n    };\n\n    this.changeTheme = (arg, action) => {\n      const newTheme = arg;\n      this.setState({\n        currentGame: newTheme\n      });\n      console.log(\"arg\" + arg);\n      console.log(this.state.currentGame);\n    };\n\n    this.gameColor = arg => {\n      console.log(\"hey \" + arg);\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return \"blue\";\n          break;\n\n        case \"coloring\":\n          return \"orange\";\n          break;\n\n        case \"waldo\":\n          return \"pink\";\n          break;\n\n        case \"puzzle\":\n          return \"gray\";\n          break;\n\n        case \"home\":\n          return \"lightblue\";\n          break;\n      }\n    };\n\n    this.completeCurrentGame = arg => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedCrosswords: this.state.completedCrosswords + 1\n          });\n          return;\n          break;\n\n        case \"coloring\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedColoring: this.state.completedColoring + 1\n          });\n          return;\n          break;\n\n        case \"waldo\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedWaldo: this.state.completedWaldo + 1\n          });\n          return;\n          break;\n\n        case \"puzzle\":\n          this.setState({\n            currentGame: \"home\"\n          });\n          this.setState({\n            completedPuzzle: this.state.completedPuzzle + 1\n          });\n          return;\n          break;\n      }\n    };\n\n    this.renderGame = arg => {\n      const expr = arg;\n      console.log(\"complete current game \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          return;\n          break;\n\n        case \"coloring\":\n          return;\n          break;\n\n        case \"waldo\":\n          return;\n          break;\n\n        case \"puzzle\":\n          return;\n          break;\n      }\n    };\n  }\n\n  render() {\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, this.state.completedCrosswords), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, this.state.completedWaldo), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.state.completedColoring), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.state.completedPuzzle)), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      soma: true,\n      onClick: this.changeTheme.bind(this, x.game),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, x.city, \" + \", x.game)))), React.createElement(MapRender, {\n      currentGame: this.state.currentGame,\n      gameColor: this.gameColor(this.state.currentGame),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, this.state.currentGame, renderGame(this.state.currentGame)), React.createElement(CompleteGameButton, {\n      currentGame: this.state.currentGame,\n      onClick: () => {\n        this.completeCurrentGame(this.state.currentGame);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"complete game\"))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js"],"names":["React","Component","styled","Crossword","BrowserRouter","Router","Switch","Route","Link","Main","Scoreboard","div","Badge","props","color","MapContainer","Map","MapListItem","RenderMapList","TourStopList","MapRender","gameColor","CompleteGameButton","currentGame","GameContainer","tourStops","date","city","venue","game","App","state","score","completedCrosswords","completedWaldo","completedPuzzle","completedColoring","gameStart","gameCompleted","componentDidMount","componentDidUpdate","alert","finishGame","setState","changeTheme","arg","action","newTheme","console","log","expr","completeCurrentGame","renderGame","render","gameStatus","locations","map","x","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Main from \"./components/Main.jsx\"\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`\n\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`\n\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: block;\n\n`\n\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`\n\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n\n`\n\nconst MapRender = styled.div`\n\n\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n\n`\n\nconst CompleteGameButton = styled.div`\n\n  display: ${props => (props.currentGame == \"home\" ? \"none\" : \"block\")};\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n\n`\n\nconst GameContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n  background-color: red;\n\n`\n\nconst tourStops = [\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n  {\n    date: \"0212\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"0213\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"0214\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  , {\n    date: \"0215\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  },\n];\n\n\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    currentGame: \"home\",\n    completedCrosswords: 0,\n    completedWaldo: 0,\n    completedPuzzle: 0,\n    completedColoring: 0,\n    gameStart: true,\n    gameCompleted: false,\n  }\n\n  componentDidMount = () => {\n\n\n\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.state.currentGame)\n\n    // check badges\n    // if badges are complete\n    // Change gameCompleted\n    // GivePrize\n\n    if (this.state.completedColoring > 0 && this.state.completedCrosswords > 0 && this.state.completedWaldo > 0 && this.state.completedPuzzle > 0) {\n      alert(\"congratulations!\")\n    }\n\n  }\n\n  finishGame = () => {\n    this.setState({ gameCompleted: true });\n  }\n\n\n  changeTheme = (arg, action) => {\n    const newTheme = arg\n    this.setState({ currentGame: newTheme });\n    console.log(\"arg\" +\n      arg)\n    console.log(this.state.currentGame);\n  }\n\n  gameColor = (arg) => {\n    console.log(\"hey \" + arg)\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return \"blue\";\n        break;\n      case \"coloring\":\n        return \"orange\";\n        break;\n      case \"waldo\":\n        return \"pink\";\n        break;\n      case \"puzzle\":\n        return \"gray\";\n        break;\n      case \"home\":\n        return \"lightblue\";\n        break;\n    }\n  }\n\n  completeCurrentGame = (arg) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedCrosswords: (this.state.completedCrosswords + 1) })\n        return;\n        break;\n      case \"coloring\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedColoring: (this.state.completedColoring + 1) })\n        return;\n        break;\n      case \"waldo\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedWaldo: (this.state.completedWaldo + 1) })\n        return;\n        break;\n      case \"puzzle\":\n        this.setState({ currentGame: \"home\" });\n        this.setState({ completedPuzzle: (this.state.completedPuzzle + 1) })\n        return;\n        break;\n    }\n  }\n\n  renderGame = (arg) => {\n    const expr = arg\n    console.log(\"complete current game \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        return ;\n        break;\n      case \"coloring\":\n        return;\n        break;\n      case \"waldo\":\n        return;\n        break;\n      case \"puzzle\":\n        return;\n        break;\n    }\n\n\n  }\n\n  render() {\n\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n\n    return (\n      <Router>\n        <div>\n\n          <Scoreboard>\n            {/* <RenderBadges gameStatus={gameStatus} badges={this.state.badges} /> */}\n            <Badge>{this.state.completedCrosswords}</Badge>\n            <Badge>{this.state.completedWaldo}</Badge>\n            <Badge>{this.state.completedColoring}</Badge>\n            <Badge>{this.state.completedPuzzle}</Badge>\n          </Scoreboard>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <MapContainer>\n\n                <Map>\n\n                  <TourStopList>\n                    <RenderMapList>\n\n                      {tourStops && tourStops.map((x, i) => (\n                        <MapListItem soma onClick={this.changeTheme.bind(this, x.game)} >\n                          {x.city} + {x.game}\n                        </MapListItem>\n                      ))\n                      }\n\n                    </RenderMapList>\n                  </TourStopList>\n\n                  <MapRender currentGame={this.state.currentGame} gameColor={this.gameColor(this.state.currentGame)}>\n                    <GameContainer>{this.state.currentGame}\n                    {renderGame(this.state.currentGame)}\n                      \n\n                    </GameContainer>\n                    <CompleteGameButton currentGame={this.state.currentGame} onClick={() => { this.completeCurrentGame(this.state.currentGame) }}>\n\n                      complete game</CompleteGameButton>\n\n                  </MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n              {/* <Main /> */}\n            </Route>\n\n            <Route path=\"/map\">\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}