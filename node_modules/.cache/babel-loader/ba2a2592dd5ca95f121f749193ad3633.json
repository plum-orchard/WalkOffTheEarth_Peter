{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { render } from \"react-dom\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport classNames from \"./drawing.css\";\nconst DrawingWrapper = styled.div`\n\n    display: flex;\n    flex-direction: row-reverse;\n\n    #toolbox {\n        padding: 20px\n    }\n\n    input {\n        margin-left: 10px\n    }\n\n    .toolchunk {\n        margin-bottom: 10px;\n    }\n    \n    .colorTools{\n        margin:16px 0px;\n        width:100%;\n        display:flex;\n        flex-direction:row;\n        align-items:center;\n        justify-content:center;\n    }\n\n    .colorSelector{\n        width:20%;\n        height:20px;\n        color:red;\n        border:3px solid rgba(0,0,0,0);\n    }\n\n    #color1{\n        background:#583539;\n    }\n    #color2{\n        background:#B486BC;\n    }\n    #color3{\n        background:#FDB714;\n    }\n    #color4{\n        background:#88CCA4;\n    }\n    #color5{\n        background:#E25085;\n    }\n\n\n    button {\n        border-radius: 30px;\n        border: none;\n        background: ${props => props.theme.yellow};\n        color: yellow;\n        padding:10px 20px;\n        margin:8px 4px;\n        text-transform: uppercase;\n        &:hover {\n            background: ${props => props.theme.brown};\n        }\n    }\n`;\n\nfunction hexToRGB(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n} // hexToRGB('#FF0000', 0.5);\n\n\nclass CanvasDraw2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"#ffc60080\",\n      // width: 100,\n      // height: 100,\n      brushRadius: 10,\n      lazyRadius: 12,\n      theme: {\n        brown: \"#583539\",\n        purple: \"#B486BC\",\n        yellow: \"#FDB714\",\n        green: \"#88CCA4\",\n        pink: \"#E25085\"\n      }\n    };\n\n    this.changeColor = color => {\n      color = hexToRGB(color, 0.5);\n      this.setState({\n        color: color\n      });\n    };\n  }\n\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    // window.setInterval(() => {\n    //   this.setState({\n    //     color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n    //   });\n    // }, 2000);\n    console.log(\"image source \" + this.props.imgSrc);\n  }\n\n  render() {\n    return React.createElement(DrawingWrapper, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"toolbox\",\n      className: classNames.tools,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolchunk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Brush-Radius:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.brushRadius,\n      onChange: e => this.setState({\n        brushRadius: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"colorTools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: e => {\n        e.preventDefault();\n        this.changeColor(this.state.theme.brown);\n      },\n      className: \"colorSelector\",\n      id: \"color1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: e => {\n        e.preventDefault();\n        this.changeColor(this.state.theme.purple);\n      },\n      className: \"colorSelector\",\n      id: \"color2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: e => {\n        e.preventDefault();\n        this.changeColor(this.state.theme.yellow);\n      },\n      className: \"colorSelector\",\n      id: \"color3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: e => {\n        e.preventDefault();\n        this.changeColor(this.state.theme.green);\n      },\n      className: \"colorSelector\",\n      id: \"color4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: e => {\n        e.preventDefault();\n        this.changeColor(this.state.theme.pink);\n      },\n      className: \"colorSelector\",\n      id: \"color5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => {\n        // console.log(\"hi\")\n        console.log(); // let dataURL = exportCanvas.toDataURL();\n        // console.log(dataURL)\n\n        localStorage.setItem(\"savedDrawing\", this.saveableCanvas.getSaveData());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.saveableCanvas.clear();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.saveableCanvas.undo();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Undo\")), React.createElement(CanvasDraw, {\n      id: \"exportCanvas\",\n      ref: canvasDraw => this.saveableCanvas = canvasDraw,\n      brushColor: this.state.color,\n      brushRadius: this.state.brushRadius,\n      imgSrc: this.props.imgSrc,\n      lazyRadius: this.state.lazyRadius,\n      canvasWidth: 600,\n      canvasHeight: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }));\n  }\n\n}\n\nCanvasDraw2.propTypes = {\n  imgSrc: React.propTypes\n};\nexport default CanvasDraw2;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing.jsx"],"names":["React","Component","styled","render","CanvasDraw","classNames","DrawingWrapper","div","props","theme","yellow","brown","hexToRGB","hex","alpha","r","parseInt","slice","g","b","CanvasDraw2","constructor","state","color","brushRadius","lazyRadius","purple","green","pink","changeColor","setState","componentDidMount","console","log","imgSrc","tools","e","target","value","preventDefault","localStorage","setItem","saveableCanvas","getSaveData","clear","undo","canvasDraw","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { render } from \"react-dom\";\n\nimport CanvasDraw from \"react-canvas-draw\";\nimport classNames from \"./drawing.css\";\n\nconst DrawingWrapper = styled.div`\n\n    display: flex;\n    flex-direction: row-reverse;\n\n    #toolbox {\n        padding: 20px\n    }\n\n    input {\n        margin-left: 10px\n    }\n\n    .toolchunk {\n        margin-bottom: 10px;\n    }\n    \n    .colorTools{\n        margin:16px 0px;\n        width:100%;\n        display:flex;\n        flex-direction:row;\n        align-items:center;\n        justify-content:center;\n    }\n\n    .colorSelector{\n        width:20%;\n        height:20px;\n        color:red;\n        border:3px solid rgba(0,0,0,0);\n    }\n\n    #color1{\n        background:#583539;\n    }\n    #color2{\n        background:#B486BC;\n    }\n    #color3{\n        background:#FDB714;\n    }\n    #color4{\n        background:#88CCA4;\n    }\n    #color5{\n        background:#E25085;\n    }\n\n\n    button {\n        border-radius: 30px;\n        border: none;\n        background: ${props=>props.theme.yellow};\n        color: yellow;\n        padding:10px 20px;\n        margin:8px 4px;\n        text-transform: uppercase;\n        &:hover {\n            background: ${props=>props.theme.brown};\n        }\n    }\n`\n\nfunction hexToRGB(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16),\n        g = parseInt(hex.slice(3, 5), 16),\n        b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n}\n\n// hexToRGB('#FF0000', 0.5);\n\nclass CanvasDraw2 extends Component {\n  \n    constructor(props){\n        super(props);\n      };\n  \n    state = {\n    color: \"#ffc60080\",\n    // width: 100,\n    // height: 100,\n    brushRadius: 10,\n    lazyRadius: 12,\n\n    theme: {\n        brown: \"#583539\",\n        purple: \"#B486BC\",\n        yellow: \"#FDB714\",\n        green: \"#88CCA4\",\n        pink: \"#E25085\"\n      }\n  };\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    // window.setInterval(() => {\n    //   this.setState({\n    //     color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n    //   });\n    // }, 2000);\n\n    console.log(\"image source \" + this.props.imgSrc)\n  }\n\n    changeColor = (color) =>{\n        color = hexToRGB(color, 0.5) \n        this.setState( {color : color})\n    }\n\n  render() {\n    return (\n      <DrawingWrapper theme={this.state.theme}>\n\n          <div id=\"toolbox\" className={classNames.tools}>\n           \n            {/* <div className=\"toolchunk\">\n              <label>Width:</label>\n              <input\n                type=\"number\"\n                value={this.state.width}\n                onChange={e =>\n                  this.setState({ width: parseInt(e.target.value, 10) })\n                }\n              />\n            </div>\n            <div className=\"toolchunk\">\n              <label>Height:</label>\n              <input\n                type=\"number\"\n                value={this.state.height}\n                onChange={e =>\n                  this.setState({ height: parseInt(e.target.value, 10) })\n                }\n              />\n            </div> */}\n            <div className=\"toolchunk\">\n              <label>Brush-Radius:</label>\n              <input\n                type=\"number\"\n                value={this.state.brushRadius}\n                onChange={e =>\n                  this.setState({ brushRadius: parseInt(e.target.value, 10) })\n                }\n              />\n            </div>\n            {/* <div className=\"toolchunk\">\n              <label>Lazy-Radius:</label>\n              <input\n                type=\"number\"\n                value={this.state.lazyRadius}\n                onChange={e =>\n                  this.setState({ lazyRadius: parseInt(e.target.value, 10) })\n                }\n              />\n            </div> */}\n\n            <div className=\"colorTools\">\n                <div onClick={(e)=>{e.preventDefault(); this.changeColor(this.state.theme.brown)}}   className=\"colorSelector\" id=\"color1\"></div>\n                <div onClick={(e)=>{e.preventDefault(); this.changeColor(this.state.theme.purple)}}     className=\"colorSelector\" id=\"color2\"></div>\n                <div onClick={(e)=>{e.preventDefault(); this.changeColor(this.state.theme.yellow)}}    className=\"colorSelector\" id=\"color3\"></div>\n                <div onClick={(e)=>{e.preventDefault(); this.changeColor(this.state.theme.green)}}    className=\"colorSelector\" id=\"color4\"></div>\n                <div onClick={(e)=>{e.preventDefault(); this.changeColor(this.state.theme.pink)}}    className=\"colorSelector\" id=\"color5\"></div>\n            </div>\n            <button\n              onClick={() => {\n                // console.log(\"hi\")\n                console.log()\n                // let dataURL = exportCanvas.toDataURL();\n                // console.log(dataURL)\n                localStorage.setItem(\n                  \"savedDrawing\",\n                  this.saveableCanvas.getSaveData()\n                );\n              }}\n            >\n              Save\n            </button>\n            <button\n              onClick={() => {\n                this.saveableCanvas.clear();\n              }}\n            >\n              Clear\n            </button>\n            <button\n              onClick={() => {\n                this.saveableCanvas.undo();\n              }}\n            >\n              Undo\n            </button>\n          </div>\n          \n          <CanvasDraw\n            id=\"exportCanvas\"\n            ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\n            brushColor={this.state.color}\n            brushRadius={this.state.brushRadius}\n            imgSrc= {this.props.imgSrc}\n            lazyRadius={this.state.lazyRadius}\n            canvasWidth={600}\n            canvasHeight={600}\n          />\n      </DrawingWrapper>\n        );\n  }\n}\n\nCanvasDraw2.propTypes = {\n    imgSrc: React.propTypes\n}\n\nexport default CanvasDraw2"]},"metadata":{},"sourceType":"module"}