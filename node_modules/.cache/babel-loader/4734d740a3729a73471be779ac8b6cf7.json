{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\n\nclass CompareImgInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'init',\n      answers: [\"test\"]\n    };\n\n    this.inputData = event => {\n      this.setState({\n        arr: event.target.value\n      });\n    };\n\n    this.newArr = this.props.data;\n\n    this.componentDidUpdate = () => {\n      if (this.props.data.includes(this.state.entry)) {\n        // alert(\"eeee\" + this.state.entry)\n        const str = this.state.entry;\n        alert(str);\n        var index = this.props.data.indexOf(this.state.entry);\n        this.props.data.splice(index, 1);\n      }\n    };\n\n    this.handleEntryChange = event => {\n      this.setState({\n        entry: event.target.value\n      });\n      console.log(\"test\");\n    };\n\n    this.renderAnswers = () => {\n      this.state.answers && this.state.answers.map((answers, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, answers));\n    };\n\n    this.submitData = this.submitData.bind(this);\n  }\n\n  submitData(event) {\n    event.preventDefault();\n    const arr = this.state.arr; // this.setState({answers: [\"test2\"]})\n\n    let tempArr = this.state.answers;\n    tempArr.push(\"test2\");\n    alert(tempArr);\n    this.setState({\n      answers: tempArr\n    });\n    alert(this.state.answers);\n  }\n\n  componentDidMount() {\n    console.log(this.props.data);\n    this.setState({\n      arr: this.props.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.entry, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      value: this.state.entry,\n      onChange: this.handleEntryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.answers.map((x, i) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, x))));\n  }\n\n}\n\nCompareImgInput.propTypes = {\n  data: React.propTypes\n};\nexport default CompareImgInput; // want to be able to update in html","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx"],"names":["React","Component","CompareImgInput","constructor","props","state","value","answers","inputData","event","setState","arr","target","newArr","data","componentDidUpdate","includes","entry","str","alert","index","indexOf","splice","handleEntryChange","console","log","renderAnswers","map","i","submitData","bind","preventDefault","tempArr","push","componentDidMount","render","x","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\n\nclass CompareImgInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.submitData = this.submitData.bind(this);\n\n      };\n\n\n    state = {\n        value: 'init',\n        answers: [\"test\"],\n    };\n\n    inputData = event =>{\n        this.setState({ arr: event.target.value});\n    };\n\n    submitData(event){\n        event.preventDefault();\n        const {arr} = this.state;\n        // this.setState({answers: [\"test2\"]})\n        let tempArr = this.state.answers;\n        tempArr.push(\"test2\");\n        alert(tempArr);\n        this.setState({answers: tempArr})\n        alert(this.state.answers)\n    };\n\n    newArr = this.props.data\n    \n    componentDidMount() {\n\n        console.log(this.props.data)\n        this.setState({\n            arr: this.props.data\n        })\n\n    };\n\n    componentDidUpdate = () => {\n\n            if(this.props.data.includes(this.state.entry)){\n                // alert(\"eeee\" + this.state.entry)\n                const str = this.state.entry\n\n                alert(str)\n\n                var index = this.props.data.indexOf(this.state.entry)\n                this.props.data.splice(index,1)\n\n            } \n\n    };\n\n\n    handleEntryChange = (event) => {\n\n        this.setState({\n            entry: event.target.value\n        })\n\n        console.log(\"test\")\n\n    };\n\n    renderAnswers = () => {\n        \n        this.state.answers && this.state.answers.map((answers, i) => (\n            <div>\n                {answers}\n            </div>\n        ))\n    };\n\n    render(){ \n        return(\n            <div>\n            <form >\n\n            {this.state.entry}\n            <br/>\n\n\n            <input name=\"title\" type=\"text\" value={this.state.entry} onChange={this.handleEntryChange} />\n             <input type=\"submit\" value=\"Submit\" onClick={this.submitData}  />\n            </form>\n            <div className=\"answers\">\n            {this.state.answers.map((x, i) => (\n                <div>{x}</div>\n            ))}\n            </div>\n            </div>\n\n        )\n      }\n\n}\n\nCompareImgInput.propTypes = {\n    data: React.propTypes\n}\n\nexport default CompareImgInput\n\n// want to be able to update in html"]},"metadata":{},"sourceType":"module"}