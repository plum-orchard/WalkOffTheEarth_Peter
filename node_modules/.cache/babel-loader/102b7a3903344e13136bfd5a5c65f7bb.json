{"ast":null,"code":"import _classCallCheck from \"/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from \"./Box\";\nimport BoardLogic from \"./BoardLogic\";\nimport \"./App.css\";\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"initialGameState\", function () {\n      _this.boardLogic = new BoardLogic(_this.props.data || _this.props.size);\n      return {\n        board: _this.props.data ? _this.boardLogic.matrix : _this.boardLogic.scramble(),\n        moves: 0,\n        isWin: _this.boardLogic.checkWin()\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"move\", function (i, j) {\n      if (_this.state.isWin) return;\n\n      if (_this.boardLogic.move(i, j)) {\n        _this.props.onMove(i, j);\n\n        _this.setState(function (prevState) {\n          return {\n            board: _this.boardLogic.matrix,\n            moves: prevState.moves + 1,\n            isWin: _this.boardLogic.checkWin()\n          };\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRow\", function (rowData, j) {\n      return React.createElement(\"div\", {\n        key: j\n      }, rowData.map(function (bNum, i) {\n        return React.createElement(Box, {\n          key: bNum,\n          boxNumber: bNum,\n          onClick: function onClick() {\n            return _this.move(i, j);\n          }\n        });\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"newGame\", function () {\n      _this.setState(_this.initialGameState());\n    });\n\n    _this.state = _this.initialGameState();\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.board.map(this.getRow);\n      var message = (this.state.isWin ? \"Winner !!! \" : \"Total \") + \"Moves: \".concat(this.state.moves);\n      return React.createElement(\"div\", {\n        className: \"slider-board\"\n      }, rows, React.createElement(\"span\", {\n        className: \"slider-msg\"\n      }, message), React.createElement(\"div\", {\n        className: \"btn-new-game\"\n      }, React.createElement(\"button\", {\n        onClick: this.newGame\n      }, \"New Game\")));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\n_defineProperty(Board, \"defaultProps\", {\n  size: 3,\n  onMove: function onMove(i, j) {}\n});\n\nBoard.propTypes = {\n  data: PropTypes.array,\n  size: PropTypes.number,\n  onMove: PropTypes.func\n};\nexport default Board;","map":{"version":3,"sources":["/Users/plum/Desktop/WalkOffTheEarth/walk-off-the-earth/node_modules/react-slider-game/dist/Board.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","PropTypes","Box","BoardLogic","Board","props","boardLogic","data","size","board","matrix","scramble","moves","isWin","checkWin","i","j","state","move","onMove","setState","prevState","rowData","createElement","map","bNum","boxNumber","onClick","initialGameState","rows","getRow","message","className","newGame","propTypes","array","number","func"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from \"./Box\";\nimport BoardLogic from \"./BoardLogic\";\nimport \"./App.css\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initialGameState\", () => {\n      this.boardLogic = new BoardLogic(this.props.data || this.props.size);\n      return {\n        board: this.props.data ? this.boardLogic.matrix : this.boardLogic.scramble(),\n        moves: 0,\n        isWin: this.boardLogic.checkWin()\n      };\n    });\n\n    _defineProperty(this, \"move\", (i, j) => {\n      if (this.state.isWin) return;\n\n      if (this.boardLogic.move(i, j)) {\n        this.props.onMove(i, j);\n        this.setState(prevState => ({\n          board: this.boardLogic.matrix,\n          moves: prevState.moves + 1,\n          isWin: this.boardLogic.checkWin()\n        }));\n      }\n    });\n\n    _defineProperty(this, \"getRow\", (rowData, j) => {\n      return React.createElement(\"div\", {\n        key: j\n      }, rowData.map((bNum, i) => React.createElement(Box, {\n        key: bNum,\n        boxNumber: bNum,\n        onClick: () => this.move(i, j)\n      })));\n    });\n\n    _defineProperty(this, \"newGame\", () => {\n      this.setState(this.initialGameState());\n    });\n\n    this.state = this.initialGameState();\n  }\n\n  render() {\n    let rows = this.state.board.map(this.getRow);\n    let message = (this.state.isWin ? \"Winner !!! \" : \"Total \") + `Moves: ${this.state.moves}`;\n    return React.createElement(\"div\", {\n      className: \"slider-board\"\n    }, rows, React.createElement(\"span\", {\n      className: \"slider-msg\"\n    }, message), React.createElement(\"div\", {\n      className: \"btn-new-game\"\n    }, React.createElement(\"button\", {\n      onClick: this.newGame\n    }, \"New Game\")));\n  }\n\n}\n\n_defineProperty(Board, \"defaultProps\", {\n  size: 3,\n  onMove: (i, j) => {}\n});\n\nBoard.propTypes = {\n  data: PropTypes.array,\n  size: PropTypes.number,\n  onMove: PropTypes.func\n};\nexport default Board;"]},"metadata":{},"sourceType":"module"}