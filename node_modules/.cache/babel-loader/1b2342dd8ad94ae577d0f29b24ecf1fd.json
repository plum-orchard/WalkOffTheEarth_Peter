{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\n\nclass CompareImgInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'init',\n      answers: [\"test\"]\n    };\n\n    this.inputData = event => {\n      this.setState({\n        arr: event.target.value\n      });\n    };\n\n    this.newArr = this.props.data;\n\n    this.componentDidUpdate = () => {\n      if (this.props.data.includes(this.state.entry)) {\n        alert(\"eeee\" + this.state.entry);\n        const str = this.state.entry;\n        alert(str);\n        var index = this.props.data.indexOf(this.state.entry);\n        this.props.data.splice(index, 1);\n        let tempArr = this.state.answers;\n        tempArr.concat(str);\n        alert(\"tempArr = \" + tempArr); // this.setState({\n        //     answers: tempArr\n        // })\n\n        if (this.state.answers !== tempArr) {\n          console.log(\"answers = \" + this.state.answers);\n        }\n      }\n    };\n\n    this.handleEntryChange = event => {\n      this.setState({\n        entry: event.target.value\n      });\n    };\n\n    this.renderAnswers = () => {\n      this.state.answers && this.state.answers.map((answers, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, answers));\n    };\n\n    this.submitData = this.submitData.bind(this);\n  }\n\n  submitData(event) {\n    event.preventDefault();\n    const arr = this.state.arr;\n    const matches = \"fuckkkk\";\n\n    if (matches) {\n      console.log(event.target.title);\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.props.data);\n    this.setState({\n      arr: this.props.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.entry, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.state.answers, React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      value: this.state.entry,\n      onChange: this.handleEntryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nCompareImgInput.propTypes = {\n  data: React.propTypes\n};\nexport default CompareImgInput; // want to be able to update in html","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/CompareImgInput.jsx"],"names":["React","Component","CompareImgInput","constructor","props","state","value","answers","inputData","event","setState","arr","target","newArr","data","componentDidUpdate","includes","entry","alert","str","index","indexOf","splice","tempArr","concat","console","log","handleEntryChange","renderAnswers","map","i","submitData","bind","preventDefault","matches","title","componentDidMount","render","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import tourStops from './data/tourStops';\n\nclass CompareImgInput extends Component{\n\n    constructor(props){\n        super(props);\n        this.submitData = this.submitData.bind(this);\n\n      };\n\n\n    state = {\n        value: 'init',\n        answers: [\"test\"],\n    };\n\n    inputData = event =>{\n        this.setState({ arr: event.target.value});\n    };\n\n    submitData(event){\n        event.preventDefault();\n        const {arr} = this.state;\n\n        const matches = \"fuckkkk\";\n        if(matches){\n\n            console.log(event.target.title)\n        }\n    };\n\n    newArr = this.props.data\n    \n    componentDidMount() {\n\n        console.log(this.props.data)\n        this.setState({\n            arr: this.props.data\n        })\n\n    };\n\n    componentDidUpdate = () => {\n\n            if(this.props.data.includes(this.state.entry)){\n                alert(\"eeee\" + this.state.entry)\n                const str = this.state.entry\n\n                alert(str)\n\n                var index = this.props.data.indexOf(this.state.entry)\n                this.props.data.splice(index,1)\n\n                let tempArr =this.state.answers\n                tempArr.concat(str)\n                alert(\"tempArr = \" + tempArr)\n                // this.setState({\n                //     answers: tempArr\n                // })\n\n\n                if(this.state.answers !== tempArr) {\n\n                    console.log(\"answers = \" + this.state.answers)\n                }   \n\n            } \n\n    };\n\n\n    handleEntryChange = (event) => {\n\n        this.setState({\n            entry: event.target.value\n        })\n\n    };\n\n    renderAnswers = () => {\n        \n        this.state.answers && this.state.answers.map((answers, i) => (\n            <div>\n                {answers}\n            </div>\n        ))\n    };\n\n    render(){ \n        return(\n            <div>\n          <form >\n\n            {this.state.entry}\n            <br/>\n            {this.state.answers}\n\n            <input name=\"title\" type=\"text\" value={this.state.entry} onChange={this.handleEntryChange} />\n             <input type=\"submit\" value=\"Submit\"  />\n          </form>\n            <div className=\"answers\">\n\n            </div>\n            </div>\n\n        )\n      }\n\n}\n\nCompareImgInput.propTypes = {\n    data: React.propTypes\n}\n\nexport default CompareImgInput\n\n// want to be able to update in html"]},"metadata":{},"sourceType":"module"}