{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Main from \"./components/Main.jsx\";\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props => props.color || \"red\"}\n\n`;\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`;\nconst MapListItem = styled.div`\n\n  background-color: gray;\n  min-height: 40px;\n  min-width: 300px;\n  margin: 10px;\n  display: block;\n\n`;\n\nconst RenderBadges = props => {\n  // const gameStatus = props.gameStatus\n  const badgeArray = props.badges; // console.log(badgeArray)\n\n  const mapBadges = badgeArray.map(x => React.createElement(Badge, {\n    color: \"hi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, x));\n  return mapBadges;\n};\n\nconst tourStops = [{\n  date: \"\",\n  city: \"San Francisco\",\n  venue: \"Palace of Fine Arts\",\n  game: \"crossword\"\n}, {\n  date: \"\",\n  city: \"Los Angeles\",\n  venue: \"Palace Theatre\",\n  game: \"puzzle\"\n}, {\n  date: \"\",\n  city: \"El Cajon\",\n  venue: \"The Magnolia\",\n  game: \"waldo\"\n}, {\n  date: \"\",\n  city: \"Riverside\",\n  venue: \"Fox Performing Arts Center\",\n  game: \"coloring\"\n}];\n\nconst RenderMapList = props => {\n  const locations = tourStops;\n\n  const changeGame = arg => {\n    // this.setState({ currentGame: \"crossword\"})\n    console.log(\"game type \" + arg);\n  }; // changeTheme = (arg) => {\n  //   this.setState({ theme: arg });\n  //   console.log(\"arg\" +\n  //     arg)\n  //   console.log(this.state.theme);\n  // }\n  // const mapList = locations.map((x) => <MapListItem onClick={changeGame.bind(\"crossword\")}>{x.city}</MapListItem>)\n\n\n  const mapList = locations.map(x => React.createElement(MapListItem, {\n    onClick: changeGame.bind(\"crossword\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, x.city)); // const mapList = locations.map((x) => <MapListItem>{x.city}</MapListItem>)\n\n  return mapList;\n};\n\nconst TourStopList = styled.div`\n\n`;\nconst MapRender = styled.div`\n\n  background-color: blue;\n  height: 100$;\n  width: 100%\n\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      currentGame: \"none\",\n      badges: [0, 0, 2, 0],\n      gameStart: true,\n      gameCompleted: false\n    };\n\n    this.componentDidMount = () => {// setState\n    };\n\n    this.componentDidUpdate = () => {// check badges\n      // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n    };\n\n    this.changeGame = arg => {\n      this.setState({\n        currentGame: arg\n      });\n    };\n  }\n\n  render() {\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(RenderBadges, {\n      gameStatus: gameStatus,\n      badges: this.state.badges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(MapRender, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walkofftheearth/src/App.js"],"names":["React","Component","styled","BrowserRouter","Router","Switch","Route","Link","Main","Scoreboard","div","Badge","props","color","MapContainer","Map","MapListItem","RenderBadges","badgeArray","badges","mapBadges","map","x","tourStops","date","city","venue","game","RenderMapList","locations","changeGame","arg","console","log","mapList","bind","TourStopList","MapRender","App","state","score","currentGame","gameStart","gameCompleted","componentDidMount","componentDidUpdate","setState","render","gameStatus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Main from \"./components/Main.jsx\"\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  padding: 20px;\n  background-color: ${props=>props.color || \"red\"}\n\n`\n\nconst MapContainer = styled.div`\n\n  background-color: yellow;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n\n`\n\nconst MapListItem = styled.div`\n\n  background-color: gray;\n  min-height: 40px;\n  min-width: 300px;\n  margin: 10px;\n  display: block;\n\n`\n\nconst RenderBadges = (props) => {\n\n  // const gameStatus = props.gameStatus\n  const badgeArray = props.badges\n\n  // console.log(badgeArray)\n\n  const mapBadges = badgeArray.map((x) => <Badge color=\"hi\">{x}</Badge>)\n\n  return mapBadges\n\n}\n\nconst tourStops = [\n  {\n    date: \"\",\n    city: \"San Francisco\",\n    venue: \"Palace of Fine Arts\",\n    game: \"crossword\"\n  },\n  {\n    date: \"\",\n    city: \"Los Angeles\",\n    venue: \"Palace Theatre\",\n    game: \"puzzle\"\n  },\n  {\n    date: \"\",\n    city: \"El Cajon\",\n    venue: \"The Magnolia\",\n    game: \"waldo\"\n  }\n  ,{\n    date: \"\",\n    city: \"Riverside\",\n    venue: \"Fox Performing Arts Center\",\n    game: \"coloring\"\n  }\n];\n\nconst RenderMapList = (props) => {\n\n  const locations = tourStops\n\n  const changeGame = (arg) => {\n\n    // this.setState({ currentGame: \"crossword\"})\n\n    console.log(\"game type \" + arg)\n\n  }\n\n\n\n  // changeTheme = (arg) => {\n\n  //   this.setState({ theme: arg });\n  //   console.log(\"arg\" +\n  //     arg)\n  //   console.log(this.state.theme);\n\n  // }\n\n\n\n\n  // const mapList = locations.map((x) => <MapListItem onClick={changeGame.bind(\"crossword\")}>{x.city}</MapListItem>)\n\n  const mapList = locations.map((x) => <MapListItem onClick={changeGame.bind(\"crossword\")}>{x.city}</MapListItem>)\n\n  // const mapList = locations.map((x) => <MapListItem>{x.city}</MapListItem>)\n\n  return mapList\n\n\n}\n\nconst TourStopList = styled.div`\n\n`\n\nconst MapRender = styled.div`\n\n  background-color: blue;\n  height: 100$;\n  width: 100%\n\n`\n\n\n\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    currentGame: \"none\",\n    badges: [0, 0, 2, 0],\n    gameStart: true,\n    gameCompleted: false,\n  }\n\n  componentDidMount = () => {\n\n\n    // setState\n\n  }\n\n  componentDidUpdate = () => {\n    \n    // check badges\n    // if badges are complete\n      // Change gameCompleted\n      // GivePrize\n\n  }\n\n  changeGame = (arg) => {\n    this.setState({ currentGame: arg })\n  }\n\n  render() {\n\n    const gameStatus = this.state.gameStart;\n    const locations = this.state.locations;\n\n\n    return (\n      <Router>\n        <div>\n\n          <Scoreboard>\n            <RenderBadges gameStatus={gameStatus} badges={this.state.badges} />\n          </Scoreboard>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n              <MapContainer>\n\n                <Map>\n\n                  <TourStopList>\n                    <RenderMapList />\n                  </TourStopList>\n\n                  <MapRender></MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n              {/* <Main /> */}\n            </Route>\n\n            <Route path=\"/map\">\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n          \n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}