{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport Slider from \"react-slider-game\";\nimport tourStops from './components/data/tourStops.jsx'; // import MemoryGame from \"react-memory-game\";\n\nimport mapVector from './components/mapVector';\nimport MemoryGame from \"./components/memoryGame\"; // import Drawing, { brushCustom } from 'react-drawing';\n\nimport CanvasDraw from \"react-canvas-draw\";\nimport CompareImgInput from \"./components/CompareImgInput\";\nimport crosswordLA from \"./components/data/crosswordLA\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport { timingSafeEqual } from 'crypto';\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  // background-color: lightblue;\n  display: flex;\n\n`;\nconst Badge = styled.div`\n\n  margin: 10px;\n  height: 30px;\n  width: 30px;\n  background-image: ${props => \"url(\" + props.star + \")\"};\n  background-size: cover;\n\n`;\nconst MapContainer = styled.div`\n\n  background-image: url(img/background.jpg);\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n`;\nconst MapNavigator = styled.div`\n\n  display: flex;\n  padding: 10px;\n\n  a {\n    margin: 0 10px;\n  }\n\n`;\nconst Map = styled.div`\n\n  // background-color: orange;\n  // border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n  border: 3px solid ${props => props.theme.brown};\n  border-radius: 3px;\n\n\n  .state {\n    transition: .2s ease;\n    fill: ${props => props.theme.pink};\n    stroke-width: 10px;\n    stroke: ${props => props.theme.brown};\n    &:hover {\n      fill: ${props => props.theme.green};\n    }\n  }\n\n  .city {\n    transition: .2s ease;\n    fill: ${props => props.theme.yellow};\n    stroke-width: 10px;\n    stroke: white;\n    &:hover {\n      fill: ${props => props.theme.green};\n      stroke:${props => props.theme.yellow};\n    }\n  }\n\n.crossword__grid-background {\n  fill: ${props => props.theme.brown};\n}\n\n`;\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .date {\n    background-color: ${props => props.theme.brown};\n    color: white;\n    padding: 5px;\n    width: 40px;\n    display: flex;\n    border-radius: 5px;\n  }\n`;\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`;\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n  background-color: white;\n  padding-left: 10px;\n\n`;\nconst MapRender = styled.div`\n\n  padding: 15px;\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  .compareImageInput {\n    width: 400px;\n  }\n\n`;\nconst GameWrap = styled.div`\n\n  height: 100%;\n  width: 100%;\n  // background-color: red;\n\n`;\nconst MapListBadgeCrossword = styled.div`\n\n  height: 20px;\n  width: 20px;\n  // background-color:  blue;\n  background-image: url(img/crossword-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst MapListBadgeColoring = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/coloring-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst MapListBadgeWaldo = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/waldo-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst MapListBadgePuzzle = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/puzzle-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`;\nconst DrawingWrap = styled.div`\n\n  height: 500px;\n  width: 500px;\n  // background-color: white;\n  background-image: ${props => props.coloringImage}\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      completedCrosswords: 0,\n      completedColoring: 0,\n      completedPuzzle: 0,\n      completedWaldo: 0,\n      gameStart: true,\n      gameCompleted: false,\n      gameState: 0,\n      currentGame: \"home\",\n      currentCity: \"no city\",\n      currentState: \"no state\",\n      currentDate: \"no date\",\n      currentData: \"no data\",\n      currentData2: \"no data2\",\n      modalShown: false,\n      theme: {\n        brown: \"#583539\",\n        purple: \"#B486BC\",\n        yellow: \"#FDB714\",\n        green: \"#88CCA4\",\n        pink: \"#E25085\"\n      }\n    };\n\n    this.componentDidMount = () => {};\n\n    this.componentDidUpdate = () => {\n      console.log(\"component did update // current game = \" + this.state.currentGame);\n      console.log(\"component did update // current data = \" + this.state.currentData);\n      console.log(\"data2 = \" + this.state.currentData2);\n\n      if (this.state.completedCrosswords > 0 && this.state.completedColoring > 0 && this.state.completedPuzzle > 0 && this.state.completedWaldo > 0 && this.state.gameState === 0) {\n        this.setState({\n          gameState: 1\n        });\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        gameCompleted: true\n      });\n    };\n\n    this.changeGame = (game, city, state, date, data, data2) => {\n      const newGame = game;\n      const newCity = city;\n      const newState = state;\n      const newDate = date;\n      const newData = data;\n      const newData2 = data2;\n      this.setState({\n        currentGame: newGame\n      });\n      this.setState({\n        currentCity: newCity\n      });\n      this.setState({\n        currentAction: newState\n      });\n      this.setState({\n        currentDate: newDate\n      });\n      this.setState({\n        currentData: newData\n      });\n      this.setState({\n        currentData2: newData2\n      });\n      console.log(\"previous game \" + this.state.currentGame);\n      this.completeCurrentGame(newGame);\n    };\n\n    this.gameColor = arg => {\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return \"blue\";\n\n        case \"coloring\":\n          return \"orange\";\n\n        case \"puzzle\":\n          return \"pink\";\n\n        case \"waldo\":\n          return \"gray\";\n\n        case \"home\":\n          return \"lightblue\";\n      }\n    };\n\n    this.completeCurrentGame = arg => {\n      const expr = arg;\n      console.log(\"score added for \" + expr);\n\n      switch (expr) {\n        case \"crossword\":\n          this.setState({\n            completedCrosswords: this.state.completedCrosswords + 1\n          });\n          return;\n\n        case \"coloring\":\n          this.setState({\n            completedColoring: this.state.completedColoring + 1\n          });\n          return;\n\n        case \"puzzle\":\n          this.setState({\n            completedPuzzle: this.state.completedPuzzle + 1\n          });\n          return;\n\n        case \"waldo\":\n          this.setState({\n            completedWaldo: this.state.completedWaldo + 1\n          });\n          return;\n      }\n    };\n\n    this.renderGame = (arg, data) => {\n      const expr = arg;\n\n      switch (expr) {\n        case \"home\":\n          return mapVector(this.changeGame);\n\n        case \"crossword\":\n          return React.createElement(Crossword, {\n            data: crosswordLA,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325\n            },\n            __self: this\n          });\n\n        case \"coloring\":\n          return React.createElement(DrawingWrap, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327\n            },\n            __self: this\n          }, React.createElement(CanvasDraw, {\n            brushColor: \"red\",\n            imgSrc: \"./img/\" + this.state.currentData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328\n            },\n            __self: this\n          }));\n\n        case \"puzzle\":\n          return React.createElement(Slider, {\n            size: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          });\n\n        case \"waldo\":\n          return React.createElement(CompareImgInput, {\n            className: \"compareImageInput\",\n            data: this.state.currentData,\n            rightImage: this.state.currentData2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          });\n      }\n    };\n\n    this.renderMapListBadge = arg => {\n      const expr = arg;\n\n      switch (expr) {\n        case \"crossword\":\n          return React.createElement(MapListBadgeCrossword, {\n            type: expr,\n            count: this.state.completedCrosswords,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350\n            },\n            __self: this\n          });\n\n        case \"coloring\":\n          return React.createElement(MapListBadgeColoring, {\n            type: expr,\n            count: this.state.completedColoring,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352\n            },\n            __self: this\n          });\n\n        case \"puzzle\":\n          return React.createElement(MapListBadgePuzzle, {\n            type: expr,\n            count: this.state.completedPuzzle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 354\n            },\n            __self: this\n          });\n\n        case \"waldo\":\n          return React.createElement(MapListBadgeWaldo, {\n            type: expr,\n            count: this.state.completedWaldo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          });\n      }\n    };\n  }\n\n  renderCompletionStatus(game, count) {\n    const expr = game;\n\n    if (count > 2) {\n      return \"'img/\" + expr + \"-0\" + \"3\" + \".png'\";\n    }\n\n    let badgeString = \"'img/\" + expr + \"-0\" + count + \".png'\";\n    console.log(badgeString);\n    return badgeString;\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      star: this.renderCompletionStatus(\"crossword\", this.state.completedCrosswords),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      star: this.renderCompletionStatus(\"coloring\", this.state.completedColoring),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      star: this.renderCompletionStatus(\"puzzle\", this.state.completedPuzzle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      star: this.renderCompletionStatus(\"waldo\", this.state.completedWaldo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })), React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(MapNavigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Tour Dates\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Map, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(TourStopList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(RenderMapList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, tourStops && tourStops.map((x, i) => React.createElement(MapListItem, {\n      theme: this.state.theme,\n      onClick: this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data, x.data2, x.title, x.instructions),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, x.date1), \"/\", React.createElement(\"span\", {\n      className: \"date1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, x.date2)), React.createElement(\"span\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, x.city, \" \")), this.renderMapListBadge(x.game))))), React.createElement(MapRender, {\n      currentGame: this.state.currentGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(GameWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, this.renderGame(this.state.currentGame)))))), React.createElement(Route, {\n      path: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(CompareImgInput, {\n      data: this.state.currentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/App.js"],"names":["React","Component","styled","Crossword","Slider","tourStops","mapVector","MemoryGame","CanvasDraw","CompareImgInput","crosswordLA","BrowserRouter","Router","Switch","Route","Link","timingSafeEqual","Scoreboard","div","Badge","props","star","MapContainer","MapNavigator","Map","theme","brown","pink","green","yellow","MapListItem","RenderMapList","TourStopList","MapRender","gameColor","GameWrap","MapListBadgeCrossword","MapListBadgeColoring","MapListBadgeWaldo","MapListBadgePuzzle","DrawingWrap","coloringImage","App","state","score","completedCrosswords","completedColoring","completedPuzzle","completedWaldo","gameStart","gameCompleted","gameState","currentGame","currentCity","currentState","currentDate","currentData","currentData2","modalShown","purple","componentDidMount","componentDidUpdate","console","log","setState","finishGame","changeGame","game","city","date","data","data2","newGame","newCity","newState","newDate","newData","newData2","currentAction","completeCurrentGame","arg","expr","renderGame","renderMapListBadge","renderCompletionStatus","count","badgeString","render","map","x","i","bind","title","instructions","date1","date2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Crossword from \"react-crossword\";\nimport Slider from \"react-slider-game\";\nimport tourStops from './components/data/tourStops.jsx';\n// import MemoryGame from \"react-memory-game\";\nimport mapVector from './components/mapVector';\nimport MemoryGame from \"./components/memoryGame\";\n// import Drawing, { brushCustom } from 'react-drawing';\nimport CanvasDraw from \"react-canvas-draw\";\nimport CompareImgInput from \"./components/CompareImgInput\";\nimport crosswordLA from \"./components/data/crosswordLA\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport { timingSafeEqual } from 'crypto';\n\nconst Scoreboard = styled.div`\n\n  padding: 40px;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  // background-color: lightblue;\n  display: flex;\n\n`\nconst Badge = styled.div`\n\n  margin: 10px;\n  height: 30px;\n  width: 30px;\n  background-image: ${props => \"url(\" + props.star + \")\"};\n  background-size: cover;\n\n`\n\nconst MapContainer = styled.div`\n\n  background-image: url(img/background.jpg);\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n`\n\nconst MapNavigator = styled.div`\n\n  display: flex;\n  padding: 10px;\n\n  a {\n    margin: 0 10px;\n  }\n\n`\n\nconst Map = styled.div`\n\n  // background-color: orange;\n  // border: 1px solid red;\n  height: 600px;\n  width: 1200px;\n  display: flex;\n  border: 3px solid ${props => props.theme.brown};\n  border-radius: 3px;\n\n\n  .state {\n    transition: .2s ease;\n    fill: ${props => props.theme.pink};\n    stroke-width: 10px;\n    stroke: ${props => props.theme.brown};\n    &:hover {\n      fill: ${props => props.theme.green};\n    }\n  }\n\n  .city {\n    transition: .2s ease;\n    fill: ${props => props.theme.yellow};\n    stroke-width: 10px;\n    stroke: white;\n    &:hover {\n      fill: ${props => props.theme.green};\n      stroke:${props => props.theme.yellow};\n    }\n  }\n\n.crossword__grid-background {\n  fill: ${props => props.theme.brown};\n}\n\n`\n\nconst MapListItem = styled.div`\n\n  // background-color: gray;\n  min-height: 40px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .date {\n    background-color: ${props => props.theme.brown};\n    color: white;\n    padding: 5px;\n    width: 40px;\n    display: flex;\n    border-radius: 5px;\n  }\n`\n\nconst RenderMapList = styled.div`\n\n  overflow: scroll;\n\n`\n\nconst TourStopList = styled.div`\n\n  overflow: scroll;\n  width: 400px;\n  background-color: white;\n  padding-left: 10px;\n\n`\n\nconst MapRender = styled.div`\n\n  padding: 15px;\n  background-color: ${props => props.gameColor};\n  height: 100$;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  .compareImageInput {\n    width: 400px;\n  }\n\n`\n\nconst GameWrap = styled.div`\n\n  height: 100%;\n  width: 100%;\n  // background-color: red;\n\n`\n\nconst MapListBadgeCrossword = styled.div`\n\n  height: 20px;\n  width: 20px;\n  // background-color:  blue;\n  background-image: url(img/crossword-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\n\nconst MapListBadgeColoring = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/coloring-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\nconst MapListBadgeWaldo = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/waldo-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\nconst MapListBadgePuzzle = styled.div`\n\n  height: 20px;\n  width: 20px;\n  background-image: url(img/puzzle-01.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n\n`\n\nconst DrawingWrap = styled.div`\n\n  height: 500px;\n  width: 500px;\n  // background-color: white;\n  background-image: ${props => props.coloringImage}\n`\n\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n\n    completedCrosswords: 0,\n    completedColoring: 0,\n    completedPuzzle: 0,\n    completedWaldo: 0,\n\n    gameStart: true,\n    gameCompleted: false,\n    gameState: 0,\n\n    currentGame: \"home\",\n    currentCity: \"no city\",\n    currentState: \"no state\",\n    currentDate: \"no date\",\n    currentData: \"no data\",\n    currentData2: \"no data2\",\n\n    modalShown: false,\n\n    theme: {\n      brown: \"#583539\",\n      purple: \"#B486BC\",\n      yellow: \"#FDB714\",\n      green: \"#88CCA4\",\n      pink: \"#E25085\"\n    }\n  }\n\n  componentDidMount = () => {\n\n  }\n\n  componentDidUpdate = () => {\n\n    console.log(\"component did update // current game = \" + this.state.currentGame)\n    console.log(\"component did update // current data = \" + this.state.currentData)\n    console.log(\"data2 = \" + this.state.currentData2)\n\n    if (this.state.completedCrosswords > 0 && this.state.completedColoring > 0 && this.state.completedPuzzle > 0 && this.state.completedWaldo > 0 && this.state.gameState === 0) {\n      this.setState({gameState: 1})\n    }\n\n  }\n\n  finishGame = () => {\n\n    this.setState({ gameCompleted: true });\n\n  }\n\n  changeGame = (game, city, state, date, data, data2) => {\n    const newGame = game;\n    const newCity = city;\n    const newState = state;\n    const newDate = date;\n    const newData = data;\n    const newData2 = data2;\n    this.setState({ currentGame: newGame });\n    this.setState({ currentCity: newCity });\n    this.setState({ currentAction: newState });\n    this.setState({ currentDate: newDate });\n    this.setState({ currentData: newData });\n    this.setState({ currentData2: newData2 });\n    console.log(\"previous game \" + this.state.currentGame);\n    this.completeCurrentGame(newGame)\n  }\n\n  gameColor = (arg) => {\n\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return \"blue\";\n      case \"coloring\":\n        return \"orange\";\n      case \"puzzle\":\n        return \"pink\";\n      case \"waldo\":\n        return \"gray\";\n      case \"home\":\n        return \"lightblue\";\n    }\n  }\n\n  completeCurrentGame = (arg) => {\n    const expr = arg\n    console.log(\"score added for \" + expr)\n    switch (expr) {\n      case \"crossword\":\n        this.setState({ completedCrosswords: (this.state.completedCrosswords + 1) })\n        return;\n      case \"coloring\":\n        this.setState({ completedColoring: (this.state.completedColoring + 1) })\n        return;\n      case \"puzzle\":\n        this.setState({ completedPuzzle: (this.state.completedPuzzle + 1) })\n        return;\n      case \"waldo\":\n        this.setState({ completedWaldo: (this.state.completedWaldo + 1) })\n        return;\n    }\n  }\n\n  renderGame = (arg, data) => {\n    const expr = arg\n    switch (expr) {\n      case \"home\":\n        return mapVector(this.changeGame)\n      case \"crossword\":\n        return <Crossword data={crosswordLA} />;\n      case \"coloring\":\n        return <DrawingWrap >\n          <CanvasDraw brushColor={\"red\"} imgSrc={\"./img/\" + this.state.currentData} />\n          {/* <button\n            onClick={() => {\n              localStorage.setItem(\n                \"savedDrawing\",\n                this.saveableCanvas.getSaveData()\n              );\n            }}\n          >save</button> */}\n        </DrawingWrap>\n      case \"puzzle\":\n        return <Slider size={2} />;\n        case \"waldo\":\n          return <CompareImgInput className=\"compareImageInput\" data={this.state.currentData} rightImage={this.state.currentData2}/>\n    }\n\n  }\n\n  renderMapListBadge = (arg) => {\n    const expr = arg\n    switch (expr) {\n      case \"crossword\":\n        return <MapListBadgeCrossword type={expr} count={this.state.completedCrosswords}/>;\n      case \"coloring\":\n        return <MapListBadgeColoring type={expr} count={this.state.completedColoring}/>;\n      case \"puzzle\":\n        return <MapListBadgePuzzle type={expr} count={this.state.completedPuzzle}/>;\n      case \"waldo\":\n        return <MapListBadgeWaldo type={expr} count={this.state.completedWaldo}/>;\n      }\n  }\n\n  renderCompletionStatus(game, count) {\n    const expr = game\n    if (count > 2) {\n      return \"'img/\" + expr + \"-0\" + \"3\" + \".png'\"\n    }\n\n    let badgeString = \"'img/\" + expr + \"-0\" + count + \".png'\"\n    console.log(badgeString)\n    return badgeString\n\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div>\n\n\n\n          <Switch>\n\n            <Route exact path=\"/\">\n\n            <Scoreboard>\n            {/* <RenderBadges gameStatus={gameStatus} badges={this.state.badges} /> */}\n          \n            <Badge star={this.renderCompletionStatus(\"crossword\", this.state.completedCrosswords)}></Badge>            \n\n            <Badge star={this.renderCompletionStatus(\"coloring\", this.state.completedColoring)}></Badge>            \n            <Badge star={this.renderCompletionStatus(\"puzzle\", this.state.completedPuzzle)}></Badge>            \n            <Badge star={this.renderCompletionStatus(\"waldo\", this.state.completedWaldo)}></Badge>            \n          {/* {this.state.gameState} */}\n          </Scoreboard>\n\n              <MapContainer>\n                <MapNavigator>\n                  <button>Home</button>\n                  <button>Tour Dates</button>\n                  <button>Home</button>\n                  <button>Home</button>\n                  <button>Home</button>\n                </MapNavigator>\n\n                <Map theme={this.state.theme}>\n\n                  <TourStopList>\n                    <RenderMapList>\n\n                      {tourStops && tourStops.map((x, i) => (\n                        <MapListItem theme={this.state.theme} onClick={\n                          this.changeGame.bind(this, x.game, x.city, x.state, x.date, x.data, x.data2, x.title, x.instructions)\n                        }  >\n                          <div>\n                            <div className=\"date\"><span className=\"date1\">{x.date1}</span>/<span className=\"date1\">{x.date2}</span>\n                          </div> \n                          <span className=\"city\">{x.city} </span>\n                          </div>\n                          {this.renderMapListBadge(x.game)}\n                        </MapListItem>\n                      ))\n                      }\n\n                    </RenderMapList>\n                  </TourStopList>\n\n                  <MapRender currentGame={this.state.currentGame}>\n                    <GameWrap>\n                      {this.renderGame(this.state.currentGame)}\n                    </GameWrap>\n                  </MapRender>\n\n                </Map>\n\n              </MapContainer>\n\n            </Route>\n\n            <Route path=\"/map\">\n            <CompareImgInput data={this.state.currentData}/>\n            </Route>\n            <Route path=\"/*\">\n            </Route>\n          </Switch>\n\n        </div>\n\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}