{"ast":null,"code":"var _jsxFileName = \"/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing.jsx\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport classNames from \"./drawing.css\";\n\nclass CanvasDraw2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"#ffc600\",\n      // width: 100,\n      // height: 100,\n      brushRadius: 10,\n      lazyRadius: 12\n    };\n  }\n\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    window.setInterval(() => {\n      this.setState({\n        color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n      });\n    }, 2000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames.tools,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        localStorage.setItem(\"savedDrawing\", this.saveableCanvas.getSaveData());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.saveableCanvas.clear();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.saveableCanvas.undo();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Undo\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Width:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.width,\n      onChange: e => this.setState({\n        width: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Height:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.height,\n      onChange: e => this.setState({\n        height: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Brush-Radius:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.brushRadius,\n      onChange: e => this.setState({\n        brushRadius: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Lazy-Radius:\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.lazyRadius,\n      onChange: e => this.setState({\n        lazyRadius: parseInt(e.target.value, 10)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(CanvasDraw, {\n      ref: canvasDraw => this.saveableCanvas = canvasDraw,\n      brushColor: this.state.color,\n      brushRadius: this.state.brushRadius,\n      lazyRadius: this.state.lazyRadius,\n      canvasWidth: this.state.width,\n      canvasHeight: this.state.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CanvasDraw2;","map":{"version":3,"sources":["/Users/kmacaraeg/Documents/Projects/Walk off the Earth/walk-off-the-earth/src/components/Drawing.jsx"],"names":["React","Component","render","CanvasDraw","classNames","CanvasDraw2","state","color","brushRadius","lazyRadius","componentDidMount","window","setInterval","setState","Math","floor","random","toString","tools","localStorage","setItem","saveableCanvas","getSaveData","clear","undo","width","e","parseInt","target","value","height","canvasDraw"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nimport CanvasDraw from \"react-canvas-draw\";\nimport classNames from \"./drawing.css\";\n\nclass CanvasDraw2 extends Component {\n  state = {\n    color: \"#ffc600\",\n    // width: 100,\n    // height: 100,\n    brushRadius: 10,\n    lazyRadius: 12\n  };\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    window.setInterval(() => {\n      this.setState({\n        color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n      });\n    }, 2000);\n  }\n  render() {\n    return (\n      <div>\n        <div className={classNames.tools}>\n          <button\n            onClick={() => {\n              localStorage.setItem(\n                \"savedDrawing\",\n                this.saveableCanvas.getSaveData()\n              );\n            }}\n          >\n            Save\n          </button>\n          <button\n            onClick={() => {\n              this.saveableCanvas.clear();\n            }}\n          >\n            Clear\n          </button>\n          <button\n            onClick={() => {\n              this.saveableCanvas.undo();\n            }}\n          >\n            Undo\n          </button>\n          <div>\n            <label>Width:</label>\n            <input\n              type=\"number\"\n              value={this.state.width}\n              onChange={e =>\n                this.setState({ width: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n          <div>\n            <label>Height:</label>\n            <input\n              type=\"number\"\n              value={this.state.height}\n              onChange={e =>\n                this.setState({ height: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n          <div>\n            <label>Brush-Radius:</label>\n            <input\n              type=\"number\"\n              value={this.state.brushRadius}\n              onChange={e =>\n                this.setState({ brushRadius: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n          <div>\n            <label>Lazy-Radius:</label>\n            <input\n              type=\"number\"\n              value={this.state.lazyRadius}\n              onChange={e =>\n                this.setState({ lazyRadius: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n        </div>\n        <CanvasDraw\n          ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\n          brushColor={this.state.color}\n          brushRadius={this.state.brushRadius}\n          lazyRadius={this.state.lazyRadius}\n          canvasWidth={this.state.width}\n          canvasHeight={this.state.height}\n        />\n       \n      </div>\n    );\n  }\n}\n\nexport default CanvasDraw2"]},"metadata":{},"sourceType":"module"}